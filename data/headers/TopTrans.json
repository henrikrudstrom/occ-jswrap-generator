{
  "headers": [
    "TopTrans_Array2OfOrientation.hxx", 
    "TopTrans_CurveTransition.hxx", 
    "TopTrans_SurfaceTransition.hxx"
  ], 
  "declarations": [
    {
      "declType": "class", 
      "name": "TopTrans_CurveTransition", 
      "abstract": false, 
      "declarations": [
        {
          "key": "TopTrans_CurveTransition::TopTrans_CurveTransition()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "TopTrans_CurveTransition", 
          "name": "TopTrans_CurveTransition", 
          "return": {
            "type": "TopTrans_CurveTransition", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_CurveTransition::TopTrans_CurveTransition(TopTrans_CurveTransition)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "TopTrans_CurveTransition", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "TopTrans_CurveTransition", 
          "name": "TopTrans_CurveTransition", 
          "return": {
            "type": "TopTrans_CurveTransition", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "TopTrans_CurveTransition::Reset(gp_Dir, gp_Dir, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Tgt", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "Norm", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Curv", 
              "const": true
            }
          ], 
          "parent": "TopTrans_CurveTransition", 
          "name": "Reset", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_CurveTransition::Reset(gp_Dir)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Tgt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "TopTrans_CurveTransition", 
          "name": "Reset", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_CurveTransition::Compare(Standard_Real, gp_Dir, gp_Dir, Standard_Real, TopAbs_Orientation, TopAbs_Orientation)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Tole", 
              "const": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "Tang", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "Norm", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Curv", 
              "const": true
            }, 
            {
              "type": "TopAbs_Orientation", 
              "name": "S", 
              "const": true
            }, 
            {
              "type": "TopAbs_Orientation", 
              "name": "Or", 
              "const": true
            }
          ], 
          "parent": "TopTrans_CurveTransition", 
          "name": "Compare", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_CurveTransition::StateBefore()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "TopTrans_CurveTransition", 
          "name": "StateBefore", 
          "return": {
            "type": "TopAbs_State"
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_CurveTransition::StateAfter()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "TopTrans_CurveTransition", 
          "name": "StateAfter", 
          "return": {
            "type": "TopAbs_State"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/TopTrans_CurveTransition.hxx", 
        51
      ], 
      "key": "TopTrans_CurveTransition"
    }, 
    {
      "declType": "class", 
      "name": "TopTrans_SurfaceTransition", 
      "abstract": false, 
      "declarations": [
        {
          "key": "TopTrans_SurfaceTransition::TopTrans_SurfaceTransition()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "TopTrans_SurfaceTransition", 
          "name": "TopTrans_SurfaceTransition", 
          "return": {
            "type": "TopTrans_SurfaceTransition", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_SurfaceTransition::TopTrans_SurfaceTransition(TopTrans_SurfaceTransition)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "TopTrans_SurfaceTransition", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "TopTrans_SurfaceTransition", 
          "name": "TopTrans_SurfaceTransition", 
          "return": {
            "type": "TopTrans_SurfaceTransition", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "TopTrans_SurfaceTransition::Reset(gp_Dir, gp_Dir, gp_Dir, gp_Dir, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Tgt", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "Norm", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "MaxD", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "MinD", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MaxCurv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinCurv", 
              "const": true
            }
          ], 
          "parent": "TopTrans_SurfaceTransition", 
          "name": "Reset", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_SurfaceTransition::Reset(gp_Dir, gp_Dir)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Tgt", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "Norm", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "TopTrans_SurfaceTransition", 
          "name": "Reset", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_SurfaceTransition::Compare(Standard_Real, gp_Dir, gp_Dir, gp_Dir, Standard_Real, Standard_Real, TopAbs_Orientation, TopAbs_Orientation)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Tole", 
              "const": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "Norm", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "MaxD", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "MinD", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MaxCurv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinCurv", 
              "const": true
            }, 
            {
              "type": "TopAbs_Orientation", 
              "name": "S", 
              "const": true
            }, 
            {
              "type": "TopAbs_Orientation", 
              "name": "O", 
              "const": true
            }
          ], 
          "parent": "TopTrans_SurfaceTransition", 
          "name": "Compare", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_SurfaceTransition::Compare(Standard_Real, gp_Dir, TopAbs_Orientation, TopAbs_Orientation)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Tole", 
              "const": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "Norm", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "TopAbs_Orientation", 
              "name": "S", 
              "const": true
            }, 
            {
              "type": "TopAbs_Orientation", 
              "name": "O", 
              "const": true
            }
          ], 
          "parent": "TopTrans_SurfaceTransition", 
          "name": "Compare", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_SurfaceTransition::StateBefore()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "TopTrans_SurfaceTransition", 
          "name": "StateBefore", 
          "return": {
            "type": "TopAbs_State"
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_SurfaceTransition::StateAfter()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "TopTrans_SurfaceTransition", 
          "name": "StateAfter", 
          "return": {
            "type": "TopAbs_State"
          }, 
          "throws": true
        }, 
        {
          "key": "TopTrans_SurfaceTransition::GetBefore(TopAbs_Orientation)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "TopAbs_Orientation", 
              "name": "Tran", 
              "const": true
            }
          ], 
          "parent": "TopTrans_SurfaceTransition", 
          "name": "GetBefore", 
          "return": {
            "type": "TopAbs_State"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "TopTrans_SurfaceTransition::GetAfter(TopAbs_Orientation)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "TopAbs_Orientation", 
              "name": "Tran", 
              "const": true
            }
          ], 
          "parent": "TopTrans_SurfaceTransition", 
          "name": "GetAfter", 
          "return": {
            "type": "TopAbs_State"
          }, 
          "static": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/TopTrans_SurfaceTransition.hxx", 
        55
      ], 
      "key": "TopTrans_SurfaceTransition"
    }, 
    {
      "type": "NCollection_Array2<TopAbs_Orientation>", 
      "declType": "typedef", 
      "name": "TopTrans_Array2OfOrientation", 
      "key": "TopTrans_Array2OfOrientation"
    }
  ], 
  "name": "TopTrans"
}