{
  "headers": [
    "Bnd_B3f.hxx", 
    "Bnd_HArray1OfBox.hxx", 
    "Bnd_SeqOfBox.hxx", 
    "Bnd_HArray1OfBox2d.hxx", 
    "Bnd_Array1OfSphere.hxx", 
    "Bnd_Range.hxx", 
    "Bnd_B2d.hxx", 
    "Bnd_Array1OfBox.hxx", 
    "Bnd_Array1OfBox2d.hxx", 
    "Bnd_B3d.hxx", 
    "Bnd_Box.hxx", 
    "Bnd_B2f.hxx", 
    "Bnd_HArray1OfSphere.hxx", 
    "Bnd_Box2d.hxx", 
    "Bnd_Sphere.hxx", 
    "Bnd_BoundSortBox.hxx", 
    "Bnd_BoundSortBox2d.hxx"
  ], 
  "declarations": [
    {
      "declType": "class", 
      "name": "Bnd_B3f", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_B3f::Bnd_B3f()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Bnd_B3f", 
          "name": "Bnd_B3f", 
          "return": {
            "type": "Bnd_B3f", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::Bnd_B3f(gp_XYZ, gp_XYZ)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "theHSize", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "Bnd_B3f", 
          "return": {
            "type": "Bnd_B3f", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::Bnd_B3f(Bnd_B3f)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_B3f", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "Bnd_B3f", 
          "return": {
            "type": "Bnd_B3f", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_B3f::IsVoid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B3f", 
          "name": "IsVoid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B3f", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::Add(gp_XYZ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::Add(gp_Pnt)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::Add(Bnd_B3f)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3f", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::CornerMin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B3f", 
          "name": "CornerMin", 
          "return": {
            "type": "gp_XYZ"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::CornerMax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B3f", 
          "name": "CornerMax", 
          "return": {
            "type": "gp_XYZ"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::SquareExtent()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B3f", 
          "name": "SquareExtent", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::Enlarge(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theDiff", 
              "const": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "Enlarge", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::Limit(Bnd_B3f)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3f", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "Limit", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::Transformed(gp_Trsf)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "Transformed", 
          "return": {
            "type": "Bnd_B3f"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::IsOut(gp_XYZ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::IsOut(gp_XYZ, Standard_Real, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "isSphereHollow", 
              "default": "false", 
              "const": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::IsOut(Bnd_B3f)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3f", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::IsOut(Bnd_B3f, gp_Trsf)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3f", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::IsOut(gp_Ax1, Standard_Boolean, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "theLine", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "isRay", 
              "default": "false", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theOverthickness", 
              "default": "0.", 
              "const": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::IsOut(gp_Ax3)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "thePlane", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::IsIn(Bnd_B3f)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3f", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "IsIn", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::IsIn(Bnd_B3f, gp_Trsf)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3f", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "IsIn", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::SetCenter(gp_XYZ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "SetCenter", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3f::SetHSize(gp_XYZ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theHSize", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3f", 
          "name": "SetHSize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Bnd_B3f.hxx", 
        36
      ], 
      "key": "Bnd_B3f"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_Box", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_Box::Bnd_Box()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "Bnd_Box", 
          "return": {
            "type": "Bnd_Box", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Bnd_Box(Bnd_Box)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_Box", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Bnd_Box", 
          "return": {
            "type": "Bnd_Box", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_Box::SetWhole()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "SetWhole", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::SetVoid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "SetVoid", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Set(gp_Pnt)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Set", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Set(gp_Pnt, gp_Dir)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "D", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Set", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Update(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "aXmin", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aYmin", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aZmin", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aXmax", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aYmax", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aZmax", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Update", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Update(Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Z", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Update", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::GetGap()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "GetGap", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::SetGap(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "SetGap", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Enlarge(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Enlarge", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Get(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theXmin", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theYmin", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theZmin", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theXmax", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theYmax", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theZmax", 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Get", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::CornerMin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "CornerMin", 
          "return": {
            "type": "gp_Pnt"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::CornerMax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "CornerMax", 
          "return": {
            "type": "gp_Pnt"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::OpenXmin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "OpenXmin", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::OpenXmax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "OpenXmax", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::OpenYmin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "OpenYmin", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::OpenYmax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "OpenYmax", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::OpenZmin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "OpenZmin", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::OpenZmax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "OpenZmax", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOpenXmin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "IsOpenXmin", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOpenXmax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "IsOpenXmax", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOpenYmin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "IsOpenYmin", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOpenYmax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "IsOpenYmax", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOpenZmin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "IsOpenZmin", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOpenZmax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "IsOpenZmax", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsWhole()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "IsWhole", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsVoid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "IsVoid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsXThin(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "tol", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsXThin", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsYThin(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "tol", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsYThin", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsZThin(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "tol", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsZThin", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsThin(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "tol", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsThin", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Transformed(gp_Trsf)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Transformed", 
          "return": {
            "type": "Bnd_Box"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Add(Bnd_Box)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Add(gp_Pnt)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Add(gp_Pnt, gp_Dir)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "D", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Add(gp_Dir)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "D", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOut(gp_Pnt)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOut(gp_Lin)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOut(gp_Pln)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOut(Bnd_Box)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOut(Bnd_Box, gp_Trsf)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOut(gp_Trsf, Bnd_Box, gp_Trsf)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Bnd_Box", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf", 
              "name": "T2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::IsOut(gp_Pnt, gp_Pnt, gp_Dir)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "D", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Distance(Bnd_Box)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box", 
          "name": "Distance", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::Dump()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "Dump", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box::SquareExtent()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box", 
          "name": "SquareExtent", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Bnd_Box.hxx", 
        61
      ], 
      "key": "Bnd_Box"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_HArray1OfBox", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_HArray1OfBox::Bnd_HArray1OfBox(Standard_Integer, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theLower", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theUpper", 
              "const": true
            }
          ], 
          "parent": "Bnd_HArray1OfBox", 
          "name": "Bnd_HArray1OfBox", 
          "return": {
            "type": "Bnd_HArray1OfBox", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox::Bnd_HArray1OfBox(Standard_Integer, Standard_Integer, NCollection_Array1<Bnd_Box>::value_type)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theLower", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theUpper", 
              "const": true
            }, 
            {
              "type": "NCollection_Array1<Bnd_Box>::value_type", 
              "name": "theValue", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_HArray1OfBox", 
          "name": "Bnd_HArray1OfBox", 
          "return": {
            "type": "Bnd_HArray1OfBox", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox::Bnd_HArray1OfBox(Bnd_Array1OfBox)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_Array1OfBox", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_HArray1OfBox", 
          "name": "Bnd_HArray1OfBox", 
          "return": {
            "type": "Bnd_HArray1OfBox", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox::Bnd_HArray1OfBox(Bnd_HArray1OfBox)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_HArray1OfBox", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_HArray1OfBox", 
          "name": "Bnd_HArray1OfBox", 
          "return": {
            "type": "Bnd_HArray1OfBox", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_HArray1OfBox::Array1()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfBox", 
          "name": "Array1", 
          "return": {
            "type": "Bnd_Array1OfBox", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox::ChangeArray1()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfBox", 
          "name": "ChangeArray1", 
          "return": {
            "type": "Bnd_Array1OfBox", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfBox", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfBox", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfBox", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_Array1<Bnd_Box>"
        }, 
        {
          "access": "public", 
          "name": "MMgt_TShared"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/Bnd_HArray1OfBox.hxx", 
        24
      ], 
      "key": "Bnd_HArray1OfBox"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_Box2d", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_Box2d::Bnd_Box2d()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "Bnd_Box2d", 
          "return": {
            "type": "Bnd_Box2d", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Bnd_Box2d(Bnd_Box2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_Box2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Bnd_Box2d", 
          "return": {
            "type": "Bnd_Box2d", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_Box2d::SetWhole()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "SetWhole", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::SetVoid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "SetVoid", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Set(gp_Pnt2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Set", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Set(gp_Pnt2d, gp_Dir2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir2d", 
              "name": "theDir", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Set", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Update(Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "aXmin", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aYmin", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aXmax", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aYmax", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Update", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Update(Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Update", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::GetGap()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "GetGap", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::SetGap(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "SetGap", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Enlarge(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theTol", 
              "const": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Enlarge", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Get(Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "aXmin", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aYmin", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aXmax", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aYmax", 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Get", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::OpenXmin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "OpenXmin", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::OpenXmax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "OpenXmax", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::OpenYmin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "OpenYmin", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::OpenYmax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "OpenYmax", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::IsOpenXmin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "IsOpenXmin", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::IsOpenXmax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "IsOpenXmax", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::IsOpenYmin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "IsOpenYmin", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::IsOpenYmax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "IsOpenYmax", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::IsWhole()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "IsWhole", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::IsVoid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "IsVoid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Transformed(gp_Trsf2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Transformed", 
          "return": {
            "type": "Bnd_Box2d"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Add(Bnd_Box2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Add(gp_Pnt2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Add(gp_Pnt2d, gp_Dir2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir2d", 
              "name": "theDir", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Add(gp_Dir2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "D", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::IsOut(gp_Pnt2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::IsOut(Bnd_Box2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::IsOut(Bnd_Box2d, gp_Trsf2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box2d", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf2d", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::IsOut(gp_Trsf2d, Bnd_Box2d, gp_Trsf2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Bnd_Box2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf2d", 
              "name": "T2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Box2d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::Dump()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "Dump", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Box2d::SquareExtent()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Box2d", 
          "name": "SquareExtent", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Bnd_Box2d.hxx", 
        51
      ], 
      "key": "Bnd_Box2d"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_HArray1OfBox2d", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_HArray1OfBox2d::Bnd_HArray1OfBox2d(Standard_Integer, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theLower", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theUpper", 
              "const": true
            }
          ], 
          "parent": "Bnd_HArray1OfBox2d", 
          "name": "Bnd_HArray1OfBox2d", 
          "return": {
            "type": "Bnd_HArray1OfBox2d", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox2d::Bnd_HArray1OfBox2d(Standard_Integer, Standard_Integer, NCollection_Array1<Bnd_Box2d>::value_type)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theLower", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theUpper", 
              "const": true
            }, 
            {
              "type": "NCollection_Array1<Bnd_Box2d>::value_type", 
              "name": "theValue", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_HArray1OfBox2d", 
          "name": "Bnd_HArray1OfBox2d", 
          "return": {
            "type": "Bnd_HArray1OfBox2d", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox2d::Bnd_HArray1OfBox2d(Bnd_Array1OfBox2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_Array1OfBox2d", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_HArray1OfBox2d", 
          "name": "Bnd_HArray1OfBox2d", 
          "return": {
            "type": "Bnd_HArray1OfBox2d", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox2d::Bnd_HArray1OfBox2d(Bnd_HArray1OfBox2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_HArray1OfBox2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_HArray1OfBox2d", 
          "name": "Bnd_HArray1OfBox2d", 
          "return": {
            "type": "Bnd_HArray1OfBox2d", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_HArray1OfBox2d::Array1()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfBox2d", 
          "name": "Array1", 
          "return": {
            "type": "Bnd_Array1OfBox2d", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox2d::ChangeArray1()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfBox2d", 
          "name": "ChangeArray1", 
          "return": {
            "type": "Bnd_Array1OfBox2d", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox2d::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfBox2d", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox2d::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfBox2d", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfBox2d::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfBox2d", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_Array1<Bnd_Box2d>"
        }, 
        {
          "access": "public", 
          "name": "MMgt_TShared"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/Bnd_HArray1OfBox2d.hxx", 
        24
      ], 
      "key": "Bnd_HArray1OfBox2d"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_Sphere", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_Sphere::Bnd_Sphere()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Bnd_Sphere", 
          "name": "Bnd_Sphere", 
          "return": {
            "type": "Bnd_Sphere", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::Bnd_Sphere(gp_XYZ, Standard_Real, Standard_Integer, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theCntr", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theRad", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theU", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theV", 
              "const": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "Bnd_Sphere", 
          "return": {
            "type": "Bnd_Sphere", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::Bnd_Sphere(Bnd_Sphere)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_Sphere", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "Bnd_Sphere", 
          "return": {
            "type": "Bnd_Sphere", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_Sphere::U()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Sphere", 
          "name": "U", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::V()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Sphere", 
          "name": "V", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::IsValid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Sphere", 
          "name": "IsValid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::SetValid(Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Boolean", 
              "name": "isValid", 
              "const": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "SetValid", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::Center()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Sphere", 
          "name": "Center", 
          "return": {
            "type": "gp_XYZ", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::Radius()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Sphere", 
          "name": "Radius", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::Distances(gp_XYZ, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theXYZ", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theMin", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theMax", 
              "ref": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "Distances", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::SquareDistances(gp_XYZ, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theXYZ", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theMin", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theMax", 
              "ref": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "SquareDistances", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::Project(gp_XYZ, gp_XYZ, Standard_Real, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theNode", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "theProjNode", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theDist", 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "theInside", 
              "ref": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "Project", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::Distance(gp_XYZ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theNode", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "Distance", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::SquareDistance(gp_XYZ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theNode", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "SquareDistance", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::Add(Bnd_Sphere)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Sphere", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::IsOut(Bnd_Sphere)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Sphere", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::IsOut(gp_XYZ, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theMaxDist", 
              "ref": true
            }
          ], 
          "parent": "Bnd_Sphere", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Sphere::SquareExtent()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Sphere", 
          "name": "SquareExtent", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Bnd_Sphere.hxx", 
        32
      ], 
      "key": "Bnd_Sphere"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_Range", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_Range::Bnd_Range()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Bnd_Range", 
          "name": "Bnd_Range", 
          "return": {
            "type": "Bnd_Range", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Range::Bnd_Range(Standard_Real, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theMin", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theMax", 
              "const": true
            }
          ], 
          "parent": "Bnd_Range", 
          "name": "Bnd_Range", 
          "return": {
            "type": "Bnd_Range", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Range::Bnd_Range(Bnd_Range)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_Range", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Range", 
          "name": "Bnd_Range", 
          "return": {
            "type": "Bnd_Range", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_Range::Common(Bnd_Range)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Range", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_Range", 
          "name": "Common", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Range::Add(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theParameter", 
              "const": true
            }
          ], 
          "parent": "Bnd_Range", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Range::GetMin(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "thePar", 
              "ref": true
            }
          ], 
          "parent": "Bnd_Range", 
          "name": "GetMin", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Range::GetMAX(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "thePar", 
              "ref": true
            }
          ], 
          "parent": "Bnd_Range", 
          "name": "GetMAX", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Range::Delta()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Range", 
          "name": "Delta", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Range::IsVoid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Range", 
          "name": "IsVoid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Range::SetVoid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_Range", 
          "name": "SetVoid", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_Range::Enlarge(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theDelta", 
              "const": true
            }
          ], 
          "parent": "Bnd_Range", 
          "name": "Enlarge", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Bnd_Range.hxx", 
        26
      ], 
      "key": "Bnd_Range"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_B2d", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_B2d::Bnd_B2d()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Bnd_B2d", 
          "name": "Bnd_B2d", 
          "return": {
            "type": "Bnd_B2d", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::Bnd_B2d(gp_XY, gp_XY)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "theHSize", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "Bnd_B2d", 
          "return": {
            "type": "Bnd_B2d", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::Bnd_B2d(Bnd_B2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_B2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "Bnd_B2d", 
          "return": {
            "type": "Bnd_B2d", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_B2d::IsVoid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B2d", 
          "name": "IsVoid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B2d", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::Add(gp_XY)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::Add(gp_Pnt2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::Add(Bnd_B2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2d", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::CornerMin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B2d", 
          "name": "CornerMin", 
          "return": {
            "type": "gp_XY"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::CornerMax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B2d", 
          "name": "CornerMax", 
          "return": {
            "type": "gp_XY"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::SquareExtent()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B2d", 
          "name": "SquareExtent", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::Enlarge(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theDiff", 
              "const": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "Enlarge", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::Limit(Bnd_B2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2d", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "Limit", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::Transformed(gp_Trsf2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "Transformed", 
          "return": {
            "type": "Bnd_B2d"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::IsOut(gp_XY)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::IsOut(gp_XY, Standard_Real, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "isCircleHollow", 
              "default": "false", 
              "const": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::IsOut(Bnd_B2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2d", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::IsOut(Bnd_B2d, gp_Trsf2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2d", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf2d", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::IsOut(gp_Ax2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "theLine", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::IsOut(gp_XY, gp_XY)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "theP0", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "theP1", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::IsIn(Bnd_B2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2d", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "IsIn", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::IsIn(Bnd_B2d, gp_Trsf2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2d", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf2d", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "IsIn", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::SetCenter(gp_XY)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "SetCenter", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2d::SetHSize(gp_XY)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "theHSize", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2d", 
          "name": "SetHSize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Bnd_B2d.hxx", 
        34
      ], 
      "key": "Bnd_B2d"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_B3d", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_B3d::Bnd_B3d()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Bnd_B3d", 
          "name": "Bnd_B3d", 
          "return": {
            "type": "Bnd_B3d", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::Bnd_B3d(gp_XYZ, gp_XYZ)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "theHSize", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "Bnd_B3d", 
          "return": {
            "type": "Bnd_B3d", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::Bnd_B3d(Bnd_B3d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_B3d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "Bnd_B3d", 
          "return": {
            "type": "Bnd_B3d", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_B3d::IsVoid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B3d", 
          "name": "IsVoid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B3d", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::Add(gp_XYZ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::Add(gp_Pnt)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::Add(Bnd_B3d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3d", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::CornerMin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B3d", 
          "name": "CornerMin", 
          "return": {
            "type": "gp_XYZ"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::CornerMax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B3d", 
          "name": "CornerMax", 
          "return": {
            "type": "gp_XYZ"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::SquareExtent()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B3d", 
          "name": "SquareExtent", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::Enlarge(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theDiff", 
              "const": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "Enlarge", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::Limit(Bnd_B3d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3d", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "Limit", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::Transformed(gp_Trsf)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "Transformed", 
          "return": {
            "type": "Bnd_B3d"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::IsOut(gp_XYZ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::IsOut(gp_XYZ, Standard_Real, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "isSphereHollow", 
              "default": "false", 
              "const": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::IsOut(Bnd_B3d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3d", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::IsOut(Bnd_B3d, gp_Trsf)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3d", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::IsOut(gp_Ax1, Standard_Boolean, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "theLine", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "isRay", 
              "default": "false", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theOverthickness", 
              "default": "0.", 
              "const": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::IsOut(gp_Ax3)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "thePlane", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::IsIn(Bnd_B3d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3d", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "IsIn", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::IsIn(Bnd_B3d, gp_Trsf)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B3d", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "IsIn", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::SetCenter(gp_XYZ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "SetCenter", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B3d::SetHSize(gp_XYZ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theHSize", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B3d", 
          "name": "SetHSize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Bnd_B3d.hxx", 
        35
      ], 
      "key": "Bnd_B3d"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_B2f", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_B2f::Bnd_B2f()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Bnd_B2f", 
          "name": "Bnd_B2f", 
          "return": {
            "type": "Bnd_B2f", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::Bnd_B2f(gp_XY, gp_XY)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "theHSize", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "Bnd_B2f", 
          "return": {
            "type": "Bnd_B2f", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::Bnd_B2f(Bnd_B2f)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_B2f", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "Bnd_B2f", 
          "return": {
            "type": "Bnd_B2f", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_B2f::IsVoid()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B2f", 
          "name": "IsVoid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B2f", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::Add(gp_XY)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::Add(gp_Pnt2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::Add(Bnd_B2f)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2f", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::CornerMin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B2f", 
          "name": "CornerMin", 
          "return": {
            "type": "gp_XY"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::CornerMax()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B2f", 
          "name": "CornerMax", 
          "return": {
            "type": "gp_XY"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::SquareExtent()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_B2f", 
          "name": "SquareExtent", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::Enlarge(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theDiff", 
              "const": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "Enlarge", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::Limit(Bnd_B2f)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2f", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "Limit", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::Transformed(gp_Trsf2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "Transformed", 
          "return": {
            "type": "Bnd_B2f"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::IsOut(gp_XY)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "thePnt", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::IsOut(gp_XY, Standard_Real, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "isCircleHollow", 
              "default": "false", 
              "const": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::IsOut(Bnd_B2f)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2f", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::IsOut(Bnd_B2f, gp_Trsf2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2f", 
              "name": "theOtherBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf2d", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::IsOut(gp_Ax2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "theLine", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::IsOut(gp_XY, gp_XY)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "theP0", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "theP1", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "IsOut", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::IsIn(Bnd_B2f)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2f", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "IsIn", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::IsIn(Bnd_B2f, gp_Trsf2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_B2f", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Trsf2d", 
              "name": "theTrsf", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "IsIn", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::SetCenter(gp_XY)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "theCenter", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "SetCenter", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_B2f::SetHSize(gp_XY)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "theHSize", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_B2f", 
          "name": "SetHSize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Bnd_B2f.hxx", 
        35
      ], 
      "key": "Bnd_B2f"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_HArray1OfSphere", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_HArray1OfSphere::Bnd_HArray1OfSphere(Standard_Integer, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theLower", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theUpper", 
              "const": true
            }
          ], 
          "parent": "Bnd_HArray1OfSphere", 
          "name": "Bnd_HArray1OfSphere", 
          "return": {
            "type": "Bnd_HArray1OfSphere", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfSphere::Bnd_HArray1OfSphere(Standard_Integer, Standard_Integer, NCollection_Array1<Bnd_Sphere>::value_type)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theLower", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theUpper", 
              "const": true
            }, 
            {
              "type": "NCollection_Array1<Bnd_Sphere>::value_type", 
              "name": "theValue", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_HArray1OfSphere", 
          "name": "Bnd_HArray1OfSphere", 
          "return": {
            "type": "Bnd_HArray1OfSphere", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfSphere::Bnd_HArray1OfSphere(Bnd_Array1OfSphere)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_Array1OfSphere", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_HArray1OfSphere", 
          "name": "Bnd_HArray1OfSphere", 
          "return": {
            "type": "Bnd_HArray1OfSphere", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfSphere::Bnd_HArray1OfSphere(Bnd_HArray1OfSphere)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_HArray1OfSphere", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_HArray1OfSphere", 
          "name": "Bnd_HArray1OfSphere", 
          "return": {
            "type": "Bnd_HArray1OfSphere", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_HArray1OfSphere::Array1()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfSphere", 
          "name": "Array1", 
          "return": {
            "type": "Bnd_Array1OfSphere", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfSphere::ChangeArray1()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfSphere", 
          "name": "ChangeArray1", 
          "return": {
            "type": "Bnd_Array1OfSphere", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfSphere::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfSphere", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfSphere::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfSphere", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Bnd_HArray1OfSphere::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_HArray1OfSphere", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_Array1<Bnd_Sphere>"
        }, 
        {
          "access": "public", 
          "name": "MMgt_TShared"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/Bnd_HArray1OfSphere.hxx", 
        24
      ], 
      "key": "Bnd_HArray1OfSphere"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_BoundSortBox", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_BoundSortBox::Bnd_BoundSortBox()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Bnd_BoundSortBox", 
          "name": "Bnd_BoundSortBox", 
          "return": {
            "type": "Bnd_BoundSortBox", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox::Bnd_BoundSortBox(Bnd_BoundSortBox)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_BoundSortBox", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_BoundSortBox", 
          "name": "Bnd_BoundSortBox", 
          "return": {
            "type": "Bnd_BoundSortBox", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_BoundSortBox::Initialize(Bnd_Box, opencascade::handle<Bnd_HArray1OfBox>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box", 
              "name": "CompleteBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Bnd_HArray1OfBox>", 
              "name": "SetOfBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_BoundSortBox", 
          "name": "Initialize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox::Initialize(opencascade::handle<Bnd_HArray1OfBox>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Bnd_HArray1OfBox>", 
              "name": "SetOfBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_BoundSortBox", 
          "name": "Initialize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox::Initialize(Bnd_Box, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box", 
              "name": "CompleteBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "nbComponents", 
              "const": true
            }
          ], 
          "parent": "Bnd_BoundSortBox", 
          "name": "Initialize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox::Add(Bnd_Box, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "boxIndex", 
              "const": true
            }
          ], 
          "parent": "Bnd_BoundSortBox", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox::Compare(Bnd_Box)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_BoundSortBox", 
          "name": "Compare", 
          "return": {
            "type": "TColStd_ListOfInteger", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox::Compare(gp_Pln)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_BoundSortBox", 
          "name": "Compare", 
          "return": {
            "type": "TColStd_ListOfInteger", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox::Dump()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_BoundSortBox", 
          "name": "Dump", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox::Destroy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_BoundSortBox", 
          "name": "Destroy", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Bnd_BoundSortBox.hxx", 
        44
      ], 
      "key": "Bnd_BoundSortBox"
    }, 
    {
      "declType": "class", 
      "name": "Bnd_BoundSortBox2d", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Bnd_BoundSortBox2d::Bnd_BoundSortBox2d()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Bnd_BoundSortBox2d", 
          "name": "Bnd_BoundSortBox2d", 
          "return": {
            "type": "Bnd_BoundSortBox2d", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox2d::Bnd_BoundSortBox2d(Bnd_BoundSortBox2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Bnd_BoundSortBox2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_BoundSortBox2d", 
          "name": "Bnd_BoundSortBox2d", 
          "return": {
            "type": "Bnd_BoundSortBox2d", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Bnd_BoundSortBox2d::Initialize(Bnd_Box2d, opencascade::handle<Bnd_HArray1OfBox2d>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box2d", 
              "name": "CompleteBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Bnd_HArray1OfBox2d>", 
              "name": "SetOfBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_BoundSortBox2d", 
          "name": "Initialize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox2d::Initialize(opencascade::handle<Bnd_HArray1OfBox2d>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Bnd_HArray1OfBox2d>", 
              "name": "SetOfBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_BoundSortBox2d", 
          "name": "Initialize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox2d::Initialize(Bnd_Box2d, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box2d", 
              "name": "CompleteBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "nbComponents", 
              "const": true
            }
          ], 
          "parent": "Bnd_BoundSortBox2d", 
          "name": "Initialize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox2d::Add(Bnd_Box2d, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box2d", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "boxIndex", 
              "const": true
            }
          ], 
          "parent": "Bnd_BoundSortBox2d", 
          "name": "Add", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox2d::Compare(Bnd_Box2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Bnd_Box2d", 
              "name": "theBox", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Bnd_BoundSortBox2d", 
          "name": "Compare", 
          "return": {
            "type": "TColStd_ListOfInteger", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Bnd_BoundSortBox2d::Dump()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Bnd_BoundSortBox2d", 
          "name": "Dump", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Bnd_BoundSortBox2d.hxx", 
        43
      ], 
      "key": "Bnd_BoundSortBox2d"
    }, 
    {
      "type": "NCollection_Array1<Bnd_Box>", 
      "declType": "typedef", 
      "name": "Bnd_Array1OfBox", 
      "key": "Bnd_Array1OfBox"
    }, 
    {
      "type": "opencascade::handle<Bnd_HArray1OfBox>", 
      "declType": "typedef", 
      "name": "Handle_Bnd_HArray1OfBox", 
      "key": "Handle_Bnd_HArray1OfBox"
    }, 
    {
      "type": "NCollection_Sequence<Bnd_Box>", 
      "declType": "typedef", 
      "name": "Bnd_SeqOfBox", 
      "key": "Bnd_SeqOfBox"
    }, 
    {
      "type": "NCollection_Array1<Bnd_Box2d>", 
      "declType": "typedef", 
      "name": "Bnd_Array1OfBox2d", 
      "key": "Bnd_Array1OfBox2d"
    }, 
    {
      "type": "opencascade::handle<Bnd_HArray1OfBox2d>", 
      "declType": "typedef", 
      "name": "Handle_Bnd_HArray1OfBox2d", 
      "key": "Handle_Bnd_HArray1OfBox2d"
    }, 
    {
      "type": "NCollection_Array1<Bnd_Sphere>", 
      "declType": "typedef", 
      "name": "Bnd_Array1OfSphere", 
      "key": "Bnd_Array1OfSphere"
    }, 
    {
      "type": "opencascade::handle<Bnd_HArray1OfSphere>", 
      "declType": "typedef", 
      "name": "Handle_Bnd_HArray1OfSphere", 
      "key": "Handle_Bnd_HArray1OfSphere"
    }
  ], 
  "name": "Bnd"
}