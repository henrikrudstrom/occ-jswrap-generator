{
  "headers": [
    "ProjLib_Sphere.hxx", 
    "ProjLib_HSequenceOfHSequenceOfPnt.hxx", 
    "ProjLib_ComputeApprox.hxx", 
    "ProjLib_PrjFunc.hxx", 
    "ProjLib_Cylinder.hxx", 
    "ProjLib_ProjectedCurve.hxx", 
    "ProjLib_Projector.hxx", 
    "ProjLib_ProjectOnPlane.hxx", 
    "ProjLib_Plane.hxx", 
    "ProjLib_Cone.hxx", 
    "ProjLib_HProjectedCurve.hxx", 
    "ProjLib_ProjectOnSurface.hxx", 
    "ProjLib_CompProjectedCurve.hxx", 
    "ProjLib_Torus.hxx", 
    "ProjLib_HCompProjectedCurve.hxx", 
    "ProjLib_ComputeApproxOnPolarSurface.hxx", 
    "ProjLib_PrjResolve.hxx", 
    "ProjLib_SequenceOfHSequenceOfPnt.hxx"
  ], 
  "declarations": [
    {
      "declType": "class", 
      "name": "ProjLib_Projector", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_Projector::ProjLib_Projector()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "ProjLib_Projector", 
          "return": {
            "type": "ProjLib_Projector", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::ProjLib_Projector(ProjLib_Projector)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_Projector", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "ProjLib_Projector", 
          "return": {
            "type": "ProjLib_Projector", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_Projector::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::Done()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "Done", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::GetType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "GetType", 
          "return": {
            "type": "GeomAbs_CurveType"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::SetBSpline(opencascade::handle<Geom2d_BSplineCurve>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_BSplineCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "SetBSpline", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::SetBezier(opencascade::handle<Geom2d_BezierCurve>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_BezierCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "SetBezier", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::SetType(GeomAbs_CurveType)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "GeomAbs_CurveType", 
              "name": "Type", 
              "const": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "SetType", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::IsPeriodic()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "IsPeriodic", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::SetPeriodic()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "SetPeriodic", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::Line()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "Line", 
          "return": {
            "type": "gp_Lin2d", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::Circle()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "Circle", 
          "return": {
            "type": "gp_Circ2d", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::Ellipse()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "Ellipse", 
          "return": {
            "type": "gp_Elips2d", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::Hyperbola()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "Hyperbola", 
          "return": {
            "type": "gp_Hypr2d", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::Parabola()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "Parabola", 
          "return": {
            "type": "gp_Parab2d", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::Bezier()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "Bezier", 
          "return": {
            "type": "opencascade::handle<Geom2d_BezierCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::BSpline()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_Projector", 
          "name": "BSpline", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::Project(gp_Lin)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Projector::Project(gp_Circ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Projector::Project(gp_Elips)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Elips", 
              "name": "E", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Projector::Project(gp_Parab)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Parab", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Projector::Project(gp_Hypr)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Hypr", 
              "name": "H", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Projector::UFrame(Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "CFirst", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "CLast", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "UFirst", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Period", 
              "const": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "UFrame", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Projector::VFrame(Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "CFirst", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "CLast", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "VFirst", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Period", 
              "const": true
            }
          ], 
          "parent": "ProjLib_Projector", 
          "name": "VFrame", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_Projector.hxx", 
        49
      ], 
      "key": "ProjLib_Projector"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_Sphere", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_Sphere::ProjLib_Sphere()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_Sphere", 
          "name": "ProjLib_Sphere", 
          "return": {
            "type": "ProjLib_Sphere", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Sphere::ProjLib_Sphere(gp_Sphere)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Sphere", 
              "name": "Sp", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Sphere", 
          "name": "ProjLib_Sphere", 
          "return": {
            "type": "ProjLib_Sphere", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Sphere::ProjLib_Sphere(gp_Sphere, gp_Circ)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Sphere", 
              "name": "Sp", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Sphere", 
          "name": "ProjLib_Sphere", 
          "return": {
            "type": "ProjLib_Sphere", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Sphere::ProjLib_Sphere(ProjLib_Sphere)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_Sphere", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Sphere", 
          "name": "ProjLib_Sphere", 
          "return": {
            "type": "ProjLib_Sphere", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_Sphere::Init(gp_Sphere)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Sphere", 
              "name": "Sp", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Sphere", 
          "name": "Init", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Sphere::Project(gp_Lin)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Sphere", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Sphere::Project(gp_Circ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Sphere", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Sphere::Project(gp_Elips)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Elips", 
              "name": "E", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Sphere", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Sphere::Project(gp_Parab)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Parab", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Sphere", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Sphere::Project(gp_Hypr)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Hypr", 
              "name": "H", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Sphere", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Sphere::SetInBounds(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }
          ], 
          "parent": "ProjLib_Sphere", 
          "name": "SetInBounds", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "ProjLib_Projector"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_Sphere.hxx", 
        37
      ], 
      "key": "ProjLib_Sphere"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_HSequenceOfHSequenceOfPnt", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_HSequenceOfHSequenceOfPnt::ProjLib_HSequenceOfHSequenceOfPnt()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "name": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "return": {
            "type": "ProjLib_HSequenceOfHSequenceOfPnt", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HSequenceOfHSequenceOfPnt::ProjLib_HSequenceOfHSequenceOfPnt(ProjLib_SequenceOfHSequenceOfPnt)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_SequenceOfHSequenceOfPnt", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "name": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "return": {
            "type": "ProjLib_HSequenceOfHSequenceOfPnt", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HSequenceOfHSequenceOfPnt::ProjLib_HSequenceOfHSequenceOfPnt(ProjLib_HSequenceOfHSequenceOfPnt)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_HSequenceOfHSequenceOfPnt", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "name": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "return": {
            "type": "ProjLib_HSequenceOfHSequenceOfPnt", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_HSequenceOfHSequenceOfPnt::Sequence()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "name": "Sequence", 
          "return": {
            "type": "ProjLib_SequenceOfHSequenceOfPnt", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HSequenceOfHSequenceOfPnt::Append(NCollection_Sequence<opencascade::handle<TColgp_HSequenceOfPnt> >::value_type)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Sequence<opencascade::handle<TColgp_HSequenceOfPnt> >::value_type", 
              "name": "theItem", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "name": "Append", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HSequenceOfHSequenceOfPnt::Append(ProjLib_SequenceOfHSequenceOfPnt)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "ProjLib_SequenceOfHSequenceOfPnt", 
              "name": "theSequence", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "name": "Append", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HSequenceOfHSequenceOfPnt::ChangeSequence()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "name": "ChangeSequence", 
          "return": {
            "type": "ProjLib_SequenceOfHSequenceOfPnt", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HSequenceOfHSequenceOfPnt::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "ProjLib_HSequenceOfHSequenceOfPnt::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "ProjLib_HSequenceOfHSequenceOfPnt::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HSequenceOfHSequenceOfPnt", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_Sequence<opencascade::handle<TColgp_HSequenceOfPnt> >"
        }, 
        {
          "access": "public", 
          "name": "MMgt_TShared"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_HSequenceOfHSequenceOfPnt.hxx", 
        24
      ], 
      "key": "ProjLib_HSequenceOfHSequenceOfPnt"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_ComputeApprox", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_ComputeApprox::ProjLib_ComputeApprox(opencascade::handle<Adaptor3d_HCurve>, opencascade::handle<Adaptor3d_HSurface>, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ComputeApprox", 
          "name": "ProjLib_ComputeApprox", 
          "return": {
            "type": "ProjLib_ComputeApprox", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApprox::ProjLib_ComputeApprox(ProjLib_ComputeApprox)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_ComputeApprox", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ComputeApprox", 
          "name": "ProjLib_ComputeApprox", 
          "return": {
            "type": "ProjLib_ComputeApprox", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_ComputeApprox::BSpline()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ComputeApprox", 
          "name": "BSpline", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApprox::Bezier()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ComputeApprox", 
          "name": "Bezier", 
          "return": {
            "type": "opencascade::handle<Geom2d_BezierCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApprox::Tolerance()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ComputeApprox", 
          "name": "Tolerance", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_ComputeApprox.hxx", 
        34
      ], 
      "key": "ProjLib_ComputeApprox"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_PrjFunc", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_PrjFunc::ProjLib_PrjFunc(Adaptor3d_CurvePtr, Standard_Real, Adaptor3d_SurfacePtr, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Adaptor3d_CurvePtr", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "FixVal", 
              "const": true
            }, 
            {
              "type": "Adaptor3d_SurfacePtr", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Fix", 
              "const": true
            }
          ], 
          "parent": "ProjLib_PrjFunc", 
          "name": "ProjLib_PrjFunc", 
          "return": {
            "type": "ProjLib_PrjFunc", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_PrjFunc::ProjLib_PrjFunc(ProjLib_PrjFunc)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_PrjFunc", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_PrjFunc", 
          "name": "ProjLib_PrjFunc", 
          "return": {
            "type": "ProjLib_PrjFunc", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_PrjFunc::NbVariables()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_PrjFunc", 
          "name": "NbVariables", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_PrjFunc::NbEquations()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_PrjFunc", 
          "name": "NbEquations", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_PrjFunc::Value(math_Vector, math_Vector)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "math_Vector", 
              "name": "X", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "math_Vector", 
              "name": "F", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_PrjFunc", 
          "name": "Value", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_PrjFunc::Derivatives(math_Vector, math_Matrix)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "math_Vector", 
              "name": "X", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "math_Matrix", 
              "name": "D", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_PrjFunc", 
          "name": "Derivatives", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_PrjFunc::Values(math_Vector, math_Vector, math_Matrix)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "math_Vector", 
              "name": "X", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "math_Vector", 
              "name": "F", 
              "ref": true
            }, 
            {
              "type": "math_Matrix", 
              "name": "D", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_PrjFunc", 
          "name": "Values", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_PrjFunc::Solution()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_PrjFunc", 
          "name": "Solution", 
          "return": {
            "type": "gp_Pnt2d"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "math_FunctionSetWithDerivatives"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_PrjFunc.hxx", 
        37
      ], 
      "key": "ProjLib_PrjFunc"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_Cylinder", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_Cylinder::ProjLib_Cylinder()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_Cylinder", 
          "name": "ProjLib_Cylinder", 
          "return": {
            "type": "ProjLib_Cylinder", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cylinder::ProjLib_Cylinder(gp_Cylinder)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Cylinder", 
              "name": "Cyl", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "ProjLib_Cylinder", 
          "return": {
            "type": "ProjLib_Cylinder", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cylinder::ProjLib_Cylinder(gp_Cylinder, gp_Lin)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Cylinder", 
              "name": "Cyl", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "ProjLib_Cylinder", 
          "return": {
            "type": "ProjLib_Cylinder", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cylinder::ProjLib_Cylinder(gp_Cylinder, gp_Circ)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Cylinder", 
              "name": "Cyl", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "ProjLib_Cylinder", 
          "return": {
            "type": "ProjLib_Cylinder", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cylinder::ProjLib_Cylinder(gp_Cylinder, gp_Elips)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Cylinder", 
              "name": "Cyl", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Elips", 
              "name": "E", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "ProjLib_Cylinder", 
          "return": {
            "type": "ProjLib_Cylinder", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cylinder::ProjLib_Cylinder(ProjLib_Cylinder)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_Cylinder", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "ProjLib_Cylinder", 
          "return": {
            "type": "ProjLib_Cylinder", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_Cylinder::Init(gp_Cylinder)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Cylinder", 
              "name": "Cyl", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "Init", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cylinder::Project(gp_Lin)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Cylinder::Project(gp_Circ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Cylinder::Project(gp_Elips)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Elips", 
              "name": "E", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Cylinder::Project(gp_Parab)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Parab", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Cylinder::Project(gp_Hypr)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Hypr", 
              "name": "H", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cylinder", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "ProjLib_Projector"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_Cylinder.hxx", 
        36
      ], 
      "key": "ProjLib_Cylinder"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_ProjectedCurve", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_ProjectedCurve::ProjLib_ProjectedCurve()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "ProjLib_ProjectedCurve", 
          "return": {
            "type": "ProjLib_ProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::ProjLib_ProjectedCurve(opencascade::handle<Adaptor3d_HSurface>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "ProjLib_ProjectedCurve", 
          "return": {
            "type": "ProjLib_ProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::ProjLib_ProjectedCurve(opencascade::handle<Adaptor3d_HSurface>, opencascade::handle<Adaptor3d_HCurve>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "ProjLib_ProjectedCurve", 
          "return": {
            "type": "ProjLib_ProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::ProjLib_ProjectedCurve(opencascade::handle<Adaptor3d_HSurface>, opencascade::handle<Adaptor3d_HCurve>, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "ProjLib_ProjectedCurve", 
          "return": {
            "type": "ProjLib_ProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::ProjLib_ProjectedCurve(ProjLib_ProjectedCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_ProjectedCurve", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "ProjLib_ProjectedCurve", 
          "return": {
            "type": "ProjLib_ProjectedCurve", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Load(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Tolerance", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Load", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Load(opencascade::handle<Adaptor3d_HSurface>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Load", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Load(opencascade::handle<Adaptor3d_HCurve>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Load", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::GetSurface()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "GetSurface", 
          "return": {
            "type": "opencascade::handle<Adaptor3d_HSurface>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::GetCurve()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "GetCurve", 
          "return": {
            "type": "opencascade::handle<Adaptor3d_HCurve>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::GetTolerance()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "GetTolerance", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectedCurve::FirstParameter()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "FirstParameter", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::LastParameter()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "LastParameter", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Continuity()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Continuity", 
          "return": {
            "type": "GeomAbs_Shape"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::NbIntervals(GeomAbs_Shape)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "GeomAbs_Shape", 
              "name": "S", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "NbIntervals", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Intervals(TColStd_Array1OfReal, GeomAbs_Shape)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "TColStd_Array1OfReal", 
              "name": "T", 
              "ref": true
            }, 
            {
              "type": "GeomAbs_Shape", 
              "name": "S", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Intervals", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Trim(Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "First", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Last", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Trim", 
          "return": {
            "type": "opencascade::handle<Adaptor2d_HCurve2d>"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::IsClosed()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "IsClosed", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::IsPeriodic()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "IsPeriodic", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Period()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Period", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Value(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Value", 
          "return": {
            "type": "gp_Pnt2d"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::D0(Standard_Real, gp_Pnt2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "D0", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::D1(Standard_Real, gp_Pnt2d, gp_Vec2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "D1", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::D2(Standard_Real, gp_Pnt2d, gp_Vec2d, gp_Vec2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V1", 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V2", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "D2", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::D3(Standard_Real, gp_Pnt2d, gp_Vec2d, gp_Vec2d, gp_Vec2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V1", 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V2", 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V3", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "D3", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::DN(Standard_Real, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "DN", 
          "return": {
            "type": "gp_Vec2d"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Resolution(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "R3d", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Resolution", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::GetType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "GetType", 
          "return": {
            "type": "GeomAbs_CurveType"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Line()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Line", 
          "return": {
            "type": "gp_Lin2d"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Circle()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Circle", 
          "return": {
            "type": "gp_Circ2d"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Ellipse()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Ellipse", 
          "return": {
            "type": "gp_Elips2d"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Hyperbola()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Hyperbola", 
          "return": {
            "type": "gp_Hypr2d"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Parabola()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Parabola", 
          "return": {
            "type": "gp_Parab2d"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Degree()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Degree", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::IsRational()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "IsRational", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::NbPoles()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "NbPoles", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::NbKnots()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "NbKnots", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::Bezier()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "Bezier", 
          "return": {
            "type": "opencascade::handle<Geom2d_BezierCurve>"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectedCurve::BSpline()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectedCurve", 
          "name": "BSpline", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "Adaptor2d_Curve2d"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_ProjectedCurve.hxx", 
        53
      ], 
      "key": "ProjLib_ProjectedCurve"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_ProjectOnPlane", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_ProjectOnPlane::ProjLib_ProjectOnPlane()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "ProjLib_ProjectOnPlane", 
          "return": {
            "type": "ProjLib_ProjectOnPlane", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::ProjLib_ProjectOnPlane(gp_Ax3)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "Pl", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "ProjLib_ProjectOnPlane", 
          "return": {
            "type": "ProjLib_ProjectOnPlane", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::ProjLib_ProjectOnPlane(gp_Ax3, gp_Dir)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "Pl", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "D", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "ProjLib_ProjectOnPlane", 
          "return": {
            "type": "ProjLib_ProjectOnPlane", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::ProjLib_ProjectOnPlane(ProjLib_ProjectOnPlane)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_ProjectOnPlane", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "ProjLib_ProjectOnPlane", 
          "return": {
            "type": "ProjLib_ProjectOnPlane", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Load(opencascade::handle<Adaptor3d_HCurve>, Standard_Real, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "KeepParametrization", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Load", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::GetPlane()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "GetPlane", 
          "return": {
            "type": "gp_Ax3", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::GetDirection()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "GetDirection", 
          "return": {
            "type": "gp_Dir", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::GetCurve()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "GetCurve", 
          "return": {
            "type": "opencascade::handle<Adaptor3d_HCurve>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::FirstParameter()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "FirstParameter", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::LastParameter()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "LastParameter", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Continuity()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Continuity", 
          "return": {
            "type": "GeomAbs_Shape"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::NbIntervals(GeomAbs_Shape)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "GeomAbs_Shape", 
              "name": "S", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "NbIntervals", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Intervals(TColStd_Array1OfReal, GeomAbs_Shape)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "TColStd_Array1OfReal", 
              "name": "T", 
              "ref": true
            }, 
            {
              "type": "GeomAbs_Shape", 
              "name": "S", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Intervals", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Trim(Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "First", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Last", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Trim", 
          "return": {
            "type": "opencascade::handle<Adaptor3d_HCurve>"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::IsClosed()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "IsClosed", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::IsPeriodic()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "IsPeriodic", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Period()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Period", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Value(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Value", 
          "return": {
            "type": "gp_Pnt"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::D0(Standard_Real, gp_Pnt)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "D0", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::D1(Standard_Real, gp_Pnt, gp_Vec)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "D1", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::D2(Standard_Real, gp_Pnt, gp_Vec, gp_Vec)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "D2", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::D3(Standard_Real, gp_Pnt, gp_Vec, gp_Vec, gp_Vec)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V3", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "D3", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::DN(Standard_Real, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "DN", 
          "return": {
            "type": "gp_Vec"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Resolution(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "R3d", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Resolution", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::GetType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "GetType", 
          "return": {
            "type": "GeomAbs_CurveType"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Line()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Line", 
          "return": {
            "type": "gp_Lin"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Circle()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Circle", 
          "return": {
            "type": "gp_Circ"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Ellipse()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Ellipse", 
          "return": {
            "type": "gp_Elips"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Hyperbola()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Hyperbola", 
          "return": {
            "type": "gp_Hypr"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Parabola()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Parabola", 
          "return": {
            "type": "gp_Parab"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Degree()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Degree", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::IsRational()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "IsRational", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::NbPoles()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "NbPoles", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::NbKnots()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "NbKnots", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::Bezier()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "Bezier", 
          "return": {
            "type": "opencascade::handle<Geom_BezierCurve>"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_ProjectOnPlane::BSpline()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnPlane", 
          "name": "BSpline", 
          "return": {
            "type": "opencascade::handle<Geom_BSplineCurve>"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "Adaptor3d_Curve"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_ProjectOnPlane.hxx", 
        61
      ], 
      "key": "ProjLib_ProjectOnPlane"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_Plane", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_Plane::ProjLib_Plane()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_Plane", 
          "name": "ProjLib_Plane", 
          "return": {
            "type": "ProjLib_Plane", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Plane::ProjLib_Plane(gp_Pln)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "Pl", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "ProjLib_Plane", 
          "return": {
            "type": "ProjLib_Plane", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Plane::ProjLib_Plane(gp_Pln, gp_Lin)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "Pl", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "ProjLib_Plane", 
          "return": {
            "type": "ProjLib_Plane", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Plane::ProjLib_Plane(gp_Pln, gp_Circ)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "Pl", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "ProjLib_Plane", 
          "return": {
            "type": "ProjLib_Plane", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Plane::ProjLib_Plane(gp_Pln, gp_Elips)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "Pl", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Elips", 
              "name": "E", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "ProjLib_Plane", 
          "return": {
            "type": "ProjLib_Plane", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Plane::ProjLib_Plane(gp_Pln, gp_Parab)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "Pl", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Parab", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "ProjLib_Plane", 
          "return": {
            "type": "ProjLib_Plane", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Plane::ProjLib_Plane(gp_Pln, gp_Hypr)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "Pl", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Hypr", 
              "name": "H", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "ProjLib_Plane", 
          "return": {
            "type": "ProjLib_Plane", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Plane::ProjLib_Plane(ProjLib_Plane)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_Plane", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "ProjLib_Plane", 
          "return": {
            "type": "ProjLib_Plane", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_Plane::Init(gp_Pln)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "Pl", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "Init", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Plane::Project(gp_Lin)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Plane::Project(gp_Circ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Plane::Project(gp_Elips)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Elips", 
              "name": "E", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Plane::Project(gp_Parab)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Parab", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Plane::Project(gp_Hypr)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Hypr", 
              "name": "H", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Plane", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "ProjLib_Projector"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_Plane.hxx", 
        36
      ], 
      "key": "ProjLib_Plane"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_Cone", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_Cone::ProjLib_Cone()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_Cone", 
          "name": "ProjLib_Cone", 
          "return": {
            "type": "ProjLib_Cone", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cone::ProjLib_Cone(gp_Cone)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Cone", 
              "name": "Co", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cone", 
          "name": "ProjLib_Cone", 
          "return": {
            "type": "ProjLib_Cone", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cone::ProjLib_Cone(gp_Cone, gp_Lin)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Cone", 
              "name": "Co", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cone", 
          "name": "ProjLib_Cone", 
          "return": {
            "type": "ProjLib_Cone", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cone::ProjLib_Cone(gp_Cone, gp_Circ)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Cone", 
              "name": "Co", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cone", 
          "name": "ProjLib_Cone", 
          "return": {
            "type": "ProjLib_Cone", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cone::ProjLib_Cone(ProjLib_Cone)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_Cone", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cone", 
          "name": "ProjLib_Cone", 
          "return": {
            "type": "ProjLib_Cone", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_Cone::Init(gp_Cone)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Cone", 
              "name": "Co", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cone", 
          "name": "Init", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Cone::Project(gp_Lin)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cone", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Cone::Project(gp_Circ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cone", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Cone::Project(gp_Elips)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Elips", 
              "name": "E", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cone", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Cone::Project(gp_Parab)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Parab", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cone", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Cone::Project(gp_Hypr)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Hypr", 
              "name": "H", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Cone", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "ProjLib_Projector"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_Cone.hxx", 
        36
      ], 
      "key": "ProjLib_Cone"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_HProjectedCurve", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_HProjectedCurve::ProjLib_HProjectedCurve()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_HProjectedCurve", 
          "name": "ProjLib_HProjectedCurve", 
          "return": {
            "type": "ProjLib_HProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HProjectedCurve::ProjLib_HProjectedCurve(ProjLib_ProjectedCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_ProjectedCurve", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_HProjectedCurve", 
          "name": "ProjLib_HProjectedCurve", 
          "return": {
            "type": "ProjLib_HProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HProjectedCurve::ProjLib_HProjectedCurve(ProjLib_HProjectedCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_HProjectedCurve", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_HProjectedCurve", 
          "name": "ProjLib_HProjectedCurve", 
          "return": {
            "type": "ProjLib_HProjectedCurve", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_HProjectedCurve::Set(ProjLib_ProjectedCurve)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "ProjLib_ProjectedCurve", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_HProjectedCurve", 
          "name": "Set", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HProjectedCurve::Curve2d()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HProjectedCurve", 
          "name": "Curve2d", 
          "return": {
            "type": "Adaptor2d_Curve2d", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_HProjectedCurve::ChangeCurve2d()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HProjectedCurve", 
          "name": "ChangeCurve2d", 
          "return": {
            "type": "ProjLib_ProjectedCurve", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HProjectedCurve::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HProjectedCurve", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "ProjLib_HProjectedCurve::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HProjectedCurve", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "ProjLib_HProjectedCurve::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HProjectedCurve", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "Adaptor2d_HCurve2d"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_HProjectedCurve.hxx", 
        36
      ], 
      "key": "ProjLib_HProjectedCurve"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_ProjectOnSurface", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_ProjectOnSurface::ProjLib_ProjectOnSurface()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnSurface", 
          "name": "ProjLib_ProjectOnSurface", 
          "return": {
            "type": "ProjLib_ProjectOnSurface", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnSurface::ProjLib_ProjectOnSurface(opencascade::handle<Adaptor3d_HSurface>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectOnSurface", 
          "name": "ProjLib_ProjectOnSurface", 
          "return": {
            "type": "ProjLib_ProjectOnSurface", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnSurface::ProjLib_ProjectOnSurface(ProjLib_ProjectOnSurface)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_ProjectOnSurface", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectOnSurface", 
          "name": "ProjLib_ProjectOnSurface", 
          "return": {
            "type": "ProjLib_ProjectOnSurface", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_ProjectOnSurface::Load(opencascade::handle<Adaptor3d_HSurface>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ProjectOnSurface", 
          "name": "Load", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnSurface::Load(opencascade::handle<Adaptor3d_HCurve>, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tolerance", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ProjectOnSurface", 
          "name": "Load", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnSurface::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnSurface", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ProjectOnSurface::BSpline()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ProjectOnSurface", 
          "name": "BSpline", 
          "return": {
            "type": "opencascade::handle<Geom_BSplineCurve>"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_ProjectOnSurface.hxx", 
        33
      ], 
      "key": "ProjLib_ProjectOnSurface"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_CompProjectedCurve", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_CompProjectedCurve::ProjLib_CompProjectedCurve()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "ProjLib_CompProjectedCurve", 
          "return": {
            "type": "ProjLib_CompProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::ProjLib_CompProjectedCurve(opencascade::handle<Adaptor3d_HSurface>, opencascade::handle<Adaptor3d_HCurve>, Standard_Real, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "TolU", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "TolV", 
              "const": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "ProjLib_CompProjectedCurve", 
          "return": {
            "type": "ProjLib_CompProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::ProjLib_CompProjectedCurve(opencascade::handle<Adaptor3d_HSurface>, opencascade::handle<Adaptor3d_HCurve>, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "TolU", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "TolV", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MaxDist", 
              "const": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "ProjLib_CompProjectedCurve", 
          "return": {
            "type": "ProjLib_CompProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::ProjLib_CompProjectedCurve(ProjLib_CompProjectedCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_CompProjectedCurve", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "ProjLib_CompProjectedCurve", 
          "return": {
            "type": "ProjLib_CompProjectedCurve", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::Init()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "Init", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::Load(opencascade::handle<Adaptor3d_HSurface>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "Load", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::Load(opencascade::handle<Adaptor3d_HCurve>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "Load", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::GetSurface()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "GetSurface", 
          "return": {
            "type": "opencascade::handle<Adaptor3d_HSurface>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::GetCurve()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "GetCurve", 
          "return": {
            "type": "opencascade::handle<Adaptor3d_HCurve>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::GetTolerance(Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "TolU", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "TolV", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "GetTolerance", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::NbCurves()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "NbCurves", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::Bounds(Standard_Integer, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Udeb", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ufin", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "Bounds", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::IsSinglePnt(Standard_Integer, gp_Pnt2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "IsSinglePnt", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::IsUIso(Standard_Integer, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "U", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "IsUIso", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::IsVIso(Standard_Integer, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "V", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "IsVIso", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::Value(Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "Value", 
          "return": {
            "type": "gp_Pnt2d"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::D0(Standard_Real, gp_Pnt2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "D0", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::D1(Standard_Real, gp_Pnt2d, gp_Vec2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "D1", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::D2(Standard_Real, gp_Pnt2d, gp_Vec2d, gp_Vec2d)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V1", 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V2", 
              "ref": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "D2", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::DN(Standard_Real, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "DN", 
          "return": {
            "type": "gp_Vec2d"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::FirstParameter()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "FirstParameter", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::LastParameter()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "LastParameter", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::NbIntervals(GeomAbs_Shape)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "GeomAbs_Shape", 
              "name": "S", 
              "const": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "NbIntervals", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::Trim(Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "FirstParam", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LastParam", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "const": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "Trim", 
          "return": {
            "type": "opencascade::handle<Adaptor2d_HCurve2d>"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::Intervals(TColStd_Array1OfReal, GeomAbs_Shape)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "TColStd_Array1OfReal", 
              "name": "T", 
              "ref": true
            }, 
            {
              "type": "GeomAbs_Shape", 
              "name": "S", 
              "const": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "Intervals", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::MaxDistance(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "MaxDistance", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::GetSequence()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "GetSequence", 
          "return": {
            "type": "opencascade::handle<ProjLib_HSequenceOfHSequenceOfPnt>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_CompProjectedCurve::GetType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_CompProjectedCurve", 
          "name": "GetType", 
          "return": {
            "type": "GeomAbs_CurveType"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "Adaptor2d_Curve2d"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_CompProjectedCurve.hxx", 
        46
      ], 
      "key": "ProjLib_CompProjectedCurve"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_Torus", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_Torus::ProjLib_Torus()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_Torus", 
          "name": "ProjLib_Torus", 
          "return": {
            "type": "ProjLib_Torus", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Torus::ProjLib_Torus(gp_Torus)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Torus", 
              "name": "To", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Torus", 
          "name": "ProjLib_Torus", 
          "return": {
            "type": "ProjLib_Torus", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Torus::ProjLib_Torus(gp_Torus, gp_Circ)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Torus", 
              "name": "To", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Torus", 
          "name": "ProjLib_Torus", 
          "return": {
            "type": "ProjLib_Torus", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Torus::ProjLib_Torus(ProjLib_Torus)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_Torus", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Torus", 
          "name": "ProjLib_Torus", 
          "return": {
            "type": "ProjLib_Torus", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_Torus::Init(gp_Torus)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Torus", 
              "name": "To", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Torus", 
          "name": "Init", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_Torus::Project(gp_Lin)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Torus", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Torus::Project(gp_Circ)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Circ", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Torus", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Torus::Project(gp_Elips)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Elips", 
              "name": "E", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Torus", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Torus::Project(gp_Parab)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Parab", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Torus", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_Torus::Project(gp_Hypr)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "gp_Hypr", 
              "name": "H", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_Torus", 
          "name": "Project", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "ProjLib_Projector"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_Torus.hxx", 
        36
      ], 
      "key": "ProjLib_Torus"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_HCompProjectedCurve", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_HCompProjectedCurve::ProjLib_HCompProjectedCurve()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_HCompProjectedCurve", 
          "name": "ProjLib_HCompProjectedCurve", 
          "return": {
            "type": "ProjLib_HCompProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HCompProjectedCurve::ProjLib_HCompProjectedCurve(ProjLib_CompProjectedCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_CompProjectedCurve", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_HCompProjectedCurve", 
          "name": "ProjLib_HCompProjectedCurve", 
          "return": {
            "type": "ProjLib_HCompProjectedCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HCompProjectedCurve::ProjLib_HCompProjectedCurve(ProjLib_HCompProjectedCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_HCompProjectedCurve", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_HCompProjectedCurve", 
          "name": "ProjLib_HCompProjectedCurve", 
          "return": {
            "type": "ProjLib_HCompProjectedCurve", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_HCompProjectedCurve::Set(ProjLib_CompProjectedCurve)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "ProjLib_CompProjectedCurve", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_HCompProjectedCurve", 
          "name": "Set", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HCompProjectedCurve::Curve2d()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HCompProjectedCurve", 
          "name": "Curve2d", 
          "return": {
            "type": "Adaptor2d_Curve2d", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "ProjLib_HCompProjectedCurve::ChangeCurve2d()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HCompProjectedCurve", 
          "name": "ChangeCurve2d", 
          "return": {
            "type": "ProjLib_CompProjectedCurve", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_HCompProjectedCurve::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HCompProjectedCurve", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "ProjLib_HCompProjectedCurve::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HCompProjectedCurve", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "ProjLib_HCompProjectedCurve::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_HCompProjectedCurve", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "Adaptor2d_HCurve2d"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_HCompProjectedCurve.hxx", 
        36
      ], 
      "key": "ProjLib_HCompProjectedCurve"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_ComputeApproxOnPolarSurface", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::ProjLib_ComputeApproxOnPolarSurface()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "ProjLib_ComputeApproxOnPolarSurface", 
          "return": {
            "type": "ProjLib_ComputeApproxOnPolarSurface", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::ProjLib_ComputeApproxOnPolarSurface(opencascade::handle<Adaptor3d_HCurve>, opencascade::handle<Adaptor3d_HSurface>, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "default": "1.0E-4", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "ProjLib_ComputeApproxOnPolarSurface", 
          "return": {
            "type": "ProjLib_ComputeApproxOnPolarSurface", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::ProjLib_ComputeApproxOnPolarSurface(opencascade::handle<Adaptor2d_HCurve2d>, opencascade::handle<Adaptor3d_HCurve>, opencascade::handle<Adaptor3d_HSurface>, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor2d_HCurve2d>", 
              "name": "InitCurve2d", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "ProjLib_ComputeApproxOnPolarSurface", 
          "return": {
            "type": "ProjLib_ComputeApproxOnPolarSurface", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::ProjLib_ComputeApproxOnPolarSurface(opencascade::handle<Adaptor2d_HCurve2d>, opencascade::handle<Adaptor2d_HCurve2d>, opencascade::handle<Adaptor3d_HCurve>, opencascade::handle<Adaptor3d_HSurface>, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor2d_HCurve2d>", 
              "name": "InitCurve2d", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor2d_HCurve2d>", 
              "name": "InitCurve2dBis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "const": true
            }
          ], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "ProjLib_ComputeApproxOnPolarSurface", 
          "return": {
            "type": "ProjLib_ComputeApproxOnPolarSurface", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::ProjLib_ComputeApproxOnPolarSurface(ProjLib_ComputeApproxOnPolarSurface)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_ComputeApproxOnPolarSurface", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "ProjLib_ComputeApproxOnPolarSurface", 
          "return": {
            "type": "ProjLib_ComputeApproxOnPolarSurface", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::Perform(opencascade::handle<Adaptor2d_HCurve2d>, opencascade::handle<Adaptor3d_HCurve>, opencascade::handle<Adaptor3d_HSurface>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor2d_HCurve2d>", 
              "name": "InitCurve2d", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "Perform", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::BuildInitialCurve2d(opencascade::handle<Adaptor3d_HCurve>, opencascade::handle<Adaptor3d_HSurface>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "Curve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "BuildInitialCurve2d", 
          "return": {
            "type": "opencascade::handle<Adaptor2d_HCurve2d>"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::ProjectUsingInitialCurve2d(opencascade::handle<Adaptor3d_HCurve>, opencascade::handle<Adaptor3d_HSurface>, opencascade::handle<Adaptor2d_HCurve2d>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor3d_HCurve>", 
              "name": "Curve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor3d_HSurface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Adaptor2d_HCurve2d>", 
              "name": "InitCurve2d", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "ProjectUsingInitialCurve2d", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::BSpline()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "BSpline", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::Curve2d()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "Curve2d", 
          "return": {
            "type": "opencascade::handle<Geom2d_Curve>"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_ComputeApproxOnPolarSurface::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_ComputeApproxOnPolarSurface", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_ComputeApproxOnPolarSurface.hxx", 
        38
      ], 
      "key": "ProjLib_ComputeApproxOnPolarSurface"
    }, 
    {
      "declType": "class", 
      "name": "ProjLib_PrjResolve", 
      "abstract": false, 
      "declarations": [
        {
          "key": "ProjLib_PrjResolve::ProjLib_PrjResolve(Adaptor3d_Curve, Adaptor3d_Surface, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Adaptor3d_Curve", 
              "name": "C", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Adaptor3d_Surface", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Fix", 
              "const": true
            }
          ], 
          "parent": "ProjLib_PrjResolve", 
          "name": "ProjLib_PrjResolve", 
          "return": {
            "type": "ProjLib_PrjResolve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_PrjResolve::ProjLib_PrjResolve(ProjLib_PrjResolve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "ProjLib_PrjResolve", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "ProjLib_PrjResolve", 
          "name": "ProjLib_PrjResolve", 
          "return": {
            "type": "ProjLib_PrjResolve", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "ProjLib_PrjResolve::Perform(Standard_Real, Standard_Real, Standard_Real, gp_Pnt2d, gp_Pnt2d, gp_Pnt2d, Standard_Real, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "t", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "U", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "V", 
              "const": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Tol", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Inf", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Sup", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "FTol", 
              "default": "-1", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "StrictInside", 
              "default": "false", 
              "const": true
            }
          ], 
          "parent": "ProjLib_PrjResolve", 
          "name": "Perform", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_PrjResolve::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_PrjResolve", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "ProjLib_PrjResolve::Solution()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "ProjLib_PrjResolve", 
          "name": "Solution", 
          "return": {
            "type": "gp_Pnt2d"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/ProjLib_PrjResolve.hxx", 
        39
      ], 
      "key": "ProjLib_PrjResolve"
    }, 
    {
      "type": "NCollection_Sequence<opencascade::handle<TColgp_HSequenceOfPnt> >", 
      "declType": "typedef", 
      "name": "ProjLib_SequenceOfHSequenceOfPnt", 
      "key": "ProjLib_SequenceOfHSequenceOfPnt"
    }, 
    {
      "type": "opencascade::handle<ProjLib_HSequenceOfHSequenceOfPnt>", 
      "declType": "typedef", 
      "name": "Handle_ProjLib_HSequenceOfHSequenceOfPnt", 
      "key": "Handle_ProjLib_HSequenceOfHSequenceOfPnt"
    }, 
    {
      "type": "opencascade::handle<ProjLib_HProjectedCurve>", 
      "declType": "typedef", 
      "name": "Handle_ProjLib_HProjectedCurve", 
      "key": "Handle_ProjLib_HProjectedCurve"
    }, 
    {
      "type": "opencascade::handle<ProjLib_HCompProjectedCurve>", 
      "declType": "typedef", 
      "name": "Handle_ProjLib_HCompProjectedCurve", 
      "key": "Handle_ProjLib_HCompProjectedCurve"
    }
  ], 
  "name": "ProjLib"
}