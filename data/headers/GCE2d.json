{
  "headers": [
    "GCE2d_MakeTranslation.hxx", 
    "GCE2d_MakeMirror.hxx", 
    "GCE2d_MakeParabola.hxx", 
    "GCE2d_MakeHyperbola.hxx", 
    "GCE2d_MakeArcOfHyperbola.hxx", 
    "GCE2d_Root.hxx", 
    "GCE2d_MakeCircle.hxx", 
    "GCE2d_MakeArcOfEllipse.hxx", 
    "GCE2d_MakeArcOfCircle.hxx", 
    "GCE2d_MakeEllipse.hxx", 
    "GCE2d_MakeSegment.hxx", 
    "GCE2d_MakeScale.hxx", 
    "GCE2d_MakeLine.hxx", 
    "GCE2d_MakeArcOfParabola.hxx", 
    "GCE2d_MakeRotation.hxx"
  ], 
  "declarations": [
    {
      "declType": "class", 
      "name": "GCE2d_MakeTranslation", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeTranslation::GCE2d_MakeTranslation(gp_Vec2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Vect", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeTranslation", 
          "name": "GCE2d_MakeTranslation", 
          "return": {
            "type": "GCE2d_MakeTranslation", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeTranslation::GCE2d_MakeTranslation(gp_Pnt2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "Point1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Point2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeTranslation", 
          "name": "GCE2d_MakeTranslation", 
          "return": {
            "type": "GCE2d_MakeTranslation", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeTranslation::GCE2d_MakeTranslation(GCE2d_MakeTranslation)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeTranslation", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeTranslation", 
          "name": "GCE2d_MakeTranslation", 
          "return": {
            "type": "GCE2d_MakeTranslation", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeTranslation::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeTranslation", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_Transformation>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeTranslation.hxx", 
        36
      ], 
      "key": "GCE2d_MakeTranslation"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeMirror", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeMirror::GCE2d_MakeMirror(gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeMirror", 
          "name": "GCE2d_MakeMirror", 
          "return": {
            "type": "GCE2d_MakeMirror", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeMirror::GCE2d_MakeMirror(gp_Ax2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "Axis", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeMirror", 
          "name": "GCE2d_MakeMirror", 
          "return": {
            "type": "GCE2d_MakeMirror", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeMirror::GCE2d_MakeMirror(gp_Lin2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "Line", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeMirror", 
          "name": "GCE2d_MakeMirror", 
          "return": {
            "type": "GCE2d_MakeMirror", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeMirror::GCE2d_MakeMirror(gp_Pnt2d, gp_Dir2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir2d", 
              "name": "Direc", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeMirror", 
          "name": "GCE2d_MakeMirror", 
          "return": {
            "type": "GCE2d_MakeMirror", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeMirror::GCE2d_MakeMirror(GCE2d_MakeMirror)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeMirror", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeMirror", 
          "name": "GCE2d_MakeMirror", 
          "return": {
            "type": "GCE2d_MakeMirror", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeMirror::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeMirror", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_Transformation>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeMirror.hxx", 
        38
      ], 
      "key": "GCE2d_MakeMirror"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_Root", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_Root::GCE2d_Root(GCE2d_Root)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_Root", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_Root", 
          "name": "GCE2d_Root", 
          "return": {
            "type": "GCE2d_Root", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_Root::GCE2d_Root()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "GCE2d_Root", 
          "name": "GCE2d_Root", 
          "return": {
            "type": "GCE2d_Root", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true
        }, 
        {
          "key": "GCE2d_Root::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_Root", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_Root::Status()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_Root", 
          "name": "Status", 
          "return": {
            "type": "gce_ErrorType"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_Root.hxx", 
        30
      ], 
      "key": "GCE2d_Root"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeParabola", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeParabola::GCE2d_MakeParabola(gp_Parab2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Parab2d", 
              "name": "Prb", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeParabola", 
          "name": "GCE2d_MakeParabola", 
          "return": {
            "type": "GCE2d_MakeParabola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeParabola::GCE2d_MakeParabola(gp_Ax22d, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "Axis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Focal", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeParabola", 
          "name": "GCE2d_MakeParabola", 
          "return": {
            "type": "GCE2d_MakeParabola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeParabola::GCE2d_MakeParabola(gp_Ax2d, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "MirrorAxis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Focal", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeParabola", 
          "name": "GCE2d_MakeParabola", 
          "return": {
            "type": "GCE2d_MakeParabola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeParabola::GCE2d_MakeParabola(gp_Ax2d, gp_Pnt2d, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "D", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "F", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeParabola", 
          "name": "GCE2d_MakeParabola", 
          "return": {
            "type": "GCE2d_MakeParabola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeParabola::GCE2d_MakeParabola(gp_Pnt2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "S1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "O", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeParabola", 
          "name": "GCE2d_MakeParabola", 
          "return": {
            "type": "GCE2d_MakeParabola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeParabola::GCE2d_MakeParabola(GCE2d_MakeParabola)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeParabola", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeParabola", 
          "name": "GCE2d_MakeParabola", 
          "return": {
            "type": "GCE2d_MakeParabola", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeParabola::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeParabola", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_Parabola>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "GCE2d_Root"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeParabola.hxx", 
        50
      ], 
      "key": "GCE2d_MakeParabola"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeHyperbola", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeHyperbola::GCE2d_MakeHyperbola(gp_Hypr2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Hypr2d", 
              "name": "H", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeHyperbola", 
          "name": "GCE2d_MakeHyperbola", 
          "return": {
            "type": "GCE2d_MakeHyperbola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeHyperbola::GCE2d_MakeHyperbola(gp_Ax2d, Standard_Real, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "MajorAxis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeHyperbola", 
          "name": "GCE2d_MakeHyperbola", 
          "return": {
            "type": "GCE2d_MakeHyperbola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeHyperbola::GCE2d_MakeHyperbola(gp_Ax22d, Standard_Real, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "Axis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeHyperbola", 
          "name": "GCE2d_MakeHyperbola", 
          "return": {
            "type": "GCE2d_MakeHyperbola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeHyperbola::GCE2d_MakeHyperbola(gp_Pnt2d, gp_Pnt2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "S1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "S2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Center", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeHyperbola", 
          "name": "GCE2d_MakeHyperbola", 
          "return": {
            "type": "GCE2d_MakeHyperbola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeHyperbola::GCE2d_MakeHyperbola(GCE2d_MakeHyperbola)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeHyperbola", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeHyperbola", 
          "name": "GCE2d_MakeHyperbola", 
          "return": {
            "type": "GCE2d_MakeHyperbola", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeHyperbola::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeHyperbola", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_Hyperbola>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "GCE2d_Root"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeHyperbola.hxx", 
        60
      ], 
      "key": "GCE2d_MakeHyperbola"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeArcOfHyperbola", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeArcOfHyperbola::GCE2d_MakeArcOfHyperbola(gp_Hypr2d, Standard_Real, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Hypr2d", 
              "name": "Hypr", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha1", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha2", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfHyperbola", 
          "name": "GCE2d_MakeArcOfHyperbola", 
          "return": {
            "type": "GCE2d_MakeArcOfHyperbola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfHyperbola::GCE2d_MakeArcOfHyperbola(gp_Hypr2d, gp_Pnt2d, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Hypr2d", 
              "name": "Hypr", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfHyperbola", 
          "name": "GCE2d_MakeArcOfHyperbola", 
          "return": {
            "type": "GCE2d_MakeArcOfHyperbola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfHyperbola::GCE2d_MakeArcOfHyperbola(gp_Hypr2d, gp_Pnt2d, gp_Pnt2d, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Hypr2d", 
              "name": "Hypr", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfHyperbola", 
          "name": "GCE2d_MakeArcOfHyperbola", 
          "return": {
            "type": "GCE2d_MakeArcOfHyperbola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfHyperbola::GCE2d_MakeArcOfHyperbola(GCE2d_MakeArcOfHyperbola)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeArcOfHyperbola", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfHyperbola", 
          "name": "GCE2d_MakeArcOfHyperbola", 
          "return": {
            "type": "GCE2d_MakeArcOfHyperbola", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeArcOfHyperbola::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeArcOfHyperbola", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_TrimmedCurve>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "GCE2d_Root"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeArcOfHyperbola.hxx", 
        39
      ], 
      "key": "GCE2d_MakeArcOfHyperbola"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeCircle", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeCircle::GCE2d_MakeCircle(gp_Circ2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Circ2d", 
              "name": "C", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeCircle", 
          "name": "GCE2d_MakeCircle", 
          "return": {
            "type": "GCE2d_MakeCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeCircle::GCE2d_MakeCircle(gp_Ax2d, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeCircle", 
          "name": "GCE2d_MakeCircle", 
          "return": {
            "type": "GCE2d_MakeCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeCircle::GCE2d_MakeCircle(gp_Ax22d, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeCircle", 
          "name": "GCE2d_MakeCircle", 
          "return": {
            "type": "GCE2d_MakeCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeCircle::GCE2d_MakeCircle(gp_Circ2d, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Circ2d", 
              "name": "Circ", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Dist", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeCircle", 
          "name": "GCE2d_MakeCircle", 
          "return": {
            "type": "GCE2d_MakeCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeCircle::GCE2d_MakeCircle(gp_Circ2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Circ2d", 
              "name": "Circ", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeCircle", 
          "name": "GCE2d_MakeCircle", 
          "return": {
            "type": "GCE2d_MakeCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeCircle::GCE2d_MakeCircle(gp_Pnt2d, gp_Pnt2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P3", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeCircle", 
          "name": "GCE2d_MakeCircle", 
          "return": {
            "type": "GCE2d_MakeCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeCircle::GCE2d_MakeCircle(gp_Pnt2d, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeCircle", 
          "name": "GCE2d_MakeCircle", 
          "return": {
            "type": "GCE2d_MakeCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeCircle::GCE2d_MakeCircle(gp_Pnt2d, gp_Pnt2d, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "Center", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeCircle", 
          "name": "GCE2d_MakeCircle", 
          "return": {
            "type": "GCE2d_MakeCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeCircle::GCE2d_MakeCircle(GCE2d_MakeCircle)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeCircle", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeCircle", 
          "name": "GCE2d_MakeCircle", 
          "return": {
            "type": "GCE2d_MakeCircle", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeCircle::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeCircle", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_Circle>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "GCE2d_Root"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeCircle.hxx", 
        45
      ], 
      "key": "GCE2d_MakeCircle"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeArcOfEllipse", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeArcOfEllipse::GCE2d_MakeArcOfEllipse(gp_Elips2d, Standard_Real, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Elips2d", 
              "name": "Elips", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha1", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha2", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfEllipse", 
          "name": "GCE2d_MakeArcOfEllipse", 
          "return": {
            "type": "GCE2d_MakeArcOfEllipse", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfEllipse::GCE2d_MakeArcOfEllipse(gp_Elips2d, gp_Pnt2d, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Elips2d", 
              "name": "Elips", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfEllipse", 
          "name": "GCE2d_MakeArcOfEllipse", 
          "return": {
            "type": "GCE2d_MakeArcOfEllipse", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfEllipse::GCE2d_MakeArcOfEllipse(gp_Elips2d, gp_Pnt2d, gp_Pnt2d, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Elips2d", 
              "name": "Elips", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfEllipse", 
          "name": "GCE2d_MakeArcOfEllipse", 
          "return": {
            "type": "GCE2d_MakeArcOfEllipse", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfEllipse::GCE2d_MakeArcOfEllipse(GCE2d_MakeArcOfEllipse)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeArcOfEllipse", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfEllipse", 
          "name": "GCE2d_MakeArcOfEllipse", 
          "return": {
            "type": "GCE2d_MakeArcOfEllipse", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeArcOfEllipse::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeArcOfEllipse", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_TrimmedCurve>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "GCE2d_Root"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeArcOfEllipse.hxx", 
        39
      ], 
      "key": "GCE2d_MakeArcOfEllipse"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeArcOfCircle", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeArcOfCircle::GCE2d_MakeArcOfCircle(gp_Circ2d, Standard_Real, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Circ2d", 
              "name": "Circ", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha1", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha2", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfCircle", 
          "name": "GCE2d_MakeArcOfCircle", 
          "return": {
            "type": "GCE2d_MakeArcOfCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfCircle::GCE2d_MakeArcOfCircle(gp_Circ2d, gp_Pnt2d, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Circ2d", 
              "name": "Circ", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfCircle", 
          "name": "GCE2d_MakeArcOfCircle", 
          "return": {
            "type": "GCE2d_MakeArcOfCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfCircle::GCE2d_MakeArcOfCircle(gp_Circ2d, gp_Pnt2d, gp_Pnt2d, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Circ2d", 
              "name": "Circ", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfCircle", 
          "name": "GCE2d_MakeArcOfCircle", 
          "return": {
            "type": "GCE2d_MakeArcOfCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfCircle::GCE2d_MakeArcOfCircle(gp_Pnt2d, gp_Pnt2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P3", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfCircle", 
          "name": "GCE2d_MakeArcOfCircle", 
          "return": {
            "type": "GCE2d_MakeArcOfCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfCircle::GCE2d_MakeArcOfCircle(gp_Pnt2d, gp_Vec2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfCircle", 
          "name": "GCE2d_MakeArcOfCircle", 
          "return": {
            "type": "GCE2d_MakeArcOfCircle", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfCircle::GCE2d_MakeArcOfCircle(GCE2d_MakeArcOfCircle)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeArcOfCircle", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfCircle", 
          "name": "GCE2d_MakeArcOfCircle", 
          "return": {
            "type": "GCE2d_MakeArcOfCircle", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeArcOfCircle::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeArcOfCircle", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_TrimmedCurve>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "GCE2d_Root"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeArcOfCircle.hxx", 
        40
      ], 
      "key": "GCE2d_MakeArcOfCircle"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeEllipse", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeEllipse::GCE2d_MakeEllipse(gp_Elips2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Elips2d", 
              "name": "E", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeEllipse", 
          "name": "GCE2d_MakeEllipse", 
          "return": {
            "type": "GCE2d_MakeEllipse", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeEllipse::GCE2d_MakeEllipse(gp_Ax2d, Standard_Real, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "MajorAxis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeEllipse", 
          "name": "GCE2d_MakeEllipse", 
          "return": {
            "type": "GCE2d_MakeEllipse", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeEllipse::GCE2d_MakeEllipse(gp_Ax22d, Standard_Real, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "Axis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeEllipse", 
          "name": "GCE2d_MakeEllipse", 
          "return": {
            "type": "GCE2d_MakeEllipse", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeEllipse::GCE2d_MakeEllipse(gp_Pnt2d, gp_Pnt2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "S1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "S2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Center", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeEllipse", 
          "name": "GCE2d_MakeEllipse", 
          "return": {
            "type": "GCE2d_MakeEllipse", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeEllipse::GCE2d_MakeEllipse(GCE2d_MakeEllipse)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeEllipse", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeEllipse", 
          "name": "GCE2d_MakeEllipse", 
          "return": {
            "type": "GCE2d_MakeEllipse", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeEllipse::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeEllipse", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_Ellipse>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "GCE2d_Root"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeEllipse.hxx", 
        45
      ], 
      "key": "GCE2d_MakeEllipse"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeSegment", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeSegment::GCE2d_MakeSegment(gp_Pnt2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeSegment", 
          "name": "GCE2d_MakeSegment", 
          "return": {
            "type": "GCE2d_MakeSegment", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeSegment::GCE2d_MakeSegment(gp_Pnt2d, gp_Dir2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeSegment", 
          "name": "GCE2d_MakeSegment", 
          "return": {
            "type": "GCE2d_MakeSegment", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeSegment::GCE2d_MakeSegment(gp_Lin2d, Standard_Real, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "Line", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "U1", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "U2", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeSegment", 
          "name": "GCE2d_MakeSegment", 
          "return": {
            "type": "GCE2d_MakeSegment", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeSegment::GCE2d_MakeSegment(gp_Lin2d, gp_Pnt2d, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "Line", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ulast", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeSegment", 
          "name": "GCE2d_MakeSegment", 
          "return": {
            "type": "GCE2d_MakeSegment", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeSegment::GCE2d_MakeSegment(gp_Lin2d, gp_Pnt2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "Line", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeSegment", 
          "name": "GCE2d_MakeSegment", 
          "return": {
            "type": "GCE2d_MakeSegment", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeSegment::GCE2d_MakeSegment(GCE2d_MakeSegment)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeSegment", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeSegment", 
          "name": "GCE2d_MakeSegment", 
          "return": {
            "type": "GCE2d_MakeSegment", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeSegment::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeSegment", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_TrimmedCurve>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "GCE2d_Root"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeSegment.hxx", 
        41
      ], 
      "key": "GCE2d_MakeSegment"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeScale", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeScale::GCE2d_MakeScale(gp_Pnt2d, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Scale", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeScale", 
          "name": "GCE2d_MakeScale", 
          "return": {
            "type": "GCE2d_MakeScale", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeScale::GCE2d_MakeScale(GCE2d_MakeScale)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeScale", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeScale", 
          "name": "GCE2d_MakeScale", 
          "return": {
            "type": "GCE2d_MakeScale", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeScale::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeScale", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_Transformation>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeScale.hxx", 
        36
      ], 
      "key": "GCE2d_MakeScale"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeLine", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeLine::GCE2d_MakeLine(gp_Ax2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeLine", 
          "name": "GCE2d_MakeLine", 
          "return": {
            "type": "GCE2d_MakeLine", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeLine::GCE2d_MakeLine(gp_Lin2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeLine", 
          "name": "GCE2d_MakeLine", 
          "return": {
            "type": "GCE2d_MakeLine", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeLine::GCE2d_MakeLine(gp_Pnt2d, gp_Dir2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeLine", 
          "name": "GCE2d_MakeLine", 
          "return": {
            "type": "GCE2d_MakeLine", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeLine::GCE2d_MakeLine(gp_Lin2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "Lin", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeLine", 
          "name": "GCE2d_MakeLine", 
          "return": {
            "type": "GCE2d_MakeLine", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeLine::GCE2d_MakeLine(gp_Lin2d, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "Lin", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Dist", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeLine", 
          "name": "GCE2d_MakeLine", 
          "return": {
            "type": "GCE2d_MakeLine", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeLine::GCE2d_MakeLine(gp_Pnt2d, gp_Pnt2d)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeLine", 
          "name": "GCE2d_MakeLine", 
          "return": {
            "type": "GCE2d_MakeLine", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeLine::GCE2d_MakeLine(GCE2d_MakeLine)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeLine", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeLine", 
          "name": "GCE2d_MakeLine", 
          "return": {
            "type": "GCE2d_MakeLine", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeLine::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeLine", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_Line>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "GCE2d_Root"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeLine.hxx", 
        39
      ], 
      "key": "GCE2d_MakeLine"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeArcOfParabola", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeArcOfParabola::GCE2d_MakeArcOfParabola(gp_Parab2d, Standard_Real, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Parab2d", 
              "name": "Parab", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha1", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha2", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfParabola", 
          "name": "GCE2d_MakeArcOfParabola", 
          "return": {
            "type": "GCE2d_MakeArcOfParabola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfParabola::GCE2d_MakeArcOfParabola(gp_Parab2d, gp_Pnt2d, Standard_Real, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Parab2d", 
              "name": "Parab", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Alpha", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfParabola", 
          "name": "GCE2d_MakeArcOfParabola", 
          "return": {
            "type": "GCE2d_MakeArcOfParabola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfParabola::GCE2d_MakeArcOfParabola(gp_Parab2d, gp_Pnt2d, gp_Pnt2d, Standard_Boolean)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Parab2d", 
              "name": "Parab", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfParabola", 
          "name": "GCE2d_MakeArcOfParabola", 
          "return": {
            "type": "GCE2d_MakeArcOfParabola", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeArcOfParabola::GCE2d_MakeArcOfParabola(GCE2d_MakeArcOfParabola)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeArcOfParabola", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeArcOfParabola", 
          "name": "GCE2d_MakeArcOfParabola", 
          "return": {
            "type": "GCE2d_MakeArcOfParabola", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeArcOfParabola::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeArcOfParabola", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_TrimmedCurve>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "GCE2d_Root"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeArcOfParabola.hxx", 
        39
      ], 
      "key": "GCE2d_MakeArcOfParabola"
    }, 
    {
      "declType": "class", 
      "name": "GCE2d_MakeRotation", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GCE2d_MakeRotation::GCE2d_MakeRotation(gp_Pnt2d, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Angle", 
              "const": true
            }
          ], 
          "parent": "GCE2d_MakeRotation", 
          "name": "GCE2d_MakeRotation", 
          "return": {
            "type": "GCE2d_MakeRotation", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GCE2d_MakeRotation::GCE2d_MakeRotation(GCE2d_MakeRotation)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GCE2d_MakeRotation", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GCE2d_MakeRotation", 
          "name": "GCE2d_MakeRotation", 
          "return": {
            "type": "GCE2d_MakeRotation", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GCE2d_MakeRotation::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GCE2d_MakeRotation", 
          "name": "Value", 
          "return": {
            "type": "opencascade::handle<Geom2d_Transformation>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GCE2d_MakeRotation.hxx", 
        35
      ], 
      "key": "GCE2d_MakeRotation"
    }
  ], 
  "name": "GCE2d"
}