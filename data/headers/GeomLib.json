{
  "headers": [
    "GeomLib_InterpolationErrors.hxx", 
    "GeomLib_CheckCurveOnSurface.hxx", 
    "GeomLib_DenominatorMultiplierPtr.hxx", 
    "GeomLib_PolyFunc.hxx", 
    "GeomLib_Check2dBSplineCurve.hxx", 
    "GeomLib_CheckBSplineCurve.hxx", 
    "GeomLib_Array1OfMat.hxx", 
    "GeomLib_Tool.hxx", 
    "GeomLib_Interpolate.hxx", 
    "GeomLib_LogSample.hxx", 
    "GeomLib_IsPlanarSurface.hxx", 
    "GeomLib_DenominatorMultiplier.hxx", 
    "GeomLib_MakeCurvefromApprox.hxx"
  ], 
  "declarations": [
    {
      "declType": "class", 
      "name": "GeomLib_CheckCurveOnSurface", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GeomLib_CheckCurveOnSurface::GeomLib_CheckCurveOnSurface()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "GeomLib_CheckCurveOnSurface", 
          "return": {
            "type": "GeomLib_CheckCurveOnSurface", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::GeomLib_CheckCurveOnSurface(opencascade::handle<Geom_Curve>, opencascade::handle<Geom_Surface>, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom_Curve>", 
              "name": "theCurve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Geom_Surface>", 
              "name": "theSurface", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theFirst", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theLast", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theTolRange", 
              "default": "Precision::PConfusion()", 
              "const": true
            }
          ], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "GeomLib_CheckCurveOnSurface", 
          "return": {
            "type": "GeomLib_CheckCurveOnSurface", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::GeomLib_CheckCurveOnSurface(GeomLib_CheckCurveOnSurface)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GeomLib_CheckCurveOnSurface", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "GeomLib_CheckCurveOnSurface", 
          "return": {
            "type": "GeomLib_CheckCurveOnSurface", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::Init(opencascade::handle<Geom_Curve>, opencascade::handle<Geom_Surface>, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom_Curve>", 
              "name": "theCurve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "opencascade::handle<Geom_Surface>", 
              "name": "theSurface", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theFirst", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theLast", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theTolRange", 
              "default": "Precision::PConfusion()", 
              "const": true
            }
          ], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "Init", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::Init()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "Init", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::Perform(opencascade::handle<Geom2d_Curve>, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_Curve>", 
              "name": "thePCurve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "isTheMultyTheradDisabled", 
              "default": "false", 
              "const": true
            }
          ], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "Perform", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::Curve()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "Curve", 
          "return": {
            "type": "opencascade::handle<Geom_Curve>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::Surface()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "Surface", 
          "return": {
            "type": "opencascade::handle<Geom_Surface>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::Range(Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theFirst", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theLast", 
              "ref": true
            }
          ], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "Range", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::ErrorStatus()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "ErrorStatus", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::MaxDistance()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "MaxDistance", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckCurveOnSurface::MaxParameter()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_CheckCurveOnSurface", 
          "name": "MaxParameter", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GeomLib_CheckCurveOnSurface.hxx", 
        27
      ], 
      "key": "GeomLib_CheckCurveOnSurface"
    }, 
    {
      "declType": "class", 
      "name": "GeomLib_DenominatorMultiplier", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GeomLib_DenominatorMultiplier::GeomLib_DenominatorMultiplier(opencascade::handle<Geom_BSplineSurface>, TColStd_Array1OfReal)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom_BSplineSurface>", 
              "name": "Surface", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "TColStd_Array1OfReal", 
              "name": "KnotVector", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_DenominatorMultiplier", 
          "name": "GeomLib_DenominatorMultiplier", 
          "return": {
            "type": "GeomLib_DenominatorMultiplier", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_DenominatorMultiplier::GeomLib_DenominatorMultiplier(GeomLib_DenominatorMultiplier)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GeomLib_DenominatorMultiplier", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_DenominatorMultiplier", 
          "name": "GeomLib_DenominatorMultiplier", 
          "return": {
            "type": "GeomLib_DenominatorMultiplier", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GeomLib_DenominatorMultiplier::Value(Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "UParameter", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "VParameter", 
              "const": true
            }
          ], 
          "parent": "GeomLib_DenominatorMultiplier", 
          "name": "Value", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GeomLib_DenominatorMultiplier.hxx", 
        34
      ], 
      "key": "GeomLib_DenominatorMultiplier"
    }, 
    {
      "declType": "class", 
      "name": "GeomLib_PolyFunc", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GeomLib_PolyFunc::GeomLib_PolyFunc(math_Vector)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "math_Vector", 
              "name": "Coeffs", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_PolyFunc", 
          "name": "GeomLib_PolyFunc", 
          "return": {
            "type": "GeomLib_PolyFunc", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_PolyFunc::GeomLib_PolyFunc(GeomLib_PolyFunc)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GeomLib_PolyFunc", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_PolyFunc", 
          "name": "GeomLib_PolyFunc", 
          "return": {
            "type": "GeomLib_PolyFunc", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GeomLib_PolyFunc::Value(Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "F", 
              "ref": true
            }
          ], 
          "parent": "GeomLib_PolyFunc", 
          "name": "Value", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "GeomLib_PolyFunc::Derivative(Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "ref": true
            }
          ], 
          "parent": "GeomLib_PolyFunc", 
          "name": "Derivative", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "GeomLib_PolyFunc::Values(Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "F", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "ref": true
            }
          ], 
          "parent": "GeomLib_PolyFunc", 
          "name": "Values", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "math_FunctionWithDerivative"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GeomLib_PolyFunc.hxx", 
        31
      ], 
      "key": "GeomLib_PolyFunc"
    }, 
    {
      "declType": "class", 
      "name": "GeomLib_Check2dBSplineCurve", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GeomLib_Check2dBSplineCurve::GeomLib_Check2dBSplineCurve(opencascade::handle<Geom2d_BSplineCurve>, Standard_Real, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_BSplineCurve>", 
              "name": "Curve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "parent": "GeomLib_Check2dBSplineCurve", 
          "name": "GeomLib_Check2dBSplineCurve", 
          "return": {
            "type": "GeomLib_Check2dBSplineCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_Check2dBSplineCurve::GeomLib_Check2dBSplineCurve(GeomLib_Check2dBSplineCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GeomLib_Check2dBSplineCurve", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_Check2dBSplineCurve", 
          "name": "GeomLib_Check2dBSplineCurve", 
          "return": {
            "type": "GeomLib_Check2dBSplineCurve", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GeomLib_Check2dBSplineCurve::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_Check2dBSplineCurve", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_Check2dBSplineCurve::NeedTangentFix(Standard_Boolean, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Boolean", 
              "name": "FirstFlag", 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "SecondFlag", 
              "ref": true
            }
          ], 
          "parent": "GeomLib_Check2dBSplineCurve", 
          "name": "NeedTangentFix", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_Check2dBSplineCurve::FixTangent(Standard_Boolean, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Boolean", 
              "name": "FirstFlag", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "LastFlag", 
              "const": true
            }
          ], 
          "parent": "GeomLib_Check2dBSplineCurve", 
          "name": "FixTangent", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_Check2dBSplineCurve::FixedTangent(Standard_Boolean, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Boolean", 
              "name": "FirstFlag", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "LastFlag", 
              "const": true
            }
          ], 
          "parent": "GeomLib_Check2dBSplineCurve", 
          "name": "FixedTangent", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GeomLib_Check2dBSplineCurve.hxx", 
        34
      ], 
      "key": "GeomLib_Check2dBSplineCurve"
    }, 
    {
      "declType": "class", 
      "name": "GeomLib_CheckBSplineCurve", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GeomLib_CheckBSplineCurve::GeomLib_CheckBSplineCurve(opencascade::handle<Geom_BSplineCurve>, Standard_Real, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom_BSplineCurve>", 
              "name": "Curve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "parent": "GeomLib_CheckBSplineCurve", 
          "name": "GeomLib_CheckBSplineCurve", 
          "return": {
            "type": "GeomLib_CheckBSplineCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckBSplineCurve::GeomLib_CheckBSplineCurve(GeomLib_CheckBSplineCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GeomLib_CheckBSplineCurve", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_CheckBSplineCurve", 
          "name": "GeomLib_CheckBSplineCurve", 
          "return": {
            "type": "GeomLib_CheckBSplineCurve", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GeomLib_CheckBSplineCurve::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_CheckBSplineCurve", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckBSplineCurve::NeedTangentFix(Standard_Boolean, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Boolean", 
              "name": "FirstFlag", 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "SecondFlag", 
              "ref": true
            }
          ], 
          "parent": "GeomLib_CheckBSplineCurve", 
          "name": "NeedTangentFix", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckBSplineCurve::FixTangent(Standard_Boolean, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Boolean", 
              "name": "FirstFlag", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "LastFlag", 
              "const": true
            }
          ], 
          "parent": "GeomLib_CheckBSplineCurve", 
          "name": "FixTangent", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_CheckBSplineCurve::FixedTangent(Standard_Boolean, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Boolean", 
              "name": "FirstFlag", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "LastFlag", 
              "const": true
            }
          ], 
          "parent": "GeomLib_CheckBSplineCurve", 
          "name": "FixedTangent", 
          "return": {
            "type": "opencascade::handle<Geom_BSplineCurve>"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GeomLib_CheckBSplineCurve.hxx", 
        34
      ], 
      "key": "GeomLib_CheckBSplineCurve"
    }, 
    {
      "declType": "class", 
      "name": "GeomLib_Tool", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GeomLib_Tool::GeomLib_Tool()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "GeomLib_Tool", 
          "name": "GeomLib_Tool", 
          "return": {
            "type": "GeomLib_Tool", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true
        }, 
        {
          "key": "GeomLib_Tool::GeomLib_Tool(GeomLib_Tool)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GeomLib_Tool", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_Tool", 
          "name": "GeomLib_Tool", 
          "return": {
            "type": "GeomLib_Tool", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GeomLib_Tool::Parameter(opencascade::handle<Geom_Curve>, gp_Pnt, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom_Curve>", 
              "name": "Curve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MaxDist", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "U", 
              "ref": true
            }
          ], 
          "parent": "GeomLib_Tool", 
          "name": "Parameter", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "GeomLib_Tool::Parameters(opencascade::handle<Geom_Surface>, gp_Pnt, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom_Surface>", 
              "name": "Surface", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MaxDist", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "U", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "V", 
              "ref": true
            }
          ], 
          "parent": "GeomLib_Tool", 
          "name": "Parameters", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "GeomLib_Tool::Parameter(opencascade::handle<Geom2d_Curve>, gp_Pnt2d, Standard_Real, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_Curve>", 
              "name": "Curve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "Point", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MaxDist", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "U", 
              "ref": true
            }
          ], 
          "parent": "GeomLib_Tool", 
          "name": "Parameter", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "static": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GeomLib_Tool.hxx", 
        41
      ], 
      "key": "GeomLib_Tool"
    }, 
    {
      "declType": "class", 
      "name": "GeomLib_Interpolate", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GeomLib_Interpolate::GeomLib_Interpolate(Standard_Integer, Standard_Integer, TColgp_Array1OfPnt, TColStd_Array1OfReal)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Degree", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "NumPoints", 
              "const": true
            }, 
            {
              "type": "TColgp_Array1OfPnt", 
              "name": "Points", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "TColStd_Array1OfReal", 
              "name": "Parameters", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_Interpolate", 
          "name": "GeomLib_Interpolate", 
          "return": {
            "type": "GeomLib_Interpolate", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_Interpolate::GeomLib_Interpolate(GeomLib_Interpolate)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GeomLib_Interpolate", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_Interpolate", 
          "name": "GeomLib_Interpolate", 
          "return": {
            "type": "GeomLib_Interpolate", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GeomLib_Interpolate::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_Interpolate", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_Interpolate::Error()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_Interpolate", 
          "name": "Error", 
          "return": {
            "type": "GeomLib_InterpolationErrors"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_Interpolate::Curve()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_Interpolate", 
          "name": "Curve", 
          "return": {
            "type": "opencascade::handle<Geom_BSplineCurve>"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GeomLib_Interpolate.hxx", 
        42
      ], 
      "key": "GeomLib_Interpolate"
    }, 
    {
      "declType": "class", 
      "name": "GeomLib_LogSample", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GeomLib_LogSample::GeomLib_LogSample(Standard_Real, Standard_Real, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "parent": "GeomLib_LogSample", 
          "name": "GeomLib_LogSample", 
          "return": {
            "type": "GeomLib_LogSample", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_LogSample::GeomLib_LogSample(GeomLib_LogSample)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GeomLib_LogSample", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_LogSample", 
          "name": "GeomLib_LogSample", 
          "return": {
            "type": "GeomLib_LogSample", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GeomLib_LogSample::GetParameter(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "parent": "GeomLib_LogSample", 
          "name": "GetParameter", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "math_FunctionSample"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/GeomLib_LogSample.hxx", 
        31
      ], 
      "key": "GeomLib_LogSample"
    }, 
    {
      "declType": "class", 
      "name": "GeomLib_IsPlanarSurface", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GeomLib_IsPlanarSurface::GeomLib_IsPlanarSurface(opencascade::handle<Geom_Surface>, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom_Surface>", 
              "name": "S", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol", 
              "default": "9.9999999999999995E-8", 
              "const": true
            }
          ], 
          "parent": "GeomLib_IsPlanarSurface", 
          "name": "GeomLib_IsPlanarSurface", 
          "return": {
            "type": "GeomLib_IsPlanarSurface", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_IsPlanarSurface::GeomLib_IsPlanarSurface(GeomLib_IsPlanarSurface)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GeomLib_IsPlanarSurface", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_IsPlanarSurface", 
          "name": "GeomLib_IsPlanarSurface", 
          "return": {
            "type": "GeomLib_IsPlanarSurface", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GeomLib_IsPlanarSurface::IsPlanar()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_IsPlanarSurface", 
          "name": "IsPlanar", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_IsPlanarSurface::Plan()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_IsPlanarSurface", 
          "name": "Plan", 
          "return": {
            "type": "gp_Pln", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GeomLib_IsPlanarSurface.hxx", 
        33
      ], 
      "key": "GeomLib_IsPlanarSurface"
    }, 
    {
      "declType": "class", 
      "name": "GeomLib_MakeCurvefromApprox", 
      "abstract": false, 
      "declarations": [
        {
          "key": "GeomLib_MakeCurvefromApprox::GeomLib_MakeCurvefromApprox(AdvApprox_ApproxAFunction)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "AdvApprox_ApproxAFunction", 
              "name": "Approx", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "GeomLib_MakeCurvefromApprox", 
          "return": {
            "type": "GeomLib_MakeCurvefromApprox", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_MakeCurvefromApprox::GeomLib_MakeCurvefromApprox(GeomLib_MakeCurvefromApprox)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "GeomLib_MakeCurvefromApprox", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "GeomLib_MakeCurvefromApprox", 
          "return": {
            "type": "GeomLib_MakeCurvefromApprox", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "GeomLib_MakeCurvefromApprox::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_MakeCurvefromApprox::Nb1DSpaces()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "Nb1DSpaces", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_MakeCurvefromApprox::Nb2DSpaces()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "Nb2DSpaces", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_MakeCurvefromApprox::Nb3DSpaces()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "Nb3DSpaces", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_MakeCurvefromApprox::Curve2d(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index2d", 
              "const": true
            }
          ], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "Curve2d", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_MakeCurvefromApprox::Curve2dFromTwo1d(Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index1d", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Index2d", 
              "const": true
            }
          ], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "Curve2dFromTwo1d", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_MakeCurvefromApprox::Curve2d(Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index1d", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Index2d", 
              "const": true
            }
          ], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "Curve2d", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_MakeCurvefromApprox::Curve(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index3d", 
              "const": true
            }
          ], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "Curve", 
          "return": {
            "type": "opencascade::handle<Geom_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "GeomLib_MakeCurvefromApprox::Curve(Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index1D", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Index3D", 
              "const": true
            }
          ], 
          "parent": "GeomLib_MakeCurvefromApprox", 
          "name": "Curve", 
          "return": {
            "type": "opencascade::handle<Geom_BSplineCurve>"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/GeomLib_MakeCurvefromApprox.hxx", 
        36
      ], 
      "key": "GeomLib_MakeCurvefromApprox"
    }, 
    {
      "type": "GeomLib_DenominatorMultiplier *", 
      "declType": "typedef", 
      "name": "GeomLib_DenominatorMultiplierPtr", 
      "key": "GeomLib_DenominatorMultiplierPtr"
    }, 
    {
      "type": "NCollection_Array1<gp_Mat>", 
      "declType": "typedef", 
      "name": "GeomLib_Array1OfMat", 
      "key": "GeomLib_Array1OfMat"
    }, 
    {
      "declType": "enum", 
      "values": [
        [
          "GeomLib_NoError", 
          0
        ], 
        [
          "GeomLib_NotEnoughtPoints", 
          1
        ], 
        [
          "GeomLib_DegreeSmallerThan3", 
          2
        ], 
        [
          "GeomLib_InversionProblem", 
          3
        ]
      ], 
      "name": "GeomLib_InterpolationErrors", 
      "key": "GeomLib_InterpolationErrors"
    }
  ], 
  "name": "GeomLib"
}