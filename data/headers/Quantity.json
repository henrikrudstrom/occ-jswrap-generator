{
  "headers": [
    "Quantity_Period.hxx", 
    "Quantity_Content.hxx", 
    "Quantity_Activity.hxx", 
    "Quantity_Index.hxx", 
    "Quantity_Resistance.hxx", 
    "Quantity_Work.hxx", 
    "Quantity_PlaneAngle.hxx", 
    "Quantity_Admittance.hxx", 
    "Quantity_SoundIntensity.hxx", 
    "Quantity_Impedance.hxx", 
    "Quantity_Normality.hxx", 
    "Quantity_Illuminance.hxx", 
    "Quantity_Array2OfColor.hxx", 
    "Quantity_MagneticFieldStrength.hxx", 
    "Quantity_MolarMass.hxx", 
    "Quantity_LuminousEfficacity.hxx", 
    "Quantity_DateDefinitionError.hxx", 
    "Quantity_Reluctance.hxx", 
    "Quantity_Molarity.hxx", 
    "Quantity_Entropy.hxx", 
    "Quantity_DoseEquivalent.hxx", 
    "Quantity_Mass.hxx", 
    "Quantity_PeriodDefinitionError.hxx", 
    "Quantity_Acceleration.hxx", 
    "Quantity_Array1OfCoefficient.hxx", 
    "Quantity_ElectricPotential.hxx", 
    "Quantity_ColorRGBA.hxx", 
    "Quantity_MolarVolume.hxx", 
    "Quantity_Torque.hxx", 
    "Quantity_Power.hxx", 
    "Quantity_KinematicViscosity.hxx", 
    "Quantity_Constant.hxx", 
    "Quantity_Viscosity.hxx", 
    "Quantity_AcousticIntensity.hxx", 
    "Quantity_Array1OfColor.hxx", 
    "Quantity_Frequency.hxx", 
    "Quantity_Consumption.hxx", 
    "Quantity_Resistivity.hxx", 
    "Quantity_Momentum.hxx", 
    "Quantity_Speed.hxx", 
    "Quantity_Quotient.hxx", 
    "Quantity_SurfaceTension.hxx", 
    "Quantity_LuminousExposition.hxx", 
    "Quantity_Force.hxx", 
    "Quantity_AmountOfSubstance.hxx", 
    "Quantity_LuminousFlux.hxx", 
    "Quantity_KineticMoment.hxx", 
    "Quantity_Rate.hxx", 
    "Quantity_Length.hxx", 
    "Quantity_Scalaire.hxx", 
    "Quantity_Weight.hxx", 
    "Quantity_Enthalpy.hxx", 
    "Quantity_ElectricCapacitance.hxx", 
    "Quantity_Density.hxx", 
    "Quantity_Color.hxx", 
    "Quantity_SpecificHeatCapacity.hxx", 
    "Quantity_Date.hxx", 
    "Quantity_VolumeFlow.hxx", 
    "Quantity_Area.hxx", 
    "Quantity_Conductivity.hxx", 
    "Quantity_AbsorbedDose.hxx", 
    "Quantity_Temperature.hxx", 
    "Quantity_MagneticFluxDensity.hxx", 
    "Quantity_Convert.hxx", 
    "Quantity_TypeOfColor.hxx", 
    "Quantity_Inductance.hxx", 
    "Quantity_CoefficientOfExpansion.hxx", 
    "Quantity_MassFlow.hxx", 
    "Quantity_Ratio.hxx", 
    "Quantity_ThermalConductivity.hxx", 
    "Quantity_SolidAngle.hxx", 
    "Quantity_LuminousIntensity.hxx", 
    "Quantity_Factor.hxx", 
    "Quantity_MomentOfInertia.hxx", 
    "Quantity_HArray1OfColor.hxx", 
    "Quantity_ElectricFieldStrength.hxx", 
    "Quantity_Parameter.hxx", 
    "Quantity_Luminance.hxx", 
    "Quantity_ElectricCharge.hxx", 
    "Quantity_ElectricCurrent.hxx", 
    "Quantity_Volume.hxx", 
    "Quantity_MolarConcentration.hxx", 
    "Quantity_Energy.hxx", 
    "Quantity_AngularVelocity.hxx", 
    "Quantity_Velocity.hxx", 
    "Quantity_NameOfColor.hxx", 
    "Quantity_ColorDefinitionError.hxx", 
    "Quantity_Capacitance.hxx", 
    "Quantity_Coefficient.hxx", 
    "Quantity_Concentration.hxx", 
    "Quantity_PhysicalQuantity.hxx", 
    "Quantity_MomentOfAForce.hxx", 
    "Quantity_Pressure.hxx", 
    "Quantity_MagneticFlux.hxx"
  ], 
  "declarations": [
    {
      "declType": "class", 
      "name": "Quantity_PeriodDefinitionError", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Quantity_PeriodDefinitionError::Quantity_PeriodDefinitionError()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Quantity_PeriodDefinitionError", 
          "name": "Quantity_PeriodDefinitionError", 
          "return": {
            "type": "Quantity_PeriodDefinitionError", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_PeriodDefinitionError::Quantity_PeriodDefinitionError(Standard_CString)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "const": true
            }
          ], 
          "parent": "Quantity_PeriodDefinitionError", 
          "name": "Quantity_PeriodDefinitionError", 
          "return": {
            "type": "Quantity_PeriodDefinitionError", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_PeriodDefinitionError::Quantity_PeriodDefinitionError(Quantity_PeriodDefinitionError)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_PeriodDefinitionError", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_PeriodDefinitionError", 
          "name": "Quantity_PeriodDefinitionError", 
          "return": {
            "type": "Quantity_PeriodDefinitionError", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Quantity_PeriodDefinitionError::Raise(Standard_CString)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "default": "\"\"", 
              "const": true
            }
          ], 
          "parent": "Quantity_PeriodDefinitionError", 
          "name": "Raise", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_PeriodDefinitionError::Raise(Standard_SStream)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_SStream", 
              "name": "theMessage", 
              "ref": true
            }
          ], 
          "parent": "Quantity_PeriodDefinitionError", 
          "name": "Raise", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_PeriodDefinitionError::NewInstance(Standard_CString)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "default": "\"\"", 
              "const": true
            }
          ], 
          "parent": "Quantity_PeriodDefinitionError", 
          "name": "NewInstance", 
          "return": {
            "type": "opencascade::handle<Quantity_PeriodDefinitionError>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_PeriodDefinitionError::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_PeriodDefinitionError", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_PeriodDefinitionError::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_PeriodDefinitionError", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_PeriodDefinitionError::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_PeriodDefinitionError", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "Standard_DomainError"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/Quantity_PeriodDefinitionError.hxx", 
        35
      ], 
      "key": "Quantity_PeriodDefinitionError"
    }, 
    {
      "declType": "class", 
      "name": "Quantity_Period", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Quantity_Period::Quantity_Period(Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "dd", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "hh", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mn", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mis", 
              "default": "0", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "default": "0", 
              "const": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "Quantity_Period", 
          "return": {
            "type": "Quantity_Period", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::Quantity_Period(Standard_Integer, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "default": "0", 
              "const": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "Quantity_Period", 
          "return": {
            "type": "Quantity_Period", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::Quantity_Period(Quantity_Period)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_Period", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "Quantity_Period", 
          "return": {
            "type": "Quantity_Period", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Quantity_Period::Values(Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "dd", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "hh", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mn", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mis", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "ref": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "Values", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::Values(Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "ref": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "Values", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::SetValues(Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "dd", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "hh", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mn", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mis", 
              "default": "0", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "default": "0", 
              "const": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "SetValues", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::SetValues(Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "default": "0", 
              "const": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "SetValues", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::Subtract(Quantity_Period)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Period", 
              "name": "anOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "Subtract", 
          "return": {
            "type": "Quantity_Period"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::Add(Quantity_Period)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Period", 
              "name": "anOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "Add", 
          "return": {
            "type": "Quantity_Period"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::IsEqual(Quantity_Period)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Period", 
              "name": "anOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "IsEqual", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::IsShorter(Quantity_Period)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Period", 
              "name": "anOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "IsShorter", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::IsLonger(Quantity_Period)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Period", 
              "name": "anOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "IsLonger", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::IsValid(Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "dd", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "hh", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mn", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mis", 
              "default": "0", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "default": "0", 
              "const": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "IsValid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Period::IsValid(Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "default": "0", 
              "const": true
            }
          ], 
          "parent": "Quantity_Period", 
          "name": "IsValid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "static": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Quantity_Period.hxx", 
        32
      ], 
      "key": "Quantity_Period"
    }, 
    {
      "declType": "class", 
      "name": "Quantity_ColorDefinitionError", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Quantity_ColorDefinitionError::Quantity_ColorDefinitionError()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Quantity_ColorDefinitionError", 
          "name": "Quantity_ColorDefinitionError", 
          "return": {
            "type": "Quantity_ColorDefinitionError", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorDefinitionError::Quantity_ColorDefinitionError(Standard_CString)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "const": true
            }
          ], 
          "parent": "Quantity_ColorDefinitionError", 
          "name": "Quantity_ColorDefinitionError", 
          "return": {
            "type": "Quantity_ColorDefinitionError", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorDefinitionError::Quantity_ColorDefinitionError(Quantity_ColorDefinitionError)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_ColorDefinitionError", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_ColorDefinitionError", 
          "name": "Quantity_ColorDefinitionError", 
          "return": {
            "type": "Quantity_ColorDefinitionError", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Quantity_ColorDefinitionError::Raise(Standard_CString)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "default": "\"\"", 
              "const": true
            }
          ], 
          "parent": "Quantity_ColorDefinitionError", 
          "name": "Raise", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorDefinitionError::Raise(Standard_SStream)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_SStream", 
              "name": "theMessage", 
              "ref": true
            }
          ], 
          "parent": "Quantity_ColorDefinitionError", 
          "name": "Raise", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorDefinitionError::NewInstance(Standard_CString)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "default": "\"\"", 
              "const": true
            }
          ], 
          "parent": "Quantity_ColorDefinitionError", 
          "name": "NewInstance", 
          "return": {
            "type": "opencascade::handle<Quantity_ColorDefinitionError>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorDefinitionError::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_ColorDefinitionError", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorDefinitionError::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_ColorDefinitionError", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorDefinitionError::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_ColorDefinitionError", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "Standard_DomainError"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/Quantity_ColorDefinitionError.hxx", 
        35
      ], 
      "key": "Quantity_ColorDefinitionError"
    }, 
    {
      "declType": "class", 
      "name": "Quantity_Color", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Quantity_Color::Quantity_Color()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Quantity_Color", 
          "name": "Quantity_Color", 
          "return": {
            "type": "Quantity_Color", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Quantity_Color(Quantity_NameOfColor)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_NameOfColor", 
              "name": "AName", 
              "const": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "Quantity_Color", 
          "return": {
            "type": "Quantity_Color", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Quantity_Color(Quantity_Parameter, Quantity_Parameter, Quantity_Parameter, Quantity_TypeOfColor)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_Parameter", 
              "name": "theR1", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "theR2", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "theR3", 
              "const": true
            }, 
            {
              "type": "Quantity_TypeOfColor", 
              "name": "theType", 
              "const": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "Quantity_Color", 
          "return": {
            "type": "Quantity_Color", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Quantity_Color(NCollection_Vec3<float>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec3<float>", 
              "name": "theRgb", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "Quantity_Color", 
          "return": {
            "type": "Quantity_Color", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Quantity_Color(Quantity_Color)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_Color", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "Quantity_Color", 
          "return": {
            "type": "Quantity_Color", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Quantity_Color::ChangeContrast(Quantity_Rate)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Rate", 
              "name": "ADelta", 
              "const": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "ChangeContrast", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::ChangeIntensity(Quantity_Rate)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Rate", 
              "name": "ADelta", 
              "const": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "ChangeIntensity", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::SetValues(Quantity_NameOfColor)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_NameOfColor", 
              "name": "AName", 
              "const": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "SetValues", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::SetValues(Quantity_Parameter, Quantity_Parameter, Quantity_Parameter, Quantity_TypeOfColor)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Parameter", 
              "name": "theR1", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "theR2", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "theR3", 
              "const": true
            }, 
            {
              "type": "Quantity_TypeOfColor", 
              "name": "theType", 
              "const": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "SetValues", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Delta(Quantity_Color, Quantity_Parameter, Quantity_Parameter)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Color", 
              "name": "AColor", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "DC", 
              "ref": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "DI", 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "Delta", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Distance(Quantity_Color)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Color", 
              "name": "AColor", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "Distance", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::SquareDistance(Quantity_Color)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Color", 
              "name": "AColor", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "SquareDistance", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Blue()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Color", 
          "name": "Blue", 
          "return": {
            "type": "Quantity_Parameter"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Green()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Color", 
          "name": "Green", 
          "return": {
            "type": "Quantity_Parameter"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Hue()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Color", 
          "name": "Hue", 
          "return": {
            "type": "Quantity_Parameter"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::IsDifferent(Quantity_Color)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Color", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "IsDifferent", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::IsEqual(Quantity_Color)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Color", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "IsEqual", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Light()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Color", 
          "name": "Light", 
          "return": {
            "type": "Quantity_Parameter"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Color", 
          "name": "Name", 
          "return": {
            "type": "Quantity_NameOfColor"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Red()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Color", 
          "name": "Red", 
          "return": {
            "type": "Quantity_Parameter"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Saturation()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Color", 
          "name": "Saturation", 
          "return": {
            "type": "Quantity_Parameter"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Values(Quantity_Parameter, Quantity_Parameter, Quantity_Parameter, Quantity_TypeOfColor)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Parameter", 
              "name": "theR1", 
              "ref": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "theR2", 
              "ref": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "theR3", 
              "ref": true
            }, 
            {
              "type": "Quantity_TypeOfColor", 
              "name": "theType", 
              "const": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "Values", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::SetEpsilon(Quantity_Parameter)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Parameter", 
              "name": "AnEpsilon", 
              "const": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "SetEpsilon", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Epsilon()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Color", 
          "name": "Epsilon", 
          "return": {
            "type": "Quantity_Parameter"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Name(Quantity_Parameter, Quantity_Parameter, Quantity_Parameter)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Parameter", 
              "name": "R", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "G", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "B", 
              "const": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "Name", 
          "return": {
            "type": "Quantity_NameOfColor"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::StringName(Quantity_NameOfColor)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_NameOfColor", 
              "name": "AColor", 
              "const": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "StringName", 
          "return": {
            "type": "Standard_CString"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::ColorFromName(Standard_CString, Quantity_NameOfColor)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theName", 
              "const": true
            }, 
            {
              "type": "Quantity_NameOfColor", 
              "name": "theColor", 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "ColorFromName", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::HlsRgb(Quantity_Parameter, Quantity_Parameter, Quantity_Parameter, Quantity_Parameter, Quantity_Parameter, Quantity_Parameter)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Parameter", 
              "name": "H", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "L", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "S", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "R", 
              "ref": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "G", 
              "ref": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "B", 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "HlsRgb", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::RgbHls(Quantity_Parameter, Quantity_Parameter, Quantity_Parameter, Quantity_Parameter, Quantity_Parameter, Quantity_Parameter)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Parameter", 
              "name": "R", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "G", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "B", 
              "const": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "H", 
              "ref": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "L", 
              "ref": true
            }, 
            {
              "type": "Quantity_Parameter", 
              "name": "S", 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "RgbHls", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Color2argb(Quantity_Color, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Color", 
              "name": "theColor", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theARGB", 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "Color2argb", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Argb2color(Standard_Integer, Quantity_Color)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theARGB", 
              "const": true
            }, 
            {
              "type": "Quantity_Color", 
              "name": "theColor", 
              "ref": true
            }
          ], 
          "parent": "Quantity_Color", 
          "name": "Argb2color", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Color::Test()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Color", 
          "name": "Test", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Quantity_Color.hxx", 
        49
      ], 
      "key": "Quantity_Color"
    }, 
    {
      "declType": "class", 
      "name": "Quantity_DateDefinitionError", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Quantity_DateDefinitionError::Quantity_DateDefinitionError()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Quantity_DateDefinitionError", 
          "name": "Quantity_DateDefinitionError", 
          "return": {
            "type": "Quantity_DateDefinitionError", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_DateDefinitionError::Quantity_DateDefinitionError(Standard_CString)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "const": true
            }
          ], 
          "parent": "Quantity_DateDefinitionError", 
          "name": "Quantity_DateDefinitionError", 
          "return": {
            "type": "Quantity_DateDefinitionError", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_DateDefinitionError::Quantity_DateDefinitionError(Quantity_DateDefinitionError)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_DateDefinitionError", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_DateDefinitionError", 
          "name": "Quantity_DateDefinitionError", 
          "return": {
            "type": "Quantity_DateDefinitionError", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Quantity_DateDefinitionError::Raise(Standard_CString)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "default": "\"\"", 
              "const": true
            }
          ], 
          "parent": "Quantity_DateDefinitionError", 
          "name": "Raise", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_DateDefinitionError::Raise(Standard_SStream)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_SStream", 
              "name": "theMessage", 
              "ref": true
            }
          ], 
          "parent": "Quantity_DateDefinitionError", 
          "name": "Raise", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_DateDefinitionError::NewInstance(Standard_CString)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "default": "\"\"", 
              "const": true
            }
          ], 
          "parent": "Quantity_DateDefinitionError", 
          "name": "NewInstance", 
          "return": {
            "type": "opencascade::handle<Quantity_DateDefinitionError>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_DateDefinitionError::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_DateDefinitionError", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_DateDefinitionError::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_DateDefinitionError", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_DateDefinitionError::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_DateDefinitionError", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "Standard_DomainError"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/Quantity_DateDefinitionError.hxx", 
        35
      ], 
      "key": "Quantity_DateDefinitionError"
    }, 
    {
      "declType": "class", 
      "name": "Quantity_ColorRGBA", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Quantity_ColorRGBA::Quantity_ColorRGBA()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Quantity_ColorRGBA", 
          "name": "Quantity_ColorRGBA", 
          "return": {
            "type": "Quantity_ColorRGBA", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorRGBA::Quantity_ColorRGBA(Quantity_Color)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_Color", 
              "name": "theRgb", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_ColorRGBA", 
          "name": "Quantity_ColorRGBA", 
          "return": {
            "type": "Quantity_ColorRGBA", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorRGBA::Quantity_ColorRGBA(NCollection_Vec4<float>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec4<float>", 
              "name": "theRgba", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_ColorRGBA", 
          "name": "Quantity_ColorRGBA", 
          "return": {
            "type": "Quantity_ColorRGBA", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorRGBA::Quantity_ColorRGBA(Quantity_ColorRGBA)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_ColorRGBA", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_ColorRGBA", 
          "name": "Quantity_ColorRGBA", 
          "return": {
            "type": "Quantity_ColorRGBA", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Quantity_ColorRGBA::GetRGB()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_ColorRGBA", 
          "name": "GetRGB", 
          "return": {
            "type": "Quantity_Color", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorRGBA::ChangeRGB()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_ColorRGBA", 
          "name": "ChangeRGB", 
          "return": {
            "type": "Quantity_Color", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorRGBA::SetRGB(Quantity_Color)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Color", 
              "name": "theRgb", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_ColorRGBA", 
          "name": "SetRGB", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorRGBA::Alpha()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_ColorRGBA", 
          "name": "Alpha", 
          "return": {
            "type": "Standard_ShortReal"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorRGBA::SetAlpha(Standard_ShortReal)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_ShortReal", 
              "name": "theAlpha", 
              "const": true
            }
          ], 
          "parent": "Quantity_ColorRGBA", 
          "name": "SetAlpha", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorRGBA::IsDifferent(Quantity_ColorRGBA)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_ColorRGBA", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_ColorRGBA", 
          "name": "IsDifferent", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_ColorRGBA::IsEqual(Quantity_ColorRGBA)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_ColorRGBA", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_ColorRGBA", 
          "name": "IsEqual", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Quantity_ColorRGBA.hxx", 
        21
      ], 
      "key": "Quantity_ColorRGBA"
    }, 
    {
      "declType": "class", 
      "name": "Quantity_Date", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Quantity_Date::Quantity_Date()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Quantity_Date", 
          "name": "Quantity_Date", 
          "return": {
            "type": "Quantity_Date", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Quantity_Date(Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "mm", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "dd", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "yyyy", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "hh", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mn", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mis", 
              "default": "0", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "default": "0", 
              "const": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "Quantity_Date", 
          "return": {
            "type": "Quantity_Date", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Quantity_Date(Quantity_Date)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_Date", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "Quantity_Date", 
          "return": {
            "type": "Quantity_Date", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Quantity_Date::Values(Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "mm", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "dd", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "yy", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "hh", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mn", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mis", 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "ref": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "Values", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::SetValues(Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "mm", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "dd", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "yy", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "hh", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mn", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mis", 
              "default": "0", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "default": "0", 
              "const": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "SetValues", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Difference(Quantity_Date)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Date", 
              "name": "anOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "Difference", 
          "return": {
            "type": "Quantity_Period"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Subtract(Quantity_Period)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Period", 
              "name": "aPeriod", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "Subtract", 
          "return": {
            "type": "Quantity_Date"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Add(Quantity_Period)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Period", 
              "name": "aPeriod", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "Add", 
          "return": {
            "type": "Quantity_Date"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Year()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Date", 
          "name": "Year", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Month()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Date", 
          "name": "Month", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Day()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Date", 
          "name": "Day", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Hour()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Date", 
          "name": "Hour", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Minute()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Date", 
          "name": "Minute", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::Second()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Date", 
          "name": "Second", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::MilliSecond()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Date", 
          "name": "MilliSecond", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::MicroSecond()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_Date", 
          "name": "MicroSecond", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::IsEqual(Quantity_Date)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Date", 
              "name": "anOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "IsEqual", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::IsEarlier(Quantity_Date)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Date", 
              "name": "anOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "IsEarlier", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::IsLater(Quantity_Date)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_Date", 
              "name": "anOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "IsLater", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::IsValid(Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "mm", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "dd", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "yy", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "hh", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mn", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "ss", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mis", 
              "default": "0", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "mics", 
              "default": "0", 
              "const": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "IsValid", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Date::IsLeap(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "yy", 
              "const": true
            }
          ], 
          "parent": "Quantity_Date", 
          "name": "IsLeap", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "static": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Quantity_Date.hxx", 
        40
      ], 
      "key": "Quantity_Date"
    }, 
    {
      "declType": "class", 
      "name": "Quantity_Convert", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Quantity_Convert::Quantity_Convert()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "Quantity_Convert", 
          "name": "Quantity_Convert", 
          "return": {
            "type": "Quantity_Convert", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_Convert::Quantity_Convert(Quantity_Convert)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_Convert", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_Convert", 
          "name": "Quantity_Convert", 
          "return": {
            "type": "Quantity_Convert", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Quantity_Convert::SetQuantity(Quantity_PhysicalQuantity, Quantity_Coefficient)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_PhysicalQuantity", 
              "name": "aQuantity", 
              "const": true
            }, 
            {
              "type": "Quantity_Coefficient", 
              "name": "aCoef", 
              "const": true
            }
          ], 
          "parent": "Quantity_Convert", 
          "name": "SetQuantity", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Convert::ConvertUserToSI(Quantity_PhysicalQuantity, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_PhysicalQuantity", 
              "name": "aQuantity", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aVal", 
              "const": true
            }
          ], 
          "parent": "Quantity_Convert", 
          "name": "ConvertUserToSI", 
          "return": {
            "type": "Standard_Real"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Convert::ConvertSIToUser(Quantity_PhysicalQuantity, Standard_Real)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Quantity_PhysicalQuantity", 
              "name": "aQuantity", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "aVal", 
              "const": true
            }
          ], 
          "parent": "Quantity_Convert", 
          "name": "ConvertSIToUser", 
          "return": {
            "type": "Standard_Real"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_Convert::IsPhysicalQuantity(TCollection_AsciiString, TCollection_AsciiString)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "TCollection_AsciiString", 
              "name": "aTypeName", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "TCollection_AsciiString", 
              "name": "anEnum", 
              "ref": true
            }
          ], 
          "parent": "Quantity_Convert", 
          "name": "IsPhysicalQuantity", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "static": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Quantity_Convert.hxx", 
        36
      ], 
      "key": "Quantity_Convert"
    }, 
    {
      "declType": "class", 
      "name": "Quantity_HArray1OfColor", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Quantity_HArray1OfColor::Quantity_HArray1OfColor(Standard_Integer, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theLower", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theUpper", 
              "const": true
            }
          ], 
          "parent": "Quantity_HArray1OfColor", 
          "name": "Quantity_HArray1OfColor", 
          "return": {
            "type": "Quantity_HArray1OfColor", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_HArray1OfColor::Quantity_HArray1OfColor(Standard_Integer, Standard_Integer, NCollection_Array1<Quantity_Color>::value_type)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theLower", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theUpper", 
              "const": true
            }, 
            {
              "type": "NCollection_Array1<Quantity_Color>::value_type", 
              "name": "theValue", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_HArray1OfColor", 
          "name": "Quantity_HArray1OfColor", 
          "return": {
            "type": "Quantity_HArray1OfColor", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_HArray1OfColor::Quantity_HArray1OfColor(Quantity_Array1OfColor)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_Array1OfColor", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_HArray1OfColor", 
          "name": "Quantity_HArray1OfColor", 
          "return": {
            "type": "Quantity_HArray1OfColor", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_HArray1OfColor::Quantity_HArray1OfColor(Quantity_HArray1OfColor)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Quantity_HArray1OfColor", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Quantity_HArray1OfColor", 
          "name": "Quantity_HArray1OfColor", 
          "return": {
            "type": "Quantity_HArray1OfColor", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Quantity_HArray1OfColor::Array1()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_HArray1OfColor", 
          "name": "Array1", 
          "return": {
            "type": "Quantity_Array1OfColor", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_HArray1OfColor::ChangeArray1()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_HArray1OfColor", 
          "name": "ChangeArray1", 
          "return": {
            "type": "Quantity_Array1OfColor", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "Quantity_HArray1OfColor::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_HArray1OfColor", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_HArray1OfColor::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_HArray1OfColor", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "Quantity_HArray1OfColor::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Quantity_HArray1OfColor", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_Array1<Quantity_Color>"
        }, 
        {
          "access": "public", 
          "name": "MMgt_TShared"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/Quantity_HArray1OfColor.hxx", 
        24
      ], 
      "key": "Quantity_HArray1OfColor"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Content", 
      "key": "Quantity_Content"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Activity", 
      "key": "Quantity_Activity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Index", 
      "key": "Quantity_Index"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Resistance", 
      "key": "Quantity_Resistance"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Work", 
      "key": "Quantity_Work"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_PlaneAngle", 
      "key": "Quantity_PlaneAngle"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Admittance", 
      "key": "Quantity_Admittance"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_SoundIntensity", 
      "key": "Quantity_SoundIntensity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Impedance", 
      "key": "Quantity_Impedance"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Normality", 
      "key": "Quantity_Normality"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Illuminance", 
      "key": "Quantity_Illuminance"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Parameter", 
      "key": "Quantity_Parameter"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Rate", 
      "key": "Quantity_Rate"
    }, 
    {
      "type": "NCollection_Array2<Quantity_Color>", 
      "declType": "typedef", 
      "name": "Quantity_Array2OfColor", 
      "key": "Quantity_Array2OfColor"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_MagneticFieldStrength", 
      "key": "Quantity_MagneticFieldStrength"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_MolarMass", 
      "key": "Quantity_MolarMass"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_LuminousEfficacity", 
      "key": "Quantity_LuminousEfficacity"
    }, 
    {
      "type": "opencascade::handle<Quantity_DateDefinitionError>", 
      "declType": "typedef", 
      "name": "Handle_Quantity_DateDefinitionError", 
      "key": "Handle_Quantity_DateDefinitionError"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Reluctance", 
      "key": "Quantity_Reluctance"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Molarity", 
      "key": "Quantity_Molarity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Entropy", 
      "key": "Quantity_Entropy"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_DoseEquivalent", 
      "key": "Quantity_DoseEquivalent"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Mass", 
      "key": "Quantity_Mass"
    }, 
    {
      "type": "opencascade::handle<Quantity_PeriodDefinitionError>", 
      "declType": "typedef", 
      "name": "Handle_Quantity_PeriodDefinitionError", 
      "key": "Handle_Quantity_PeriodDefinitionError"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Acceleration", 
      "key": "Quantity_Acceleration"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Coefficient", 
      "key": "Quantity_Coefficient"
    }, 
    {
      "type": "NCollection_Array1<double>", 
      "declType": "typedef", 
      "name": "Quantity_Array1OfCoefficient", 
      "key": "Quantity_Array1OfCoefficient"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_ElectricPotential", 
      "key": "Quantity_ElectricPotential"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_MolarVolume", 
      "key": "Quantity_MolarVolume"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Torque", 
      "key": "Quantity_Torque"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Power", 
      "key": "Quantity_Power"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_KinematicViscosity", 
      "key": "Quantity_KinematicViscosity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Constant", 
      "key": "Quantity_Constant"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Viscosity", 
      "key": "Quantity_Viscosity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_AcousticIntensity", 
      "key": "Quantity_AcousticIntensity"
    }, 
    {
      "type": "NCollection_Array1<Quantity_Color>", 
      "declType": "typedef", 
      "name": "Quantity_Array1OfColor", 
      "key": "Quantity_Array1OfColor"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Frequency", 
      "key": "Quantity_Frequency"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Consumption", 
      "key": "Quantity_Consumption"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Resistivity", 
      "key": "Quantity_Resistivity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Momentum", 
      "key": "Quantity_Momentum"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Speed", 
      "key": "Quantity_Speed"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Quotient", 
      "key": "Quantity_Quotient"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_SurfaceTension", 
      "key": "Quantity_SurfaceTension"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_LuminousExposition", 
      "key": "Quantity_LuminousExposition"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Force", 
      "key": "Quantity_Force"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_AmountOfSubstance", 
      "key": "Quantity_AmountOfSubstance"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_LuminousFlux", 
      "key": "Quantity_LuminousFlux"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_KineticMoment", 
      "key": "Quantity_KineticMoment"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Length", 
      "key": "Quantity_Length"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Scalaire", 
      "key": "Quantity_Scalaire"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Weight", 
      "key": "Quantity_Weight"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Enthalpy", 
      "key": "Quantity_Enthalpy"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_ElectricCapacitance", 
      "key": "Quantity_ElectricCapacitance"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Density", 
      "key": "Quantity_Density"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_SpecificHeatCapacity", 
      "key": "Quantity_SpecificHeatCapacity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_VolumeFlow", 
      "key": "Quantity_VolumeFlow"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Area", 
      "key": "Quantity_Area"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Conductivity", 
      "key": "Quantity_Conductivity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_AbsorbedDose", 
      "key": "Quantity_AbsorbedDose"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Temperature", 
      "key": "Quantity_Temperature"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_MagneticFluxDensity", 
      "key": "Quantity_MagneticFluxDensity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Inductance", 
      "key": "Quantity_Inductance"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_CoefficientOfExpansion", 
      "key": "Quantity_CoefficientOfExpansion"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_MassFlow", 
      "key": "Quantity_MassFlow"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Ratio", 
      "key": "Quantity_Ratio"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_ThermalConductivity", 
      "key": "Quantity_ThermalConductivity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_SolidAngle", 
      "key": "Quantity_SolidAngle"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_LuminousIntensity", 
      "key": "Quantity_LuminousIntensity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Factor", 
      "key": "Quantity_Factor"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_MomentOfInertia", 
      "key": "Quantity_MomentOfInertia"
    }, 
    {
      "type": "opencascade::handle<Quantity_HArray1OfColor>", 
      "declType": "typedef", 
      "name": "Handle_Quantity_HArray1OfColor", 
      "key": "Handle_Quantity_HArray1OfColor"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_ElectricFieldStrength", 
      "key": "Quantity_ElectricFieldStrength"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Luminance", 
      "key": "Quantity_Luminance"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_ElectricCharge", 
      "key": "Quantity_ElectricCharge"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_ElectricCurrent", 
      "key": "Quantity_ElectricCurrent"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Volume", 
      "key": "Quantity_Volume"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_MolarConcentration", 
      "key": "Quantity_MolarConcentration"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Energy", 
      "key": "Quantity_Energy"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_AngularVelocity", 
      "key": "Quantity_AngularVelocity"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Velocity", 
      "key": "Quantity_Velocity"
    }, 
    {
      "type": "opencascade::handle<Quantity_ColorDefinitionError>", 
      "declType": "typedef", 
      "name": "Handle_Quantity_ColorDefinitionError", 
      "key": "Handle_Quantity_ColorDefinitionError"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Capacitance", 
      "key": "Quantity_Capacitance"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Concentration", 
      "key": "Quantity_Concentration"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_MomentOfAForce", 
      "key": "Quantity_MomentOfAForce"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_Pressure", 
      "key": "Quantity_Pressure"
    }, 
    {
      "type": "Standard_Real", 
      "declType": "typedef", 
      "name": "Quantity_MagneticFlux", 
      "key": "Quantity_MagneticFlux"
    }, 
    {
      "declType": "enum", 
      "values": [
        [
          "Quantity_NOC_BLACK", 
          0
        ], 
        [
          "Quantity_NOC_MATRABLUE", 
          1
        ], 
        [
          "Quantity_NOC_MATRAGRAY", 
          2
        ], 
        [
          "Quantity_NOC_ALICEBLUE", 
          3
        ], 
        [
          "Quantity_NOC_ANTIQUEWHITE", 
          4
        ], 
        [
          "Quantity_NOC_ANTIQUEWHITE1", 
          5
        ], 
        [
          "Quantity_NOC_ANTIQUEWHITE2", 
          6
        ], 
        [
          "Quantity_NOC_ANTIQUEWHITE3", 
          7
        ], 
        [
          "Quantity_NOC_ANTIQUEWHITE4", 
          8
        ], 
        [
          "Quantity_NOC_AQUAMARINE1", 
          9
        ], 
        [
          "Quantity_NOC_AQUAMARINE2", 
          10
        ], 
        [
          "Quantity_NOC_AQUAMARINE4", 
          11
        ], 
        [
          "Quantity_NOC_AZURE", 
          12
        ], 
        [
          "Quantity_NOC_AZURE2", 
          13
        ], 
        [
          "Quantity_NOC_AZURE3", 
          14
        ], 
        [
          "Quantity_NOC_AZURE4", 
          15
        ], 
        [
          "Quantity_NOC_BEIGE", 
          16
        ], 
        [
          "Quantity_NOC_BISQUE", 
          17
        ], 
        [
          "Quantity_NOC_BISQUE2", 
          18
        ], 
        [
          "Quantity_NOC_BISQUE3", 
          19
        ], 
        [
          "Quantity_NOC_BISQUE4", 
          20
        ], 
        [
          "Quantity_NOC_BLANCHEDALMOND", 
          21
        ], 
        [
          "Quantity_NOC_BLUE1", 
          22
        ], 
        [
          "Quantity_NOC_BLUE2", 
          23
        ], 
        [
          "Quantity_NOC_BLUE3", 
          24
        ], 
        [
          "Quantity_NOC_BLUE4", 
          25
        ], 
        [
          "Quantity_NOC_BLUEVIOLET", 
          26
        ], 
        [
          "Quantity_NOC_BROWN", 
          27
        ], 
        [
          "Quantity_NOC_BROWN1", 
          28
        ], 
        [
          "Quantity_NOC_BROWN2", 
          29
        ], 
        [
          "Quantity_NOC_BROWN3", 
          30
        ], 
        [
          "Quantity_NOC_BROWN4", 
          31
        ], 
        [
          "Quantity_NOC_BURLYWOOD", 
          32
        ], 
        [
          "Quantity_NOC_BURLYWOOD1", 
          33
        ], 
        [
          "Quantity_NOC_BURLYWOOD2", 
          34
        ], 
        [
          "Quantity_NOC_BURLYWOOD3", 
          35
        ], 
        [
          "Quantity_NOC_BURLYWOOD4", 
          36
        ], 
        [
          "Quantity_NOC_CADETBLUE", 
          37
        ], 
        [
          "Quantity_NOC_CADETBLUE1", 
          38
        ], 
        [
          "Quantity_NOC_CADETBLUE2", 
          39
        ], 
        [
          "Quantity_NOC_CADETBLUE3", 
          40
        ], 
        [
          "Quantity_NOC_CADETBLUE4", 
          41
        ], 
        [
          "Quantity_NOC_CHARTREUSE", 
          42
        ], 
        [
          "Quantity_NOC_CHARTREUSE1", 
          43
        ], 
        [
          "Quantity_NOC_CHARTREUSE2", 
          44
        ], 
        [
          "Quantity_NOC_CHARTREUSE3", 
          45
        ], 
        [
          "Quantity_NOC_CHARTREUSE4", 
          46
        ], 
        [
          "Quantity_NOC_CHOCOLATE", 
          47
        ], 
        [
          "Quantity_NOC_CHOCOLATE1", 
          48
        ], 
        [
          "Quantity_NOC_CHOCOLATE2", 
          49
        ], 
        [
          "Quantity_NOC_CHOCOLATE3", 
          50
        ], 
        [
          "Quantity_NOC_CHOCOLATE4", 
          51
        ], 
        [
          "Quantity_NOC_CORAL", 
          52
        ], 
        [
          "Quantity_NOC_CORAL1", 
          53
        ], 
        [
          "Quantity_NOC_CORAL2", 
          54
        ], 
        [
          "Quantity_NOC_CORAL3", 
          55
        ], 
        [
          "Quantity_NOC_CORAL4", 
          56
        ], 
        [
          "Quantity_NOC_CORNFLOWERBLUE", 
          57
        ], 
        [
          "Quantity_NOC_CORNSILK1", 
          58
        ], 
        [
          "Quantity_NOC_CORNSILK2", 
          59
        ], 
        [
          "Quantity_NOC_CORNSILK3", 
          60
        ], 
        [
          "Quantity_NOC_CORNSILK4", 
          61
        ], 
        [
          "Quantity_NOC_CYAN1", 
          62
        ], 
        [
          "Quantity_NOC_CYAN2", 
          63
        ], 
        [
          "Quantity_NOC_CYAN3", 
          64
        ], 
        [
          "Quantity_NOC_CYAN4", 
          65
        ], 
        [
          "Quantity_NOC_DARKGOLDENROD", 
          66
        ], 
        [
          "Quantity_NOC_DARKGOLDENROD1", 
          67
        ], 
        [
          "Quantity_NOC_DARKGOLDENROD2", 
          68
        ], 
        [
          "Quantity_NOC_DARKGOLDENROD3", 
          69
        ], 
        [
          "Quantity_NOC_DARKGOLDENROD4", 
          70
        ], 
        [
          "Quantity_NOC_DARKGREEN", 
          71
        ], 
        [
          "Quantity_NOC_DARKKHAKI", 
          72
        ], 
        [
          "Quantity_NOC_DARKOLIVEGREEN", 
          73
        ], 
        [
          "Quantity_NOC_DARKOLIVEGREEN1", 
          74
        ], 
        [
          "Quantity_NOC_DARKOLIVEGREEN2", 
          75
        ], 
        [
          "Quantity_NOC_DARKOLIVEGREEN3", 
          76
        ], 
        [
          "Quantity_NOC_DARKOLIVEGREEN4", 
          77
        ], 
        [
          "Quantity_NOC_DARKORANGE", 
          78
        ], 
        [
          "Quantity_NOC_DARKORANGE1", 
          79
        ], 
        [
          "Quantity_NOC_DARKORANGE2", 
          80
        ], 
        [
          "Quantity_NOC_DARKORANGE3", 
          81
        ], 
        [
          "Quantity_NOC_DARKORANGE4", 
          82
        ], 
        [
          "Quantity_NOC_DARKORCHID", 
          83
        ], 
        [
          "Quantity_NOC_DARKORCHID1", 
          84
        ], 
        [
          "Quantity_NOC_DARKORCHID2", 
          85
        ], 
        [
          "Quantity_NOC_DARKORCHID3", 
          86
        ], 
        [
          "Quantity_NOC_DARKORCHID4", 
          87
        ], 
        [
          "Quantity_NOC_DARKSALMON", 
          88
        ], 
        [
          "Quantity_NOC_DARKSEAGREEN", 
          89
        ], 
        [
          "Quantity_NOC_DARKSEAGREEN1", 
          90
        ], 
        [
          "Quantity_NOC_DARKSEAGREEN2", 
          91
        ], 
        [
          "Quantity_NOC_DARKSEAGREEN3", 
          92
        ], 
        [
          "Quantity_NOC_DARKSEAGREEN4", 
          93
        ], 
        [
          "Quantity_NOC_DARKSLATEBLUE", 
          94
        ], 
        [
          "Quantity_NOC_DARKSLATEGRAY1", 
          95
        ], 
        [
          "Quantity_NOC_DARKSLATEGRAY2", 
          96
        ], 
        [
          "Quantity_NOC_DARKSLATEGRAY3", 
          97
        ], 
        [
          "Quantity_NOC_DARKSLATEGRAY4", 
          98
        ], 
        [
          "Quantity_NOC_DARKSLATEGRAY", 
          99
        ], 
        [
          "Quantity_NOC_DARKTURQUOISE", 
          100
        ], 
        [
          "Quantity_NOC_DARKVIOLET", 
          101
        ], 
        [
          "Quantity_NOC_DEEPPINK", 
          102
        ], 
        [
          "Quantity_NOC_DEEPPINK2", 
          103
        ], 
        [
          "Quantity_NOC_DEEPPINK3", 
          104
        ], 
        [
          "Quantity_NOC_DEEPPINK4", 
          105
        ], 
        [
          "Quantity_NOC_DEEPSKYBLUE1", 
          106
        ], 
        [
          "Quantity_NOC_DEEPSKYBLUE2", 
          107
        ], 
        [
          "Quantity_NOC_DEEPSKYBLUE3", 
          108
        ], 
        [
          "Quantity_NOC_DEEPSKYBLUE4", 
          109
        ], 
        [
          "Quantity_NOC_DODGERBLUE1", 
          110
        ], 
        [
          "Quantity_NOC_DODGERBLUE2", 
          111
        ], 
        [
          "Quantity_NOC_DODGERBLUE3", 
          112
        ], 
        [
          "Quantity_NOC_DODGERBLUE4", 
          113
        ], 
        [
          "Quantity_NOC_FIREBRICK", 
          114
        ], 
        [
          "Quantity_NOC_FIREBRICK1", 
          115
        ], 
        [
          "Quantity_NOC_FIREBRICK2", 
          116
        ], 
        [
          "Quantity_NOC_FIREBRICK3", 
          117
        ], 
        [
          "Quantity_NOC_FIREBRICK4", 
          118
        ], 
        [
          "Quantity_NOC_FLORALWHITE", 
          119
        ], 
        [
          "Quantity_NOC_FORESTGREEN", 
          120
        ], 
        [
          "Quantity_NOC_GAINSBORO", 
          121
        ], 
        [
          "Quantity_NOC_GHOSTWHITE", 
          122
        ], 
        [
          "Quantity_NOC_GOLD", 
          123
        ], 
        [
          "Quantity_NOC_GOLD1", 
          124
        ], 
        [
          "Quantity_NOC_GOLD2", 
          125
        ], 
        [
          "Quantity_NOC_GOLD3", 
          126
        ], 
        [
          "Quantity_NOC_GOLD4", 
          127
        ], 
        [
          "Quantity_NOC_GOLDENROD", 
          128
        ], 
        [
          "Quantity_NOC_GOLDENROD1", 
          129
        ], 
        [
          "Quantity_NOC_GOLDENROD2", 
          130
        ], 
        [
          "Quantity_NOC_GOLDENROD3", 
          131
        ], 
        [
          "Quantity_NOC_GOLDENROD4", 
          132
        ], 
        [
          "Quantity_NOC_GRAY", 
          133
        ], 
        [
          "Quantity_NOC_GRAY0", 
          134
        ], 
        [
          "Quantity_NOC_GRAY1", 
          135
        ], 
        [
          "Quantity_NOC_GRAY10", 
          136
        ], 
        [
          "Quantity_NOC_GRAY11", 
          137
        ], 
        [
          "Quantity_NOC_GRAY12", 
          138
        ], 
        [
          "Quantity_NOC_GRAY13", 
          139
        ], 
        [
          "Quantity_NOC_GRAY14", 
          140
        ], 
        [
          "Quantity_NOC_GRAY15", 
          141
        ], 
        [
          "Quantity_NOC_GRAY16", 
          142
        ], 
        [
          "Quantity_NOC_GRAY17", 
          143
        ], 
        [
          "Quantity_NOC_GRAY18", 
          144
        ], 
        [
          "Quantity_NOC_GRAY19", 
          145
        ], 
        [
          "Quantity_NOC_GRAY2", 
          146
        ], 
        [
          "Quantity_NOC_GRAY20", 
          147
        ], 
        [
          "Quantity_NOC_GRAY21", 
          148
        ], 
        [
          "Quantity_NOC_GRAY22", 
          149
        ], 
        [
          "Quantity_NOC_GRAY23", 
          150
        ], 
        [
          "Quantity_NOC_GRAY24", 
          151
        ], 
        [
          "Quantity_NOC_GRAY25", 
          152
        ], 
        [
          "Quantity_NOC_GRAY26", 
          153
        ], 
        [
          "Quantity_NOC_GRAY27", 
          154
        ], 
        [
          "Quantity_NOC_GRAY28", 
          155
        ], 
        [
          "Quantity_NOC_GRAY29", 
          156
        ], 
        [
          "Quantity_NOC_GRAY3", 
          157
        ], 
        [
          "Quantity_NOC_GRAY30", 
          158
        ], 
        [
          "Quantity_NOC_GRAY31", 
          159
        ], 
        [
          "Quantity_NOC_GRAY32", 
          160
        ], 
        [
          "Quantity_NOC_GRAY33", 
          161
        ], 
        [
          "Quantity_NOC_GRAY34", 
          162
        ], 
        [
          "Quantity_NOC_GRAY35", 
          163
        ], 
        [
          "Quantity_NOC_GRAY36", 
          164
        ], 
        [
          "Quantity_NOC_GRAY37", 
          165
        ], 
        [
          "Quantity_NOC_GRAY38", 
          166
        ], 
        [
          "Quantity_NOC_GRAY39", 
          167
        ], 
        [
          "Quantity_NOC_GRAY4", 
          168
        ], 
        [
          "Quantity_NOC_GRAY40", 
          169
        ], 
        [
          "Quantity_NOC_GRAY41", 
          170
        ], 
        [
          "Quantity_NOC_GRAY42", 
          171
        ], 
        [
          "Quantity_NOC_GRAY43", 
          172
        ], 
        [
          "Quantity_NOC_GRAY44", 
          173
        ], 
        [
          "Quantity_NOC_GRAY45", 
          174
        ], 
        [
          "Quantity_NOC_GRAY46", 
          175
        ], 
        [
          "Quantity_NOC_GRAY47", 
          176
        ], 
        [
          "Quantity_NOC_GRAY48", 
          177
        ], 
        [
          "Quantity_NOC_GRAY49", 
          178
        ], 
        [
          "Quantity_NOC_GRAY5", 
          179
        ], 
        [
          "Quantity_NOC_GRAY50", 
          180
        ], 
        [
          "Quantity_NOC_GRAY51", 
          181
        ], 
        [
          "Quantity_NOC_GRAY52", 
          182
        ], 
        [
          "Quantity_NOC_GRAY53", 
          183
        ], 
        [
          "Quantity_NOC_GRAY54", 
          184
        ], 
        [
          "Quantity_NOC_GRAY55", 
          185
        ], 
        [
          "Quantity_NOC_GRAY56", 
          186
        ], 
        [
          "Quantity_NOC_GRAY57", 
          187
        ], 
        [
          "Quantity_NOC_GRAY58", 
          188
        ], 
        [
          "Quantity_NOC_GRAY59", 
          189
        ], 
        [
          "Quantity_NOC_GRAY6", 
          190
        ], 
        [
          "Quantity_NOC_GRAY60", 
          191
        ], 
        [
          "Quantity_NOC_GRAY61", 
          192
        ], 
        [
          "Quantity_NOC_GRAY62", 
          193
        ], 
        [
          "Quantity_NOC_GRAY63", 
          194
        ], 
        [
          "Quantity_NOC_GRAY64", 
          195
        ], 
        [
          "Quantity_NOC_GRAY65", 
          196
        ], 
        [
          "Quantity_NOC_GRAY66", 
          197
        ], 
        [
          "Quantity_NOC_GRAY67", 
          198
        ], 
        [
          "Quantity_NOC_GRAY68", 
          199
        ], 
        [
          "Quantity_NOC_GRAY69", 
          200
        ], 
        [
          "Quantity_NOC_GRAY7", 
          201
        ], 
        [
          "Quantity_NOC_GRAY70", 
          202
        ], 
        [
          "Quantity_NOC_GRAY71", 
          203
        ], 
        [
          "Quantity_NOC_GRAY72", 
          204
        ], 
        [
          "Quantity_NOC_GRAY73", 
          205
        ], 
        [
          "Quantity_NOC_GRAY74", 
          206
        ], 
        [
          "Quantity_NOC_GRAY75", 
          207
        ], 
        [
          "Quantity_NOC_GRAY76", 
          208
        ], 
        [
          "Quantity_NOC_GRAY77", 
          209
        ], 
        [
          "Quantity_NOC_GRAY78", 
          210
        ], 
        [
          "Quantity_NOC_GRAY79", 
          211
        ], 
        [
          "Quantity_NOC_GRAY8", 
          212
        ], 
        [
          "Quantity_NOC_GRAY80", 
          213
        ], 
        [
          "Quantity_NOC_GRAY81", 
          214
        ], 
        [
          "Quantity_NOC_GRAY82", 
          215
        ], 
        [
          "Quantity_NOC_GRAY83", 
          216
        ], 
        [
          "Quantity_NOC_GRAY85", 
          217
        ], 
        [
          "Quantity_NOC_GRAY86", 
          218
        ], 
        [
          "Quantity_NOC_GRAY87", 
          219
        ], 
        [
          "Quantity_NOC_GRAY88", 
          220
        ], 
        [
          "Quantity_NOC_GRAY89", 
          221
        ], 
        [
          "Quantity_NOC_GRAY9", 
          222
        ], 
        [
          "Quantity_NOC_GRAY90", 
          223
        ], 
        [
          "Quantity_NOC_GRAY91", 
          224
        ], 
        [
          "Quantity_NOC_GRAY92", 
          225
        ], 
        [
          "Quantity_NOC_GRAY93", 
          226
        ], 
        [
          "Quantity_NOC_GRAY94", 
          227
        ], 
        [
          "Quantity_NOC_GRAY95", 
          228
        ], 
        [
          "Quantity_NOC_GREEN", 
          229
        ], 
        [
          "Quantity_NOC_GREEN1", 
          230
        ], 
        [
          "Quantity_NOC_GREEN2", 
          231
        ], 
        [
          "Quantity_NOC_GREEN3", 
          232
        ], 
        [
          "Quantity_NOC_GREEN4", 
          233
        ], 
        [
          "Quantity_NOC_GREENYELLOW", 
          234
        ], 
        [
          "Quantity_NOC_GRAY97", 
          235
        ], 
        [
          "Quantity_NOC_GRAY98", 
          236
        ], 
        [
          "Quantity_NOC_GRAY99", 
          237
        ], 
        [
          "Quantity_NOC_HONEYDEW", 
          238
        ], 
        [
          "Quantity_NOC_HONEYDEW2", 
          239
        ], 
        [
          "Quantity_NOC_HONEYDEW3", 
          240
        ], 
        [
          "Quantity_NOC_HONEYDEW4", 
          241
        ], 
        [
          "Quantity_NOC_HOTPINK", 
          242
        ], 
        [
          "Quantity_NOC_HOTPINK1", 
          243
        ], 
        [
          "Quantity_NOC_HOTPINK2", 
          244
        ], 
        [
          "Quantity_NOC_HOTPINK3", 
          245
        ], 
        [
          "Quantity_NOC_HOTPINK4", 
          246
        ], 
        [
          "Quantity_NOC_INDIANRED", 
          247
        ], 
        [
          "Quantity_NOC_INDIANRED1", 
          248
        ], 
        [
          "Quantity_NOC_INDIANRED2", 
          249
        ], 
        [
          "Quantity_NOC_INDIANRED3", 
          250
        ], 
        [
          "Quantity_NOC_INDIANRED4", 
          251
        ], 
        [
          "Quantity_NOC_IVORY", 
          252
        ], 
        [
          "Quantity_NOC_IVORY2", 
          253
        ], 
        [
          "Quantity_NOC_IVORY3", 
          254
        ], 
        [
          "Quantity_NOC_IVORY4", 
          255
        ], 
        [
          "Quantity_NOC_KHAKI", 
          256
        ], 
        [
          "Quantity_NOC_KHAKI1", 
          257
        ], 
        [
          "Quantity_NOC_KHAKI2", 
          258
        ], 
        [
          "Quantity_NOC_KHAKI3", 
          259
        ], 
        [
          "Quantity_NOC_KHAKI4", 
          260
        ], 
        [
          "Quantity_NOC_LAVENDER", 
          261
        ], 
        [
          "Quantity_NOC_LAVENDERBLUSH1", 
          262
        ], 
        [
          "Quantity_NOC_LAVENDERBLUSH2", 
          263
        ], 
        [
          "Quantity_NOC_LAVENDERBLUSH3", 
          264
        ], 
        [
          "Quantity_NOC_LAVENDERBLUSH4", 
          265
        ], 
        [
          "Quantity_NOC_LAWNGREEN", 
          266
        ], 
        [
          "Quantity_NOC_LEMONCHIFFON1", 
          267
        ], 
        [
          "Quantity_NOC_LEMONCHIFFON2", 
          268
        ], 
        [
          "Quantity_NOC_LEMONCHIFFON3", 
          269
        ], 
        [
          "Quantity_NOC_LEMONCHIFFON4", 
          270
        ], 
        [
          "Quantity_NOC_LIGHTBLUE", 
          271
        ], 
        [
          "Quantity_NOC_LIGHTBLUE1", 
          272
        ], 
        [
          "Quantity_NOC_LIGHTBLUE2", 
          273
        ], 
        [
          "Quantity_NOC_LIGHTBLUE3", 
          274
        ], 
        [
          "Quantity_NOC_LIGHTBLUE4", 
          275
        ], 
        [
          "Quantity_NOC_LIGHTCORAL", 
          276
        ], 
        [
          "Quantity_NOC_LIGHTCYAN1", 
          277
        ], 
        [
          "Quantity_NOC_LIGHTCYAN2", 
          278
        ], 
        [
          "Quantity_NOC_LIGHTCYAN3", 
          279
        ], 
        [
          "Quantity_NOC_LIGHTCYAN4", 
          280
        ], 
        [
          "Quantity_NOC_LIGHTGOLDENROD", 
          281
        ], 
        [
          "Quantity_NOC_LIGHTGOLDENROD1", 
          282
        ], 
        [
          "Quantity_NOC_LIGHTGOLDENROD2", 
          283
        ], 
        [
          "Quantity_NOC_LIGHTGOLDENROD3", 
          284
        ], 
        [
          "Quantity_NOC_LIGHTGOLDENROD4", 
          285
        ], 
        [
          "Quantity_NOC_LIGHTGOLDENRODYELLOW", 
          286
        ], 
        [
          "Quantity_NOC_LIGHTGRAY", 
          287
        ], 
        [
          "Quantity_NOC_LIGHTPINK", 
          288
        ], 
        [
          "Quantity_NOC_LIGHTPINK1", 
          289
        ], 
        [
          "Quantity_NOC_LIGHTPINK2", 
          290
        ], 
        [
          "Quantity_NOC_LIGHTPINK3", 
          291
        ], 
        [
          "Quantity_NOC_LIGHTPINK4", 
          292
        ], 
        [
          "Quantity_NOC_LIGHTSALMON1", 
          293
        ], 
        [
          "Quantity_NOC_LIGHTSALMON2", 
          294
        ], 
        [
          "Quantity_NOC_LIGHTSALMON3", 
          295
        ], 
        [
          "Quantity_NOC_LIGHTSALMON4", 
          296
        ], 
        [
          "Quantity_NOC_LIGHTSEAGREEN", 
          297
        ], 
        [
          "Quantity_NOC_LIGHTSKYBLUE", 
          298
        ], 
        [
          "Quantity_NOC_LIGHTSKYBLUE1", 
          299
        ], 
        [
          "Quantity_NOC_LIGHTSKYBLUE2", 
          300
        ], 
        [
          "Quantity_NOC_LIGHTSKYBLUE3", 
          301
        ], 
        [
          "Quantity_NOC_LIGHTSKYBLUE4", 
          302
        ], 
        [
          "Quantity_NOC_LIGHTSLATEBLUE", 
          303
        ], 
        [
          "Quantity_NOC_LIGHTSLATEGRAY", 
          304
        ], 
        [
          "Quantity_NOC_LIGHTSTEELBLUE", 
          305
        ], 
        [
          "Quantity_NOC_LIGHTSTEELBLUE1", 
          306
        ], 
        [
          "Quantity_NOC_LIGHTSTEELBLUE2", 
          307
        ], 
        [
          "Quantity_NOC_LIGHTSTEELBLUE3", 
          308
        ], 
        [
          "Quantity_NOC_LIGHTSTEELBLUE4", 
          309
        ], 
        [
          "Quantity_NOC_LIGHTYELLOW", 
          310
        ], 
        [
          "Quantity_NOC_LIGHTYELLOW2", 
          311
        ], 
        [
          "Quantity_NOC_LIGHTYELLOW3", 
          312
        ], 
        [
          "Quantity_NOC_LIGHTYELLOW4", 
          313
        ], 
        [
          "Quantity_NOC_LIMEGREEN", 
          314
        ], 
        [
          "Quantity_NOC_LINEN", 
          315
        ], 
        [
          "Quantity_NOC_MAGENTA1", 
          316
        ], 
        [
          "Quantity_NOC_MAGENTA2", 
          317
        ], 
        [
          "Quantity_NOC_MAGENTA3", 
          318
        ], 
        [
          "Quantity_NOC_MAGENTA4", 
          319
        ], 
        [
          "Quantity_NOC_MAROON", 
          320
        ], 
        [
          "Quantity_NOC_MAROON1", 
          321
        ], 
        [
          "Quantity_NOC_MAROON2", 
          322
        ], 
        [
          "Quantity_NOC_MAROON3", 
          323
        ], 
        [
          "Quantity_NOC_MAROON4", 
          324
        ], 
        [
          "Quantity_NOC_MEDIUMAQUAMARINE", 
          325
        ], 
        [
          "Quantity_NOC_MEDIUMORCHID", 
          326
        ], 
        [
          "Quantity_NOC_MEDIUMORCHID1", 
          327
        ], 
        [
          "Quantity_NOC_MEDIUMORCHID2", 
          328
        ], 
        [
          "Quantity_NOC_MEDIUMORCHID3", 
          329
        ], 
        [
          "Quantity_NOC_MEDIUMORCHID4", 
          330
        ], 
        [
          "Quantity_NOC_MEDIUMPURPLE", 
          331
        ], 
        [
          "Quantity_NOC_MEDIUMPURPLE1", 
          332
        ], 
        [
          "Quantity_NOC_MEDIUMPURPLE2", 
          333
        ], 
        [
          "Quantity_NOC_MEDIUMPURPLE3", 
          334
        ], 
        [
          "Quantity_NOC_MEDIUMPURPLE4", 
          335
        ], 
        [
          "Quantity_NOC_MEDIUMSEAGREEN", 
          336
        ], 
        [
          "Quantity_NOC_MEDIUMSLATEBLUE", 
          337
        ], 
        [
          "Quantity_NOC_MEDIUMSPRINGGREEN", 
          338
        ], 
        [
          "Quantity_NOC_MEDIUMTURQUOISE", 
          339
        ], 
        [
          "Quantity_NOC_MEDIUMVIOLETRED", 
          340
        ], 
        [
          "Quantity_NOC_MIDNIGHTBLUE", 
          341
        ], 
        [
          "Quantity_NOC_MINTCREAM", 
          342
        ], 
        [
          "Quantity_NOC_MISTYROSE", 
          343
        ], 
        [
          "Quantity_NOC_MISTYROSE2", 
          344
        ], 
        [
          "Quantity_NOC_MISTYROSE3", 
          345
        ], 
        [
          "Quantity_NOC_MISTYROSE4", 
          346
        ], 
        [
          "Quantity_NOC_MOCCASIN", 
          347
        ], 
        [
          "Quantity_NOC_NAVAJOWHITE1", 
          348
        ], 
        [
          "Quantity_NOC_NAVAJOWHITE2", 
          349
        ], 
        [
          "Quantity_NOC_NAVAJOWHITE3", 
          350
        ], 
        [
          "Quantity_NOC_NAVAJOWHITE4", 
          351
        ], 
        [
          "Quantity_NOC_NAVYBLUE", 
          352
        ], 
        [
          "Quantity_NOC_OLDLACE", 
          353
        ], 
        [
          "Quantity_NOC_OLIVEDRAB", 
          354
        ], 
        [
          "Quantity_NOC_OLIVEDRAB1", 
          355
        ], 
        [
          "Quantity_NOC_OLIVEDRAB2", 
          356
        ], 
        [
          "Quantity_NOC_OLIVEDRAB3", 
          357
        ], 
        [
          "Quantity_NOC_OLIVEDRAB4", 
          358
        ], 
        [
          "Quantity_NOC_ORANGE", 
          359
        ], 
        [
          "Quantity_NOC_ORANGE1", 
          360
        ], 
        [
          "Quantity_NOC_ORANGE2", 
          361
        ], 
        [
          "Quantity_NOC_ORANGE3", 
          362
        ], 
        [
          "Quantity_NOC_ORANGE4", 
          363
        ], 
        [
          "Quantity_NOC_ORANGERED", 
          364
        ], 
        [
          "Quantity_NOC_ORANGERED1", 
          365
        ], 
        [
          "Quantity_NOC_ORANGERED2", 
          366
        ], 
        [
          "Quantity_NOC_ORANGERED3", 
          367
        ], 
        [
          "Quantity_NOC_ORANGERED4", 
          368
        ], 
        [
          "Quantity_NOC_ORCHID", 
          369
        ], 
        [
          "Quantity_NOC_ORCHID1", 
          370
        ], 
        [
          "Quantity_NOC_ORCHID2", 
          371
        ], 
        [
          "Quantity_NOC_ORCHID3", 
          372
        ], 
        [
          "Quantity_NOC_ORCHID4", 
          373
        ], 
        [
          "Quantity_NOC_PALEGOLDENROD", 
          374
        ], 
        [
          "Quantity_NOC_PALEGREEN", 
          375
        ], 
        [
          "Quantity_NOC_PALEGREEN1", 
          376
        ], 
        [
          "Quantity_NOC_PALEGREEN2", 
          377
        ], 
        [
          "Quantity_NOC_PALEGREEN3", 
          378
        ], 
        [
          "Quantity_NOC_PALEGREEN4", 
          379
        ], 
        [
          "Quantity_NOC_PALETURQUOISE", 
          380
        ], 
        [
          "Quantity_NOC_PALETURQUOISE1", 
          381
        ], 
        [
          "Quantity_NOC_PALETURQUOISE2", 
          382
        ], 
        [
          "Quantity_NOC_PALETURQUOISE3", 
          383
        ], 
        [
          "Quantity_NOC_PALETURQUOISE4", 
          384
        ], 
        [
          "Quantity_NOC_PALEVIOLETRED", 
          385
        ], 
        [
          "Quantity_NOC_PALEVIOLETRED1", 
          386
        ], 
        [
          "Quantity_NOC_PALEVIOLETRED2", 
          387
        ], 
        [
          "Quantity_NOC_PALEVIOLETRED3", 
          388
        ], 
        [
          "Quantity_NOC_PALEVIOLETRED4", 
          389
        ], 
        [
          "Quantity_NOC_PAPAYAWHIP", 
          390
        ], 
        [
          "Quantity_NOC_PEACHPUFF", 
          391
        ], 
        [
          "Quantity_NOC_PEACHPUFF2", 
          392
        ], 
        [
          "Quantity_NOC_PEACHPUFF3", 
          393
        ], 
        [
          "Quantity_NOC_PEACHPUFF4", 
          394
        ], 
        [
          "Quantity_NOC_PERU", 
          395
        ], 
        [
          "Quantity_NOC_PINK", 
          396
        ], 
        [
          "Quantity_NOC_PINK1", 
          397
        ], 
        [
          "Quantity_NOC_PINK2", 
          398
        ], 
        [
          "Quantity_NOC_PINK3", 
          399
        ], 
        [
          "Quantity_NOC_PINK4", 
          400
        ], 
        [
          "Quantity_NOC_PLUM", 
          401
        ], 
        [
          "Quantity_NOC_PLUM1", 
          402
        ], 
        [
          "Quantity_NOC_PLUM2", 
          403
        ], 
        [
          "Quantity_NOC_PLUM3", 
          404
        ], 
        [
          "Quantity_NOC_PLUM4", 
          405
        ], 
        [
          "Quantity_NOC_POWDERBLUE", 
          406
        ], 
        [
          "Quantity_NOC_PURPLE", 
          407
        ], 
        [
          "Quantity_NOC_PURPLE1", 
          408
        ], 
        [
          "Quantity_NOC_PURPLE2", 
          409
        ], 
        [
          "Quantity_NOC_PURPLE3", 
          410
        ], 
        [
          "Quantity_NOC_PURPLE4", 
          411
        ], 
        [
          "Quantity_NOC_RED", 
          412
        ], 
        [
          "Quantity_NOC_RED1", 
          413
        ], 
        [
          "Quantity_NOC_RED2", 
          414
        ], 
        [
          "Quantity_NOC_RED3", 
          415
        ], 
        [
          "Quantity_NOC_RED4", 
          416
        ], 
        [
          "Quantity_NOC_ROSYBROWN", 
          417
        ], 
        [
          "Quantity_NOC_ROSYBROWN1", 
          418
        ], 
        [
          "Quantity_NOC_ROSYBROWN2", 
          419
        ], 
        [
          "Quantity_NOC_ROSYBROWN3", 
          420
        ], 
        [
          "Quantity_NOC_ROSYBROWN4", 
          421
        ], 
        [
          "Quantity_NOC_ROYALBLUE", 
          422
        ], 
        [
          "Quantity_NOC_ROYALBLUE1", 
          423
        ], 
        [
          "Quantity_NOC_ROYALBLUE2", 
          424
        ], 
        [
          "Quantity_NOC_ROYALBLUE3", 
          425
        ], 
        [
          "Quantity_NOC_ROYALBLUE4", 
          426
        ], 
        [
          "Quantity_NOC_SADDLEBROWN", 
          427
        ], 
        [
          "Quantity_NOC_SALMON", 
          428
        ], 
        [
          "Quantity_NOC_SALMON1", 
          429
        ], 
        [
          "Quantity_NOC_SALMON2", 
          430
        ], 
        [
          "Quantity_NOC_SALMON3", 
          431
        ], 
        [
          "Quantity_NOC_SALMON4", 
          432
        ], 
        [
          "Quantity_NOC_SANDYBROWN", 
          433
        ], 
        [
          "Quantity_NOC_SEAGREEN", 
          434
        ], 
        [
          "Quantity_NOC_SEAGREEN1", 
          435
        ], 
        [
          "Quantity_NOC_SEAGREEN2", 
          436
        ], 
        [
          "Quantity_NOC_SEAGREEN3", 
          437
        ], 
        [
          "Quantity_NOC_SEAGREEN4", 
          438
        ], 
        [
          "Quantity_NOC_SEASHELL", 
          439
        ], 
        [
          "Quantity_NOC_SEASHELL2", 
          440
        ], 
        [
          "Quantity_NOC_SEASHELL3", 
          441
        ], 
        [
          "Quantity_NOC_SEASHELL4", 
          442
        ], 
        [
          "Quantity_NOC_BEET", 
          443
        ], 
        [
          "Quantity_NOC_TEAL", 
          444
        ], 
        [
          "Quantity_NOC_SIENNA", 
          445
        ], 
        [
          "Quantity_NOC_SIENNA1", 
          446
        ], 
        [
          "Quantity_NOC_SIENNA2", 
          447
        ], 
        [
          "Quantity_NOC_SIENNA3", 
          448
        ], 
        [
          "Quantity_NOC_SIENNA4", 
          449
        ], 
        [
          "Quantity_NOC_SKYBLUE", 
          450
        ], 
        [
          "Quantity_NOC_SKYBLUE1", 
          451
        ], 
        [
          "Quantity_NOC_SKYBLUE2", 
          452
        ], 
        [
          "Quantity_NOC_SKYBLUE3", 
          453
        ], 
        [
          "Quantity_NOC_SKYBLUE4", 
          454
        ], 
        [
          "Quantity_NOC_SLATEBLUE", 
          455
        ], 
        [
          "Quantity_NOC_SLATEBLUE1", 
          456
        ], 
        [
          "Quantity_NOC_SLATEBLUE2", 
          457
        ], 
        [
          "Quantity_NOC_SLATEBLUE3", 
          458
        ], 
        [
          "Quantity_NOC_SLATEBLUE4", 
          459
        ], 
        [
          "Quantity_NOC_SLATEGRAY1", 
          460
        ], 
        [
          "Quantity_NOC_SLATEGRAY2", 
          461
        ], 
        [
          "Quantity_NOC_SLATEGRAY3", 
          462
        ], 
        [
          "Quantity_NOC_SLATEGRAY4", 
          463
        ], 
        [
          "Quantity_NOC_SLATEGRAY", 
          464
        ], 
        [
          "Quantity_NOC_SNOW", 
          465
        ], 
        [
          "Quantity_NOC_SNOW2", 
          466
        ], 
        [
          "Quantity_NOC_SNOW3", 
          467
        ], 
        [
          "Quantity_NOC_SNOW4", 
          468
        ], 
        [
          "Quantity_NOC_SPRINGGREEN", 
          469
        ], 
        [
          "Quantity_NOC_SPRINGGREEN2", 
          470
        ], 
        [
          "Quantity_NOC_SPRINGGREEN3", 
          471
        ], 
        [
          "Quantity_NOC_SPRINGGREEN4", 
          472
        ], 
        [
          "Quantity_NOC_STEELBLUE", 
          473
        ], 
        [
          "Quantity_NOC_STEELBLUE1", 
          474
        ], 
        [
          "Quantity_NOC_STEELBLUE2", 
          475
        ], 
        [
          "Quantity_NOC_STEELBLUE3", 
          476
        ], 
        [
          "Quantity_NOC_STEELBLUE4", 
          477
        ], 
        [
          "Quantity_NOC_TAN", 
          478
        ], 
        [
          "Quantity_NOC_TAN1", 
          479
        ], 
        [
          "Quantity_NOC_TAN2", 
          480
        ], 
        [
          "Quantity_NOC_TAN3", 
          481
        ], 
        [
          "Quantity_NOC_TAN4", 
          482
        ], 
        [
          "Quantity_NOC_THISTLE", 
          483
        ], 
        [
          "Quantity_NOC_THISTLE1", 
          484
        ], 
        [
          "Quantity_NOC_THISTLE2", 
          485
        ], 
        [
          "Quantity_NOC_THISTLE3", 
          486
        ], 
        [
          "Quantity_NOC_THISTLE4", 
          487
        ], 
        [
          "Quantity_NOC_TOMATO", 
          488
        ], 
        [
          "Quantity_NOC_TOMATO1", 
          489
        ], 
        [
          "Quantity_NOC_TOMATO2", 
          490
        ], 
        [
          "Quantity_NOC_TOMATO3", 
          491
        ], 
        [
          "Quantity_NOC_TOMATO4", 
          492
        ], 
        [
          "Quantity_NOC_TURQUOISE", 
          493
        ], 
        [
          "Quantity_NOC_TURQUOISE1", 
          494
        ], 
        [
          "Quantity_NOC_TURQUOISE2", 
          495
        ], 
        [
          "Quantity_NOC_TURQUOISE3", 
          496
        ], 
        [
          "Quantity_NOC_TURQUOISE4", 
          497
        ], 
        [
          "Quantity_NOC_VIOLET", 
          498
        ], 
        [
          "Quantity_NOC_VIOLETRED", 
          499
        ], 
        [
          "Quantity_NOC_VIOLETRED1", 
          500
        ], 
        [
          "Quantity_NOC_VIOLETRED2", 
          501
        ], 
        [
          "Quantity_NOC_VIOLETRED3", 
          502
        ], 
        [
          "Quantity_NOC_VIOLETRED4", 
          503
        ], 
        [
          "Quantity_NOC_WHEAT", 
          504
        ], 
        [
          "Quantity_NOC_WHEAT1", 
          505
        ], 
        [
          "Quantity_NOC_WHEAT2", 
          506
        ], 
        [
          "Quantity_NOC_WHEAT3", 
          507
        ], 
        [
          "Quantity_NOC_WHEAT4", 
          508
        ], 
        [
          "Quantity_NOC_WHITESMOKE", 
          509
        ], 
        [
          "Quantity_NOC_YELLOW", 
          510
        ], 
        [
          "Quantity_NOC_YELLOW1", 
          511
        ], 
        [
          "Quantity_NOC_YELLOW2", 
          512
        ], 
        [
          "Quantity_NOC_YELLOW3", 
          513
        ], 
        [
          "Quantity_NOC_YELLOW4", 
          514
        ], 
        [
          "Quantity_NOC_YELLOWGREEN", 
          515
        ], 
        [
          "Quantity_NOC_WHITE", 
          516
        ]
      ], 
      "name": "Quantity_NameOfColor", 
      "key": "Quantity_NameOfColor"
    }, 
    {
      "declType": "enum", 
      "values": [
        [
          "Quantity_TOC_RGB", 
          0
        ], 
        [
          "Quantity_TOC_HLS", 
          1
        ]
      ], 
      "name": "Quantity_TypeOfColor", 
      "key": "Quantity_TypeOfColor"
    }, 
    {
      "declType": "enum", 
      "values": [
        [
          "Quantity_MASS", 
          0
        ], 
        [
          "Quantity_PLANEANGLE", 
          1
        ], 
        [
          "Quantity_SOLIDANGLE", 
          2
        ], 
        [
          "Quantity_LENGTH", 
          3
        ], 
        [
          "Quantity_AREA", 
          4
        ], 
        [
          "Quantity_VOLUME", 
          5
        ], 
        [
          "Quantity_SPEED", 
          6
        ], 
        [
          "Quantity_VELOCITY", 
          7
        ], 
        [
          "Quantity_ACCELERATION", 
          8
        ], 
        [
          "Quantity_ANGULARVELOCITY", 
          9
        ], 
        [
          "Quantity_FREQUENCY", 
          10
        ], 
        [
          "Quantity_TEMPERATURE", 
          11
        ], 
        [
          "Quantity_AMOUNTOFSUBSTANCE", 
          12
        ], 
        [
          "Quantity_DENSITY", 
          13
        ], 
        [
          "Quantity_MASSFLOW", 
          14
        ], 
        [
          "Quantity_VOLUMEFLOW", 
          15
        ], 
        [
          "Quantity_CONSUMPTION", 
          16
        ], 
        [
          "Quantity_MOMENTUM", 
          17
        ], 
        [
          "Quantity_KINETICMOMENT", 
          18
        ], 
        [
          "Quantity_MOMENTOFINERTIA", 
          19
        ], 
        [
          "Quantity_FORCE", 
          20
        ], 
        [
          "Quantity_MOMENTOFAFORCE", 
          21
        ], 
        [
          "Quantity_TORQUE", 
          22
        ], 
        [
          "Quantity_WEIGHT", 
          23
        ], 
        [
          "Quantity_PRESSURE", 
          24
        ], 
        [
          "Quantity_VISCOSITY", 
          25
        ], 
        [
          "Quantity_KINEMATICVISCOSITY", 
          26
        ], 
        [
          "Quantity_ENERGY", 
          27
        ], 
        [
          "Quantity_WORK", 
          28
        ], 
        [
          "Quantity_POWER", 
          29
        ], 
        [
          "Quantity_SURFACETENSION", 
          30
        ], 
        [
          "Quantity_COEFFICIENTOFEXPANSION", 
          31
        ], 
        [
          "Quantity_THERMALCONDUCTIVITY", 
          32
        ], 
        [
          "Quantity_SPECIFICHEATCAPACITY", 
          33
        ], 
        [
          "Quantity_ENTROPY", 
          34
        ], 
        [
          "Quantity_ENTHALPY", 
          35
        ], 
        [
          "Quantity_LUMINOUSINTENSITY", 
          36
        ], 
        [
          "Quantity_LUMINOUSFLUX", 
          37
        ], 
        [
          "Quantity_LUMINANCE", 
          38
        ], 
        [
          "Quantity_ILLUMINANCE", 
          39
        ], 
        [
          "Quantity_LUMINOUSEXPOSITION", 
          40
        ], 
        [
          "Quantity_LUMINOUSEFFICACITY", 
          41
        ], 
        [
          "Quantity_ELECTRICCHARGE", 
          42
        ], 
        [
          "Quantity_ELECTRICCURRENT", 
          43
        ], 
        [
          "Quantity_ELECTRICFIELDSTRENGTH", 
          44
        ], 
        [
          "Quantity_ELECTRICPOTENTIAL", 
          45
        ], 
        [
          "Quantity_ELECTRICCAPACITANCE", 
          46
        ], 
        [
          "Quantity_MAGNETICFLUX", 
          47
        ], 
        [
          "Quantity_MAGNETICFLUXDENSITY", 
          48
        ], 
        [
          "Quantity_MAGNETICFIELDSTRENGTH", 
          49
        ], 
        [
          "Quantity_RELUCTANCE", 
          50
        ], 
        [
          "Quantity_RESISTANCE", 
          51
        ], 
        [
          "Quantity_INDUCTANCE", 
          52
        ], 
        [
          "Quantity_CAPACITANCE", 
          53
        ], 
        [
          "Quantity_IMPEDANCE", 
          54
        ], 
        [
          "Quantity_ADMITTANCE", 
          55
        ], 
        [
          "Quantity_RESISTIVITY", 
          56
        ], 
        [
          "Quantity_CONDUCTIVITY", 
          57
        ], 
        [
          "Quantity_MOLARMASS", 
          58
        ], 
        [
          "Quantity_MOLARVOLUME", 
          59
        ], 
        [
          "Quantity_CONCENTRATION", 
          60
        ], 
        [
          "Quantity_MOLARCONCENTRATION", 
          61
        ], 
        [
          "Quantity_MOLARITY", 
          62
        ], 
        [
          "Quantity_SOUNDINTENSITY", 
          63
        ], 
        [
          "Quantity_ACOUSTICINTENSITY", 
          64
        ], 
        [
          "Quantity_ACTIVITY", 
          65
        ], 
        [
          "Quantity_ABSORBEDDOSE", 
          66
        ], 
        [
          "Quantity_DOSEEQUIVALENT", 
          67
        ]
      ], 
      "name": "Quantity_PhysicalQuantity", 
      "key": "Quantity_PhysicalQuantity"
    }
  ], 
  "name": "Quantity"
}