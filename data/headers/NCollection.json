{
  "headers": [
    "NCollection_Vec3.hxx", 
    "NCollection_String.hxx", 
    "NCollection_SparseArrayBase.hxx", 
    "NCollection_DefineHArray2.hxx", 
    "NCollection_UBTreeFiller.hxx", 
    "NCollection_Sequence.hxx", 
    "NCollection_HeapAllocator.hxx", 
    "NCollection_BaseVector.hxx", 
    "NCollection_Vector.hxx", 
    "NCollection_UtfString.hxx", 
    "NCollection_BaseList.hxx", 
    "NCollection_DefineDataMap.hxx", 
    "NCollection_UtfIterator.hxx", 
    "NCollection_HArray1.hxx", 
    "NCollection_AlignedAllocator.hxx", 
    "NCollection_UBTree.hxx", 
    "NCollection_Buffer.hxx", 
    "NCollection_DefineMap.hxx", 
    "NCollection_IncAllocator.hxx", 
    "NCollection_Vec2.hxx", 
    "NCollection_HArray2.hxx", 
    "NCollection_DefineHSequence.hxx", 
    "NCollection_BaseMap.hxx", 
    "NCollection_List.hxx", 
    "NCollection_AccAllocator.hxx", 
    "NCollection_HSequence.hxx", 
    "NCollection_StdAllocator.hxx", 
    "NCollection_LocalArray.hxx", 
    "NCollection_ListNode.hxx", 
    "NCollection_WinHeapAllocator.hxx", 
    "NCollection_DefineIndexedDataMap.hxx", 
    "NCollection_TListIterator.hxx", 
    "NCollection_Array1.hxx", 
    "NCollection_TListNode.hxx", 
    "NCollection_Array2.hxx", 
    "NCollection_Mat4.hxx", 
    "NCollection_Lerp.hxx", 
    "NCollection_StlIterator.hxx", 
    "NCollection_DefineAlloc.hxx", 
    "NCollection_DefineArray1.hxx", 
    "NCollection_SparseArray.hxx", 
    "NCollection_DefineVector.hxx", 
    "NCollection_Shared.hxx", 
    "NCollection_DefineArray2.hxx", 
    "NCollection_DefineIndexedMap.hxx", 
    "NCollection_DefineList.hxx", 
    "NCollection_Comparator.hxx", 
    "NCollection_DefineSequence.hxx", 
    "NCollection_BaseAllocator.hxx", 
    "NCollection_DefineDoubleMap.hxx", 
    "NCollection_DefaultHasher.hxx", 
    "NCollection_Vec4.hxx", 
    "NCollection_DefineHArray1.hxx", 
    "NCollection_TypeDef.hxx", 
    "NCollection_Handle.hxx"
  ], 
  "declarations": [
    {
      "declType": "class", 
      "name": "NCollection_Vec3<float>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_Vec3<float>::NCollection_Vec3()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "NCollection_Vec3", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::NCollection_Vec3(float)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "float", 
              "name": "theValue"
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "NCollection_Vec3", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::NCollection_Vec3(float, float, float)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "float", 
              "name": "theX", 
              "const": true
            }, 
            {
              "type": "float", 
              "name": "theY", 
              "const": true
            }, 
            {
              "type": "float", 
              "name": "theZ", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "NCollection_Vec3", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::NCollection_Vec3(NCollection_Vec2<float>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec2<float>", 
              "name": "theVec2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "NCollection_Vec3", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::NCollection_Vec3(NCollection_Vec3<float>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec3<float>", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "NCollection_Vec3", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_Vec3<float>::Length()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "Length", 
          "return": {
            "type": "int"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::x()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "x", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::r()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "r", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::y()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "y", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::g()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "g", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::z()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "z", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::b()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "b", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::xy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "xy", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::yx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "yx", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::xz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "xz", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::zx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "zx", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::yz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "yz", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::zy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "zy", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::xyz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "xyz", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::xzy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "xzy", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::yxz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "yxz", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::yzx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "yzx", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::zyx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "zyx", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::zxy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "zxy", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::x()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "x", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::r()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "r", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::y()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "y", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::g()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "g", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::z()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "z", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::b()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "b", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::xy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "xy", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::yz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "yz", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::GetData()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "GetData", 
          "return": {
            "type": "float", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::ChangeData()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "ChangeData", 
          "return": {
            "type": "float", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::Multiply(float)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "float", 
              "name": "theFactor", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "Multiply", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::Multiplied(float)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "float", 
              "name": "theFactor", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "Multiplied", 
          "return": {
            "type": "NCollection_Vec3<float>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::cwiseMin(NCollection_Vec3<float>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec3<float>", 
              "name": "theVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "cwiseMin", 
          "return": {
            "type": "NCollection_Vec3<float>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::cwiseMax(NCollection_Vec3<float>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec3<float>", 
              "name": "theVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "cwiseMax", 
          "return": {
            "type": "NCollection_Vec3<float>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::cwiseAbs()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "cwiseAbs", 
          "return": {
            "type": "NCollection_Vec3<float>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::maxComp()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "maxComp", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::minComp()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "minComp", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::Dot(NCollection_Vec3<float>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec3<float>", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "Dot", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::Modulus()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "Modulus", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::SquareModulus()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "SquareModulus", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::Normalize()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "Normalize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::Normalized()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "Normalized", 
          "return": {
            "type": "NCollection_Vec3<float>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::Cross(NCollection_Vec3<float>, NCollection_Vec3<float>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec3<float>", 
              "name": "theVec1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "NCollection_Vec3<float>", 
              "name": "theVec2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "Cross", 
          "return": {
            "type": "NCollection_Vec3<float>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::GetLERP(NCollection_Vec3<float>, NCollection_Vec3<float>, float)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec3<float>", 
              "name": "theFrom", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "NCollection_Vec3<float>", 
              "name": "theTo", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "float", 
              "name": "theT", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec3<float>", 
          "name": "GetLERP", 
          "return": {
            "type": "NCollection_Vec3<float>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::DX()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "DX", 
          "return": {
            "type": "NCollection_Vec3<float>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::DY()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "DY", 
          "return": {
            "type": "NCollection_Vec3<float>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<float>::DZ()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<float>", 
          "name": "DZ", 
          "return": {
            "type": "NCollection_Vec3<float>"
          }, 
          "static": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_Vec3.hxx", 
        35
      ], 
      "key": "NCollection_Vec3<float>"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_Vec3<double>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_Vec3<double>::NCollection_Vec3()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "NCollection_Vec3", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::NCollection_Vec3(double)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "double", 
              "name": "theValue"
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "NCollection_Vec3", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::NCollection_Vec3(double, double, double)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "double", 
              "name": "theX", 
              "const": true
            }, 
            {
              "type": "double", 
              "name": "theY", 
              "const": true
            }, 
            {
              "type": "double", 
              "name": "theZ", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "NCollection_Vec3", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::NCollection_Vec3(NCollection_Vec2<double>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec2<double>", 
              "name": "theVec2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "NCollection_Vec3", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::NCollection_Vec3(NCollection_Vec3<double>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec3<double>", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "NCollection_Vec3", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_Vec3<double>::Length()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "Length", 
          "return": {
            "type": "int"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::x()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "x", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::r()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "r", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::y()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "y", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::g()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "g", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::z()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "z", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::b()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "b", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::xy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "xy", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::yx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "yx", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::xz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "xz", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::zx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "zx", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::yz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "yz", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::zy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "zy", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::xyz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "xyz", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::xzy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "xzy", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::yxz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "yxz", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::yzx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "yzx", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::zyx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "zyx", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::zxy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "zxy", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::x()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "x", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::r()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "r", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::y()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "y", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::g()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "g", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::z()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "z", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::b()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "b", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::xy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "xy", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::yz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "yz", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::GetData()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "GetData", 
          "return": {
            "type": "double", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::ChangeData()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "ChangeData", 
          "return": {
            "type": "double", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::Multiply(double)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "double", 
              "name": "theFactor", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "Multiply", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::Multiplied(double)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "double", 
              "name": "theFactor", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "Multiplied", 
          "return": {
            "type": "NCollection_Vec3<double>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::cwiseMin(NCollection_Vec3<double>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec3<double>", 
              "name": "theVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "cwiseMin", 
          "return": {
            "type": "NCollection_Vec3<double>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::cwiseMax(NCollection_Vec3<double>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec3<double>", 
              "name": "theVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "cwiseMax", 
          "return": {
            "type": "NCollection_Vec3<double>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::cwiseAbs()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "cwiseAbs", 
          "return": {
            "type": "NCollection_Vec3<double>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::maxComp()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "maxComp", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::minComp()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "minComp", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::Dot(NCollection_Vec3<double>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec3<double>", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "Dot", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::Modulus()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "Modulus", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::SquareModulus()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "SquareModulus", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::Normalize()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "Normalize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::Normalized()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "Normalized", 
          "return": {
            "type": "NCollection_Vec3<double>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::Cross(NCollection_Vec3<double>, NCollection_Vec3<double>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec3<double>", 
              "name": "theVec1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "NCollection_Vec3<double>", 
              "name": "theVec2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "Cross", 
          "return": {
            "type": "NCollection_Vec3<double>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::GetLERP(NCollection_Vec3<double>, NCollection_Vec3<double>, double)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec3<double>", 
              "name": "theFrom", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "NCollection_Vec3<double>", 
              "name": "theTo", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "double", 
              "name": "theT", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec3<double>", 
          "name": "GetLERP", 
          "return": {
            "type": "NCollection_Vec3<double>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::DX()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "DX", 
          "return": {
            "type": "NCollection_Vec3<double>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::DY()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "DY", 
          "return": {
            "type": "NCollection_Vec3<double>"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec3<double>::DZ()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec3<double>", 
          "name": "DZ", 
          "return": {
            "type": "NCollection_Vec3<double>"
          }, 
          "static": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_Vec3.hxx", 
        35
      ], 
      "key": "NCollection_Vec3<double>"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_UtfString<char>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_UtfString<char>::NCollection_UtfString()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::NCollection_UtfString(NCollection_UtfString<char>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_UtfString<char>", 
              "name": "theCopy", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char>", 
            "ptr": true
          }, 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_UtfString<char>::NCollection_UtfString(char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "char", 
              "name": "theCopyUtf8", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::NCollection_UtfString(Standard_Utf16Char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Utf16Char", 
              "name": "theCopyUtf16", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::NCollection_UtfString(Standard_Utf32Char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Utf32Char", 
              "name": "theCopyUtf32", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::NCollection_UtfString(Standard_WideChar, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_WideChar", 
              "name": "theCopyUtfWide", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::Iterator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_UtfIterator<char>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::Size()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "Size", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::Length()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "Length", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::GetChar(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theCharIndex", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "GetChar", 
          "return": {
            "type": "Standard_Utf32Char"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::GetCharBuffer(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theCharIndex", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "GetCharBuffer", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::FromLocale(char, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "char", 
              "name": "theString", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "FromLocale", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::IsEqual(NCollection_UtfString<char>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_UtfString<char>", 
              "name": "theCompare", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "IsEqual", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::SubString(Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theStart", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theEnd", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "SubString", 
          "return": {
            "type": "NCollection_UtfString<char>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::ToCString()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "ToCString", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::ToUtf8()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "ToUtf8", 
          "return": {
            "type": "NCollection_UtfString<char>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::ToUtf16()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "ToUtf16", 
          "return": {
            "type": "NCollection_UtfString<char16_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::ToUtf32()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "ToUtf32", 
          "return": {
            "type": "NCollection_UtfString<char32_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::ToUtfWide()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "ToUtfWide", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::ToLocale(char, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "char", 
              "name": "theBuffer", 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theSizeBytes", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char>", 
          "name": "ToLocale", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::IsEmpty()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "IsEmpty", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char>::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char>", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_UtfString.hxx", 
        33
      ], 
      "key": "NCollection_UtfString<char>"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_UtfString<char16_t>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_UtfString<char16_t>::NCollection_UtfString()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char16_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::NCollection_UtfString(NCollection_UtfString<char16_t>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_UtfString<char16_t>", 
              "name": "theCopy", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char16_t>", 
            "ptr": true
          }, 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::NCollection_UtfString(char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "char", 
              "name": "theCopyUtf8", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char16_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::NCollection_UtfString(Standard_Utf16Char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Utf16Char", 
              "name": "theCopyUtf16", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char16_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::NCollection_UtfString(Standard_Utf32Char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Utf32Char", 
              "name": "theCopyUtf32", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char16_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::NCollection_UtfString(Standard_WideChar, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_WideChar", 
              "name": "theCopyUtfWide", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char16_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::Iterator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_UtfIterator<char16_t>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::Size()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "Size", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::Length()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "Length", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::GetChar(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theCharIndex", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "GetChar", 
          "return": {
            "type": "Standard_Utf32Char"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::GetCharBuffer(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theCharIndex", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "GetCharBuffer", 
          "return": {
            "type": "?unknown?", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::FromLocale(char, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "char", 
              "name": "theString", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "FromLocale", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::IsEqual(NCollection_UtfString<char16_t>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_UtfString<char16_t>", 
              "name": "theCompare", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "IsEqual", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::SubString(Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theStart", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theEnd", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "SubString", 
          "return": {
            "type": "NCollection_UtfString<char16_t>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::ToCString()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "ToCString", 
          "return": {
            "type": "?unknown?", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::ToUtf8()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "ToUtf8", 
          "return": {
            "type": "NCollection_UtfString<char>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::ToUtf16()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "ToUtf16", 
          "return": {
            "type": "NCollection_UtfString<char16_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::ToUtf32()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "ToUtf32", 
          "return": {
            "type": "NCollection_UtfString<char32_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::ToUtfWide()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "ToUtfWide", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::ToLocale(char, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "char", 
              "name": "theBuffer", 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theSizeBytes", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "ToLocale", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::IsEmpty()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "IsEmpty", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char16_t>::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char16_t>", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_UtfString.hxx", 
        33
      ], 
      "key": "NCollection_UtfString<char16_t>"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_UtfString<char32_t>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_UtfString<char32_t>::NCollection_UtfString()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char32_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::NCollection_UtfString(NCollection_UtfString<char32_t>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_UtfString<char32_t>", 
              "name": "theCopy", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char32_t>", 
            "ptr": true
          }, 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::NCollection_UtfString(char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "char", 
              "name": "theCopyUtf8", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char32_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::NCollection_UtfString(Standard_Utf16Char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Utf16Char", 
              "name": "theCopyUtf16", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char32_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::NCollection_UtfString(Standard_Utf32Char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Utf32Char", 
              "name": "theCopyUtf32", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char32_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::NCollection_UtfString(Standard_WideChar, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_WideChar", 
              "name": "theCopyUtfWide", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<char32_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::Iterator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_UtfIterator<char32_t>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::Size()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "Size", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::Length()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "Length", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::GetChar(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theCharIndex", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "GetChar", 
          "return": {
            "type": "Standard_Utf32Char"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::GetCharBuffer(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theCharIndex", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "GetCharBuffer", 
          "return": {
            "type": "?unknown?", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::FromLocale(char, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "char", 
              "name": "theString", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "FromLocale", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::IsEqual(NCollection_UtfString<char32_t>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_UtfString<char32_t>", 
              "name": "theCompare", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "IsEqual", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::SubString(Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theStart", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theEnd", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "SubString", 
          "return": {
            "type": "NCollection_UtfString<char32_t>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::ToCString()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "ToCString", 
          "return": {
            "type": "?unknown?", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::ToUtf8()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "ToUtf8", 
          "return": {
            "type": "NCollection_UtfString<char>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::ToUtf16()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "ToUtf16", 
          "return": {
            "type": "NCollection_UtfString<char16_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::ToUtf32()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "ToUtf32", 
          "return": {
            "type": "NCollection_UtfString<char32_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::ToUtfWide()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "ToUtfWide", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::ToLocale(char, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "char", 
              "name": "theBuffer", 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theSizeBytes", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "ToLocale", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::IsEmpty()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "IsEmpty", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<char32_t>::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<char32_t>", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_UtfString.hxx", 
        33
      ], 
      "key": "NCollection_UtfString<char32_t>"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_UtfString<wchar_t>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_UtfString<wchar_t>::NCollection_UtfString()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::NCollection_UtfString(NCollection_UtfString<wchar_t>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_UtfString<wchar_t>", 
              "name": "theCopy", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>", 
            "ptr": true
          }, 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::NCollection_UtfString(char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "char", 
              "name": "theCopyUtf8", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::NCollection_UtfString(Standard_Utf16Char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Utf16Char", 
              "name": "theCopyUtf16", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::NCollection_UtfString(Standard_Utf32Char, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Utf32Char", 
              "name": "theCopyUtf32", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::NCollection_UtfString(Standard_WideChar, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_WideChar", 
              "name": "theCopyUtfWide", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "NCollection_UtfString", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::Iterator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_UtfIterator<wchar_t>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::Size()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "Size", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::Length()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "Length", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::GetChar(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theCharIndex", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "GetChar", 
          "return": {
            "type": "Standard_Utf32Char"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::GetCharBuffer(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theCharIndex", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "GetCharBuffer", 
          "return": {
            "type": "wchar_t", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::FromLocale(char, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "char", 
              "name": "theString", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theLength", 
              "default": "-1", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "FromLocale", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::IsEqual(NCollection_UtfString<wchar_t>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_UtfString<wchar_t>", 
              "name": "theCompare", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "IsEqual", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::SubString(Standard_Integer, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theStart", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theEnd", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "SubString", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::ToCString()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "ToCString", 
          "return": {
            "type": "wchar_t", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::ToUtf8()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "ToUtf8", 
          "return": {
            "type": "NCollection_UtfString<char>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::ToUtf16()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "ToUtf16", 
          "return": {
            "type": "NCollection_UtfString<char16_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::ToUtf32()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "ToUtf32", 
          "return": {
            "type": "NCollection_UtfString<char32_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::ToUtfWide()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "ToUtfWide", 
          "return": {
            "type": "NCollection_UtfString<wchar_t>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::ToLocale(char, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "char", 
              "name": "theBuffer", 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theSizeBytes", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "ToLocale", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::IsEmpty()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "IsEmpty", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfString<wchar_t>::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_UtfString<wchar_t>", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_UtfString.hxx", 
        33
      ], 
      "key": "NCollection_UtfString<wchar_t>"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_UtfStringTool", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_UtfStringTool::NCollection_UtfStringTool()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_UtfStringTool", 
          "name": "NCollection_UtfStringTool", 
          "return": {
            "type": "NCollection_UtfStringTool", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfStringTool::NCollection_UtfStringTool(NCollection_UtfStringTool)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_UtfStringTool", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_UtfStringTool", 
          "name": "NCollection_UtfStringTool", 
          "return": {
            "type": "NCollection_UtfStringTool", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_UtfStringTool::FromLocale(char)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "char", 
              "name": "theString", 
              "const": true, 
              "ptr": true
            }
          ], 
          "parent": "NCollection_UtfStringTool", 
          "name": "FromLocale", 
          "return": {
            "type": "wchar_t", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_UtfStringTool::ToLocale(wchar_t, char, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "wchar_t", 
              "name": "theWideString", 
              "const": true, 
              "ptr": true
            }, 
            {
              "type": "char", 
              "name": "theBuffer", 
              "ptr": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theSizeBytes", 
              "const": true
            }
          ], 
          "parent": "NCollection_UtfStringTool", 
          "name": "ToLocale", 
          "return": {
            "type": "bool"
          }, 
          "static": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_UtfString.lxx", 
        279
      ], 
      "key": "NCollection_UtfStringTool"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_SparseArrayBase", 
      "abstract": true, 
      "declarations": [
        {
          "key": "NCollection_SparseArrayBase::Iterator(NCollection_SparseArrayBase::Iterator)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_SparseArrayBase::Iterator", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_SparseArrayBase", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::Block(Standard_Address, Standard_Size, Standard_Size)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Address", 
              "name": "theAddr", 
              "const": true
            }, 
            {
              "type": "Standard_Size", 
              "name": "theNbItems", 
              "const": true
            }, 
            {
              "type": "Standard_Size", 
              "name": "theItemSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Block", 
          "return": {
            "type": "NCollection_SparseArrayBase", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::Block(NCollection_SparseArrayBase::Block)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_SparseArrayBase::Block", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Block", 
          "return": {
            "type": "NCollection_SparseArrayBase", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::Size()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Size", 
          "return": {
            "type": "Standard_Size"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::HasValue(Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "theIndex", 
              "const": true
            }
          ], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "HasValue", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::UnsetValue(Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "theIndex", 
              "const": true
            }
          ], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "UnsetValue", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::Restart()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Restart", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::More()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "More", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::Next()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Next", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::Index()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Index", 
          "return": {
            "type": "Standard_Size"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::BitsPerCell()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "BitsPerCell", 
          "return": {
            "type": "Standard_Size"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::Size(Standard_Size, Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "theNbItems", 
              "const": true
            }, 
            {
              "type": "Standard_Size", 
              "name": "theItemSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Size", 
          "return": {
            "type": "Standard_Size"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::ToArray(Standard_Address, Standard_Size, Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Address", 
              "name": "theAddress", 
              "const": true
            }, 
            {
              "type": "Standard_Size", 
              "name": "arg1", 
              "const": true
            }, 
            {
              "type": "Standard_Size", 
              "name": "arg2", 
              "const": true
            }
          ], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "ToArray", 
          "return": {
            "type": "char", 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::Set(Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "i"
            }
          ], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Set", 
          "return": {
            "type": "NCollection_SparseArrayBase::Block::Cell"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::IsSet(Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "i"
            }
          ], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "IsSet", 
          "return": {
            "type": "NCollection_SparseArrayBase::Block::Cell"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SparseArrayBase::Unset(Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "i"
            }
          ], 
          "parent": "NCollection_SparseArrayBase", 
          "name": "Unset", 
          "return": {
            "type": "NCollection_SparseArrayBase::Block::Cell"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_SparseArrayBase.hxx", 
        30
      ], 
      "key": "NCollection_SparseArrayBase"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_BaseAllocator", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_BaseAllocator::Allocate(size_t)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "size_t", 
              "name": "size", 
              "const": true
            }
          ], 
          "parent": "NCollection_BaseAllocator", 
          "name": "Allocate", 
          "return": {
            "type": "void", 
            "ptr": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_BaseAllocator::Free(void)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "void", 
              "name": "anAddress", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_BaseAllocator", 
          "name": "Free", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_BaseAllocator::CommonBaseAllocator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseAllocator", 
          "name": "CommonBaseAllocator", 
          "return": {
            "type": "opencascade::handle<NCollection_BaseAllocator>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseAllocator::StandardCallBack(Standard_Boolean, Standard_Address, Standard_Size, Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Boolean", 
              "name": "theIsAlloc", 
              "const": true
            }, 
            {
              "type": "Standard_Address", 
              "name": "theStorage", 
              "const": true
            }, 
            {
              "type": "Standard_Size", 
              "name": "theRoundSize", 
              "const": true
            }, 
            {
              "type": "Standard_Size", 
              "name": "theSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_BaseAllocator", 
          "name": "StandardCallBack", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseAllocator::PrintMemUsageStatistics()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseAllocator", 
          "name": "PrintMemUsageStatistics", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseAllocator::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseAllocator", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseAllocator::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseAllocator", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseAllocator::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseAllocator", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "MMgt_TShared"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/NCollection_BaseAllocator.hxx", 
        47
      ], 
      "key": "NCollection_BaseAllocator"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_BaseVector", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_BaseVector::NCollection_BaseVector(NCollection_BaseVector)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_BaseVector", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseVector", 
          "name": "NCollection_BaseVector", 
          "return": {
            "type": "NCollection_BaseVector", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_BaseVector::MemBlock()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_BaseVector", 
          "name": "MemBlock", 
          "return": {
            "type": "NCollection_BaseVector", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseVector::MemBlock(NCollection_BaseVector::MemBlock)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_BaseVector::MemBlock", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseVector", 
          "name": "MemBlock", 
          "return": {
            "type": "NCollection_BaseVector", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_BaseVector::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseVector", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseVector::SetIncrement(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "aIncrement", 
              "const": true
            }
          ], 
          "parent": "NCollection_BaseVector", 
          "name": "SetIncrement", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseVector::Allocator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseVector", 
          "name": "Allocator", 
          "return": {
            "type": "opencascade::handle<NCollection_BaseAllocator>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseVector::findV(Standard_Integer, size_t)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theIndex", 
              "const": true
            }, 
            {
              "type": "size_t", 
              "name": "theItemSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_BaseVector", 
          "name": "findV", 
          "return": {
            "type": "void", 
            "ptr": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_BaseVector.hxx", 
        34
      ], 
      "key": "NCollection_BaseVector"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_SeqNode", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_SeqNode::NCollection_SeqNode()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_SeqNode", 
          "name": "NCollection_SeqNode", 
          "return": {
            "type": "NCollection_SeqNode", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SeqNode::NCollection_SeqNode(NCollection_SeqNode)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_SeqNode", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_SeqNode", 
          "name": "NCollection_SeqNode", 
          "return": {
            "type": "NCollection_SeqNode", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_SeqNode::Next()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_SeqNode", 
          "name": "Next", 
          "return": {
            "type": "NCollection_SeqNode", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SeqNode::Previous()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_SeqNode", 
          "name": "Previous", 
          "return": {
            "type": "NCollection_SeqNode", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SeqNode::SetNext(NCollection_SeqNode)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_SeqNode", 
              "name": "theNext", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_SeqNode", 
          "name": "SetNext", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_SeqNode::SetPrevious(NCollection_SeqNode)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_SeqNode", 
              "name": "thePrev", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_SeqNode", 
          "name": "SetPrevious", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_BaseSequence.hxx", 
        25
      ], 
      "key": "NCollection_SeqNode"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_HeapAllocator", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_HeapAllocator::Allocate(Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "theSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_HeapAllocator", 
          "name": "Allocate", 
          "return": {
            "type": "void", 
            "ptr": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_HeapAllocator::Free(void)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "void", 
              "name": "anAddress", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_HeapAllocator", 
          "name": "Free", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_HeapAllocator::GlobalHeapAllocator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_HeapAllocator", 
          "name": "GlobalHeapAllocator", 
          "return": {
            "type": "opencascade::handle<NCollection_HeapAllocator>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_HeapAllocator::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_HeapAllocator", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_HeapAllocator::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_HeapAllocator", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_HeapAllocator::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_HeapAllocator", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_BaseAllocator"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/NCollection_HeapAllocator.hxx", 
        26
      ], 
      "key": "NCollection_HeapAllocator"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_ListNode", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_ListNode::NCollection_ListNode(NCollection_ListNode)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_ListNode", 
              "name": "theNext", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_ListNode", 
          "name": "NCollection_ListNode", 
          "return": {
            "type": "NCollection_ListNode", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_ListNode::Next()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_ListNode", 
          "name": "Next", 
          "return": {
            "type": "NCollection_ListNode", 
            "ref": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_ListNode::Next()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_ListNode", 
          "name": "Next", 
          "return": {
            "type": "NCollection_ListNode", 
            "ptr": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_ListNode.hxx", 
        26
      ], 
      "key": "NCollection_ListNode"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_BaseList", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_BaseList::Iterator()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_BaseList", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_BaseList", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseList::Iterator(NCollection_BaseList)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_BaseList", 
              "name": "theList", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseList", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_BaseList", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseList::Iterator(NCollection_BaseList::Iterator)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_BaseList::Iterator", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseList", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_BaseList", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_BaseList::NCollection_BaseList(NCollection_BaseList)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_BaseList", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseList", 
          "name": "NCollection_BaseList", 
          "return": {
            "type": "NCollection_BaseList", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_BaseList::Init(NCollection_BaseList)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_BaseList", 
              "name": "theList", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseList", 
          "name": "Init", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseList::Initialize(NCollection_BaseList)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_BaseList", 
              "name": "theList", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseList", 
          "name": "Initialize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseList::More()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseList", 
          "name": "More", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseList::IsEqual(NCollection_BaseList::Iterator)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_BaseList::Iterator", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseList", 
          "name": "IsEqual", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseList::Extent()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseList", 
          "name": "Extent", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseList::IsEmpty()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseList", 
          "name": "IsEmpty", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseList::Allocator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseList", 
          "name": "Allocator", 
          "return": {
            "type": "opencascade::handle<NCollection_BaseAllocator>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_BaseList.hxx", 
        36
      ], 
      "key": "NCollection_BaseList"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_BaseMap", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_BaseMap::Iterator(NCollection_BaseMap::Iterator)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_BaseMap::Iterator", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseMap", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_BaseMap", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_BaseMap::NCollection_BaseMap(NCollection_BaseMap)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_BaseMap", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseMap", 
          "name": "NCollection_BaseMap", 
          "return": {
            "type": "NCollection_BaseMap", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_BaseMap::Initialize(NCollection_BaseMap)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_BaseMap", 
              "name": "theMap", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseMap", 
          "name": "Initialize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseMap::Reset()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseMap", 
          "name": "Reset", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseMap::IsEqual(NCollection_BaseMap::Iterator)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_BaseMap::Iterator", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseMap", 
          "name": "IsEqual", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseMap::NbBuckets()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseMap", 
          "name": "NbBuckets", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseMap::Extent()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseMap", 
          "name": "Extent", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseMap::IsEmpty()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseMap", 
          "name": "IsEmpty", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseMap::Statistics(Standard_OStream)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_OStream", 
              "name": "S", 
              "ref": true
            }
          ], 
          "parent": "NCollection_BaseMap", 
          "name": "Statistics", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_BaseMap::Allocator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_BaseMap", 
          "name": "Allocator", 
          "return": {
            "type": "opencascade::handle<NCollection_BaseAllocator>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_BaseMap.hxx", 
        37
      ], 
      "key": "NCollection_BaseMap"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_TListNode<NCollection_AccAllocator::Block>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_TListNode<NCollection_AccAllocator::Block>::NCollection_TListNode(NCollection_AccAllocator::Block, NCollection_ListNode)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Block", 
              "name": "theItem", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "NCollection_ListNode", 
              "name": "theNext", 
              "default": "__null", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_TListNode<NCollection_AccAllocator::Block>", 
          "name": "NCollection_TListNode", 
          "return": {
            "type": "NCollection_TListNode<NCollection_AccAllocator::Block>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_TListNode<NCollection_AccAllocator::Block>::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_TListNode<NCollection_AccAllocator::Block>", 
          "name": "Value", 
          "return": {
            "type": "NCollection_AccAllocator::Block", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_TListNode<NCollection_AccAllocator::Block>::ChangeValue()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_TListNode<NCollection_AccAllocator::Block>", 
          "name": "ChangeValue", 
          "return": {
            "type": "NCollection_AccAllocator::Block", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_TListNode<NCollection_AccAllocator::Block>::delNode(NCollection_ListNode, opencascade::handle<NCollection_BaseAllocator>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_ListNode", 
              "name": "theNode", 
              "ptr": true
            }, 
            {
              "type": "opencascade::handle<NCollection_BaseAllocator>", 
              "name": "theAl", 
              "ref": true
            }
          ], 
          "parent": "NCollection_TListNode<NCollection_AccAllocator::Block>", 
          "name": "delNode", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_ListNode"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/NCollection_TListNode.hxx", 
        25
      ], 
      "key": "NCollection_TListNode<NCollection_AccAllocator::Block>"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::DataMapNode(NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_ListNode)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "NCollection_AccAllocator::Block", 
              "name": "theItem", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "NCollection_ListNode", 
              "name": "theNext", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "DataMapNode", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Iterator()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Iterator(NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
              "name": "theMap", 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Iterator(NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Iterator)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Iterator", 
              "name": "arg0", 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Iterator", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::NCollection_DataMap(Standard_Integer, opencascade::handle<NCollection_BaseAllocator>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "NbBuckets", 
              "default": "1", 
              "const": true
            }, 
            {
              "type": "opencascade::handle<NCollection_BaseAllocator>", 
              "name": "theAllocator", 
              "default": "0L", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "NCollection_DataMap", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::NCollection_DataMap(NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
              "name": "theOther", 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "NCollection_DataMap", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
            "ptr": true
          }, 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Key()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Key", 
          "return": {
            "type": "NCollection_AccAllocator::Key", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::delNode(NCollection_ListNode, opencascade::handle<NCollection_BaseAllocator>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_ListNode", 
              "name": "theNode", 
              "ptr": true
            }, 
            {
              "type": "opencascade::handle<NCollection_BaseAllocator>", 
              "name": "theAl", 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "delNode", 
          "return": {
            "type": "void"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::More()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "More", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Next()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Next", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Value()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Value", 
          "return": {
            "type": "NCollection_AccAllocator::Block", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::ChangeValue()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "ChangeValue", 
          "return": {
            "type": "NCollection_AccAllocator::Block", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Key()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Key", 
          "return": {
            "type": "NCollection_AccAllocator::Key", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::begin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "begin", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::iterator"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::end()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "end", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::iterator"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::cbegin()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "cbegin", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::const_iterator"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::cend()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "cend", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::const_iterator"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Exchange(NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
              "name": "theOther", 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Exchange", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Assign(NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
              "name": "theOther", 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Assign", 
          "return": {
            "type": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::ReSize(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "ReSize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Bind(NCollection_AccAllocator::Key, NCollection_AccAllocator::Block)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "NCollection_AccAllocator::Block", 
              "name": "theItem", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Bind", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Bound(NCollection_AccAllocator::Key, NCollection_AccAllocator::Block)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "NCollection_AccAllocator::Block", 
              "name": "theItem", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Bound", 
          "return": {
            "type": "NCollection_AccAllocator::Block", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::IsBound(NCollection_AccAllocator::Key)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "IsBound", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::UnBind(NCollection_AccAllocator::Key)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "UnBind", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Seek(NCollection_AccAllocator::Key)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Seek", 
          "return": {
            "type": "NCollection_AccAllocator::Block", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Find(NCollection_AccAllocator::Key)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Find", 
          "return": {
            "type": "NCollection_AccAllocator::Block", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Find(NCollection_AccAllocator::Key, NCollection_AccAllocator::Block)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "NCollection_AccAllocator::Block", 
              "name": "theValue", 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Find", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::ChangeSeek(NCollection_AccAllocator::Key)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "ChangeSeek", 
          "return": {
            "type": "NCollection_AccAllocator::Block", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::ChangeFind(NCollection_AccAllocator::Key)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "ChangeFind", 
          "return": {
            "type": "NCollection_AccAllocator::Block", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Clear(Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Boolean", 
              "name": "doReleaseMemory", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Clear(opencascade::handle<NCollection_BaseAllocator>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<NCollection_BaseAllocator>", 
              "name": "theAllocator", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>::Size()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>", 
          "name": "Size", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_BaseMap"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/NCollection_DataMap.hxx", 
        48
      ], 
      "key": "NCollection_DataMap<NCollection_AccAllocator::Key, NCollection_AccAllocator::Block, NCollection_AccAllocator::Hasher>"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_AlignedAllocator", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_AlignedAllocator::NCollection_AlignedAllocator(size_t)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "size_t", 
              "name": "theAlignment", 
              "const": true
            }
          ], 
          "parent": "NCollection_AlignedAllocator", 
          "name": "NCollection_AlignedAllocator", 
          "return": {
            "type": "NCollection_AlignedAllocator", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AlignedAllocator::Allocate(size_t)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "size_t", 
              "name": "theSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_AlignedAllocator", 
          "name": "Allocate", 
          "return": {
            "type": "void", 
            "ptr": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_AlignedAllocator::Free(void)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "void", 
              "name": "thePtr", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_AlignedAllocator", 
          "name": "Free", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_AlignedAllocator::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_AlignedAllocator", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_AlignedAllocator::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_AlignedAllocator", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_AlignedAllocator::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_AlignedAllocator", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_BaseAllocator"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/NCollection_AlignedAllocator.hxx", 
        23
      ], 
      "key": "NCollection_AlignedAllocator"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_Buffer", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_Buffer::NCollection_Buffer(opencascade::handle<NCollection_BaseAllocator>, Standard_Size, Standard_Byte)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<NCollection_BaseAllocator>", 
              "name": "theAlloc", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Size", 
              "name": "theSize", 
              "default": "0", 
              "const": true
            }, 
            {
              "type": "Standard_Byte", 
              "name": "theData", 
              "default": "__null", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_Buffer", 
          "name": "NCollection_Buffer", 
          "return": {
            "type": "NCollection_Buffer", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::NCollection_Buffer(NCollection_Buffer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Buffer", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Buffer", 
          "name": "NCollection_Buffer", 
          "return": {
            "type": "NCollection_Buffer", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_Buffer::Data()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Buffer", 
          "name": "Data", 
          "return": {
            "type": "Standard_Byte", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::ChangeData()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Buffer", 
          "name": "ChangeData", 
          "return": {
            "type": "Standard_Byte", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::IsEmpty()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Buffer", 
          "name": "IsEmpty", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::Size()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Buffer", 
          "name": "Size", 
          "return": {
            "type": "Standard_Size"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::Allocator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Buffer", 
          "name": "Allocator", 
          "return": {
            "type": "opencascade::handle<NCollection_BaseAllocator>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::SetAllocator(opencascade::handle<NCollection_BaseAllocator>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<NCollection_BaseAllocator>", 
              "name": "theAlloc", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Buffer", 
          "name": "SetAllocator", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::Allocate(Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "theSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_Buffer", 
          "name": "Allocate", 
          "return": {
            "type": "bool"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::Free()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Buffer", 
          "name": "Free", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Buffer", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Buffer", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Buffer::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Buffer", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "Standard_Transient"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/NCollection_Buffer.hxx", 
        23
      ], 
      "key": "NCollection_Buffer"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_IncAllocator", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_IncAllocator::NCollection_IncAllocator(size_t)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "size_t", 
              "name": "theBlockSize", 
              "default": "NCollection_IncAllocator::DefaultBlockSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_IncAllocator", 
          "name": "NCollection_IncAllocator", 
          "return": {
            "type": "NCollection_IncAllocator", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_IncAllocator::IBlock()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_IncAllocator", 
          "name": "IBlock", 
          "return": {
            "type": "NCollection_IncAllocator", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_IncAllocator::IBlock(NCollection_IncAllocator::IBlock)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_IncAllocator::IBlock", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_IncAllocator", 
          "name": "IBlock", 
          "return": {
            "type": "NCollection_IncAllocator", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_IncAllocator::Allocate(size_t)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "size_t", 
              "name": "size", 
              "const": true
            }
          ], 
          "parent": "NCollection_IncAllocator", 
          "name": "Allocate", 
          "return": {
            "type": "void", 
            "ptr": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_IncAllocator::Free(void)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "void", 
              "name": "anAddress", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_IncAllocator", 
          "name": "Free", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_IncAllocator::GetMemSize()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_IncAllocator", 
          "name": "GetMemSize", 
          "return": {
            "type": "size_t"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_IncAllocator::Reallocate(void, size_t, size_t)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "void", 
              "name": "anAddress", 
              "ptr": true
            }, 
            {
              "type": "size_t", 
              "name": "oldSize", 
              "const": true
            }, 
            {
              "type": "size_t", 
              "name": "newSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_IncAllocator", 
          "name": "Reallocate", 
          "return": {
            "type": "void", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_IncAllocator::Reset(Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Boolean", 
              "name": "doReleaseMem", 
              "default": "true", 
              "const": true
            }
          ], 
          "parent": "NCollection_IncAllocator", 
          "name": "Reset", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_IncAllocator::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_IncAllocator", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_IncAllocator::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_IncAllocator", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_IncAllocator::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_IncAllocator", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_IncAllocator::allocateInBlock(size_t)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "size_t", 
              "name": "cSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_IncAllocator", 
          "name": "allocateInBlock", 
          "return": {
            "type": "NCollection_IncAllocator::aligned_t", 
            "ptr": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_BaseAllocator"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/NCollection_IncAllocator.hxx", 
        36
      ], 
      "key": "NCollection_IncAllocator"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_AccAllocator", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_AccAllocator::NCollection_AccAllocator(size_t)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "size_t", 
              "name": "theBlockSize", 
              "default": "NCollection_AccAllocator::DefaultBlockSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "NCollection_AccAllocator", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::AlignedSize()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_AccAllocator", 
          "name": "AlignedSize", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::AlignedSize(Standard_Size)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "theValue", 
              "const": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "AlignedSize", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::AlignedSize(NCollection_AccAllocator::AlignedSize)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::AlignedSize", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "AlignedSize", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_AccAllocator::AlignedPtr()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_AccAllocator", 
          "name": "AlignedPtr", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::AlignedPtr(Standard_Address)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Address", 
              "name": "theValue", 
              "const": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "AlignedPtr", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::AlignedPtr(NCollection_AccAllocator::AlignedPtr)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::AlignedPtr", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "AlignedPtr", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_AccAllocator::Key()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_AccAllocator", 
          "name": "Key", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::Key(NCollection_AccAllocator::Key)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "Key", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_AccAllocator::Hasher()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_AccAllocator", 
          "name": "Hasher", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::Hasher(NCollection_AccAllocator::Hasher)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Hasher", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "Hasher", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_AccAllocator::Block(Standard_Address, Standard_Size, NCollection_AccAllocator::Block)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Standard_Address", 
              "name": "theAddress", 
              "const": true
            }, 
            {
              "type": "Standard_Size", 
              "name": "theSize", 
              "const": true
            }, 
            {
              "type": "NCollection_AccAllocator::Block", 
              "name": "thePrevBlock", 
              "default": "0L", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "Block", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::Block(NCollection_AccAllocator::Block)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Block", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "Block", 
          "return": {
            "type": "NCollection_AccAllocator", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_AccAllocator::Allocate(size_t)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "size_t", 
              "name": "theSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "Allocate", 
          "return": {
            "type": "void", 
            "ptr": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_AccAllocator::Free(void)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "void", 
              "name": "theAddress", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "Free", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_AccAllocator::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_AccAllocator", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_AccAllocator", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_AccAllocator", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_AccAllocator::HashCode(NCollection_AccAllocator::Key, Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theKey", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "theUpper", 
              "const": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "HashCode", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::IsEqual(NCollection_AccAllocator::Key, NCollection_AccAllocator::Key)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theOne", 
              "const": true
            }, 
            {
              "type": "NCollection_AccAllocator::Key", 
              "name": "theTwo", 
              "const": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "IsEqual", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::SetFreeSize(Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "theSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "SetFreeSize", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::FreeSize()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_AccAllocator", 
          "name": "FreeSize", 
          "return": {
            "type": "Standard_Size"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::Allocate(NCollection_AccAllocator::AlignedSize)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_AccAllocator::AlignedSize", 
              "name": "theSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_AccAllocator", 
          "name": "Allocate", 
          "return": {
            "type": "NCollection_AccAllocator::AlignedPtr"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::Free()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_AccAllocator", 
          "name": "Free", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_AccAllocator::IsEmpty()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_AccAllocator", 
          "name": "IsEmpty", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_BaseAllocator"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/NCollection_AccAllocator.hxx", 
        42
      ], 
      "key": "NCollection_AccAllocator"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_StdAllocator<void>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_StdAllocator<void>::NCollection_StdAllocator()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_StdAllocator<void>", 
          "name": "NCollection_StdAllocator", 
          "return": {
            "type": "NCollection_StdAllocator<void>", 
            "ptr": true
          }
        }, 
        {
          "key": "NCollection_StdAllocator<void>::NCollection_StdAllocator(opencascade::handle<NCollection_BaseAllocator>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<NCollection_BaseAllocator>", 
              "name": "theAlloc", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_StdAllocator<void>", 
          "name": "NCollection_StdAllocator", 
          "return": {
            "type": "NCollection_StdAllocator<void>", 
            "ptr": true
          }
        }, 
        {
          "key": "NCollection_StdAllocator<void>::NCollection_StdAllocator(NCollection_StdAllocator<void>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_StdAllocator<void>", 
              "name": "X", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_StdAllocator<void>", 
          "name": "NCollection_StdAllocator", 
          "return": {
            "type": "NCollection_StdAllocator<void>", 
            "ptr": true
          }, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_StdAllocator<void>::Allocator()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_StdAllocator<void>", 
          "name": "Allocator", 
          "return": {
            "type": "opencascade::handle<NCollection_BaseAllocator>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_StdAllocator.hxx", 
        128
      ], 
      "key": "NCollection_StdAllocator<void>"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_WinHeapAllocator", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_WinHeapAllocator::NCollection_WinHeapAllocator(size_t)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "size_t", 
              "name": "theInitSizeBytes", 
              "default": "524288", 
              "const": true
            }
          ], 
          "parent": "NCollection_WinHeapAllocator", 
          "name": "NCollection_WinHeapAllocator", 
          "return": {
            "type": "NCollection_WinHeapAllocator", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_WinHeapAllocator::Allocate(Standard_Size)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Size", 
              "name": "theSize", 
              "const": true
            }
          ], 
          "parent": "NCollection_WinHeapAllocator", 
          "name": "Allocate", 
          "return": {
            "type": "void", 
            "ptr": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_WinHeapAllocator::Free(void)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "void", 
              "name": "theAddress", 
              "ptr": true
            }
          ], 
          "parent": "NCollection_WinHeapAllocator", 
          "name": "Free", 
          "return": {
            "type": "void"
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }, 
        {
          "key": "NCollection_WinHeapAllocator::get_type_name()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_WinHeapAllocator", 
          "name": "get_type_name", 
          "return": {
            "type": "char", 
            "const": true, 
            "ptr": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_WinHeapAllocator::get_type_descriptor()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_WinHeapAllocator", 
          "name": "get_type_descriptor", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_WinHeapAllocator::DynamicType()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_WinHeapAllocator", 
          "name": "DynamicType", 
          "return": {
            "type": "opencascade::handle<Standard_Type>", 
            "const": true, 
            "ref": true
          }, 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "NCollection_BaseAllocator"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/NCollection_WinHeapAllocator.hxx", 
        34
      ], 
      "key": "NCollection_WinHeapAllocator"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_Vec4<float>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_Vec4<float>::NCollection_Vec4()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<float>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::NCollection_Vec4(float)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "float", 
              "name": "theValue", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<float>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::NCollection_Vec4(float, float, float, float)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "float", 
              "name": "theX", 
              "const": true
            }, 
            {
              "type": "float", 
              "name": "theY", 
              "const": true
            }, 
            {
              "type": "float", 
              "name": "theZ", 
              "const": true
            }, 
            {
              "type": "float", 
              "name": "theW", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<float>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::NCollection_Vec4(NCollection_Vec2<float>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec2<float>", 
              "name": "theVec2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<float>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::NCollection_Vec4(NCollection_Vec3<float>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec3<float>", 
              "name": "theVec3", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<float>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::NCollection_Vec4(NCollection_Vec3<float>, float)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec3<float>", 
              "name": "theVec3", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "float", 
              "name": "theAlpha", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<float>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::NCollection_Vec4(NCollection_Vec4<float>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec4<float>", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<float>", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_Vec4<float>::Length()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "Length", 
          "return": {
            "type": "int"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::x()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "x", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::r()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "r", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::y()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "y", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::g()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "g", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::z()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "z", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::b()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "b", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::w()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "w", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::a()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "a", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xy", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::yx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "yx", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xz", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::zx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "zx", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xw", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::wx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "wx", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::yz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "yz", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::zy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "zy", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::yw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "yw", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::wy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "wy", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::zw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "zw", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::wz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "wz", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xyz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xyz", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xzy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xzy", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::yxz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "yxz", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::yzx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "yzx", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::zyx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "zyx", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::zxy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "zxy", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xyw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xyw", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xwy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xwy", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::yxw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "yxw", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::ywx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "ywx", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::wyx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "wyx", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::wxy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "wxy", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xzw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xzw", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xwz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xwz", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::zxw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "zxw", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::zwx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "zwx", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::wzx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "wzx", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::wxz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "wxz", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::yzw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "yzw", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::ywz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "ywz", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::zyw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "zyw", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::zwy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "zwy", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::wzy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "wzy", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::wyz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "wyz", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::rgb()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "rgb", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::rbg()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "rbg", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::grb()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "grb", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::gbr()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "gbr", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::bgr()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "bgr", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::brg()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "brg", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::x()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "x", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::r()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "r", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::y()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "y", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::g()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "g", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::z()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "z", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::b()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "b", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::w()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "w", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::a()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "a", 
          "return": {
            "type": "float", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xy", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::yz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "yz", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::zw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "zw", 
          "return": {
            "type": "NCollection_Vec2<float>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::xyz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "xyz", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::yzw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "yzw", 
          "return": {
            "type": "NCollection_Vec3<float>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::GetData()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "GetData", 
          "return": {
            "type": "float", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::ChangeData()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "ChangeData", 
          "return": {
            "type": "float", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::Multiply(float)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "float", 
              "name": "theFactor", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "Multiply", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::Multiplied(float)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "float", 
              "name": "theFactor", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "Multiplied", 
          "return": {
            "type": "NCollection_Vec4<float>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::cwiseMin(NCollection_Vec4<float>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec4<float>", 
              "name": "theVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "cwiseMin", 
          "return": {
            "type": "NCollection_Vec4<float>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::cwiseMax(NCollection_Vec4<float>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec4<float>", 
              "name": "theVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "cwiseMax", 
          "return": {
            "type": "NCollection_Vec4<float>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::cwiseAbs()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "cwiseAbs", 
          "return": {
            "type": "NCollection_Vec4<float>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::maxComp()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "maxComp", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::minComp()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<float>", 
          "name": "minComp", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<float>::Dot(NCollection_Vec4<float>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec4<float>", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<float>", 
          "name": "Dot", 
          "return": {
            "type": "float"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_Vec4.hxx", 
        26
      ], 
      "key": "NCollection_Vec4<float>"
    }, 
    {
      "declType": "class", 
      "name": "NCollection_Vec4<double>", 
      "abstract": false, 
      "declarations": [
        {
          "key": "NCollection_Vec4<double>::NCollection_Vec4()", 
          "declType": "constructor", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<double>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::NCollection_Vec4(double)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "double", 
              "name": "theValue", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<double>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::NCollection_Vec4(double, double, double, double)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "double", 
              "name": "theX", 
              "const": true
            }, 
            {
              "type": "double", 
              "name": "theY", 
              "const": true
            }, 
            {
              "type": "double", 
              "name": "theZ", 
              "const": true
            }, 
            {
              "type": "double", 
              "name": "theW", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<double>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::NCollection_Vec4(NCollection_Vec2<double>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec2<double>", 
              "name": "theVec2", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<double>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::NCollection_Vec4(NCollection_Vec3<double>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec3<double>", 
              "name": "theVec3", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<double>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::NCollection_Vec4(NCollection_Vec3<double>, double)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec3<double>", 
              "name": "theVec3", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "double", 
              "name": "theAlpha", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<double>", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::NCollection_Vec4(NCollection_Vec4<double>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "NCollection_Vec4<double>", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "NCollection_Vec4", 
          "return": {
            "type": "NCollection_Vec4<double>", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "NCollection_Vec4<double>::Length()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "Length", 
          "return": {
            "type": "int"
          }, 
          "static": "1", 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::x()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "x", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::r()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "r", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::y()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "y", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::g()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "g", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::z()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "z", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::b()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "b", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::w()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "w", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::a()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "a", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xy", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::yx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "yx", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xz", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::zx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "zx", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xw", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::wx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "wx", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::yz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "yz", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::zy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "zy", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::yw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "yw", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::wy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "wy", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::zw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "zw", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::wz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "wz", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xyz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xyz", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xzy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xzy", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::yxz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "yxz", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::yzx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "yzx", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::zyx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "zyx", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::zxy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "zxy", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xyw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xyw", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xwy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xwy", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::yxw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "yxw", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::ywx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "ywx", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::wyx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "wyx", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::wxy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "wxy", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xzw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xzw", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xwz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xwz", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::zxw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "zxw", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::zwx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "zwx", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::wzx()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "wzx", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::wxz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "wxz", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::yzw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "yzw", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::ywz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "ywz", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::zyw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "zyw", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::zwy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "zwy", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::wzy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "wzy", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::wyz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "wyz", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::rgb()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "rgb", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::rbg()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "rbg", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::grb()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "grb", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::gbr()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "gbr", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::bgr()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "bgr", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::brg()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "brg", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "const": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::x()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "x", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::r()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "r", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::y()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "y", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::g()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "g", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::z()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "z", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::b()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "b", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::w()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "w", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::a()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "a", 
          "return": {
            "type": "double", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xy()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xy", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::yz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "yz", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::zw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "zw", 
          "return": {
            "type": "NCollection_Vec2<double>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::xyz()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "xyz", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::yzw()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "yzw", 
          "return": {
            "type": "NCollection_Vec3<double>", 
            "ref": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::GetData()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "GetData", 
          "return": {
            "type": "double", 
            "const": true, 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::ChangeData()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "ChangeData", 
          "return": {
            "type": "double", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::Multiply(double)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "double", 
              "name": "theFactor", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "Multiply", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::Multiplied(double)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "double", 
              "name": "theFactor", 
              "const": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "Multiplied", 
          "return": {
            "type": "NCollection_Vec4<double>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::cwiseMin(NCollection_Vec4<double>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec4<double>", 
              "name": "theVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "cwiseMin", 
          "return": {
            "type": "NCollection_Vec4<double>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::cwiseMax(NCollection_Vec4<double>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec4<double>", 
              "name": "theVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "cwiseMax", 
          "return": {
            "type": "NCollection_Vec4<double>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::cwiseAbs()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "cwiseAbs", 
          "return": {
            "type": "NCollection_Vec4<double>"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::maxComp()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "maxComp", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::minComp()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "NCollection_Vec4<double>", 
          "name": "minComp", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }, 
        {
          "key": "NCollection_Vec4<double>::Dot(NCollection_Vec4<double>)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "NCollection_Vec4<double>", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "NCollection_Vec4<double>", 
          "name": "Dot", 
          "return": {
            "type": "double"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/NCollection_Vec4.hxx", 
        26
      ], 
      "key": "NCollection_Vec4<double>"
    }, 
    {
      "type": "NCollection_UtfIterator<char>", 
      "declType": "typedef", 
      "name": "NCollection_Utf8Iter", 
      "key": "NCollection_Utf8Iter"
    }, 
    {
      "type": "NCollection_UtfIterator<char16_t>", 
      "declType": "typedef", 
      "name": "NCollection_Utf16Iter", 
      "key": "NCollection_Utf16Iter"
    }, 
    {
      "type": "NCollection_UtfIterator<char32_t>", 
      "declType": "typedef", 
      "name": "NCollection_Utf32Iter", 
      "key": "NCollection_Utf32Iter"
    }, 
    {
      "type": "NCollection_UtfIterator<wchar_t>", 
      "declType": "typedef", 
      "name": "NCollection_UtfWideIter", 
      "key": "NCollection_UtfWideIter"
    }, 
    {
      "type": "NCollection_UtfString<char>", 
      "declType": "typedef", 
      "name": "NCollection_Utf8String", 
      "key": "NCollection_Utf8String"
    }, 
    {
      "type": "NCollection_UtfString<char16_t>", 
      "declType": "typedef", 
      "name": "NCollection_Utf16String", 
      "key": "NCollection_Utf16String"
    }, 
    {
      "type": "NCollection_UtfString<char32_t>", 
      "declType": "typedef", 
      "name": "NCollection_Utf32String", 
      "key": "NCollection_Utf32String"
    }, 
    {
      "type": "NCollection_UtfString<wchar_t>", 
      "declType": "typedef", 
      "name": "NCollection_UtfWideString", 
      "key": "NCollection_UtfWideString"
    }, 
    {
      "type": "NCollection_Utf8String", 
      "declType": "typedef", 
      "name": "NCollection_String", 
      "key": "NCollection_String"
    }, 
    {
      "type": "opencascade::handle<NCollection_BaseAllocator>", 
      "declType": "typedef", 
      "name": "Handle_NCollection_BaseAllocator", 
      "key": "Handle_NCollection_BaseAllocator"
    }, 
    {
      "type": "void (*)( ::NCollection_SeqNode *,::opencascade::handle<NCollection_BaseAllocator> & )", 
      "declType": "typedef", 
      "name": "NCollection_DelSeqNode", 
      "key": "NCollection_DelSeqNode"
    }, 
    {
      "type": "opencascade::handle<NCollection_HeapAllocator>", 
      "declType": "typedef", 
      "name": "Handle_NCollection_HeapAllocator", 
      "key": "Handle_NCollection_HeapAllocator"
    }, 
    {
      "type": "void (*)( ::NCollection_ListNode *,::opencascade::handle<NCollection_BaseAllocator> & )", 
      "declType": "typedef", 
      "name": "NCollection_DelListNode", 
      "key": "NCollection_DelListNode"
    }, 
    {
      "type": "void (*)( ::NCollection_ListNode *,::opencascade::handle<NCollection_BaseAllocator> & )", 
      "declType": "typedef", 
      "name": "NCollection_DelMapNode", 
      "key": "NCollection_DelMapNode"
    }, 
    {
      "type": "opencascade::handle<NCollection_AlignedAllocator>", 
      "declType": "typedef", 
      "name": "Handle_NCollection_AlignedAllocator", 
      "key": "Handle_NCollection_AlignedAllocator"
    }, 
    {
      "type": "opencascade::handle<NCollection_Buffer>", 
      "declType": "typedef", 
      "name": "Handle_NCollection_Buffer", 
      "key": "Handle_NCollection_Buffer"
    }, 
    {
      "type": "opencascade::handle<NCollection_IncAllocator>", 
      "declType": "typedef", 
      "name": "Handle_NCollection_IncAllocator", 
      "key": "Handle_NCollection_IncAllocator"
    }, 
    {
      "type": "opencascade::handle<NCollection_AccAllocator>", 
      "declType": "typedef", 
      "name": "Handle_NCollection_AccAllocator", 
      "key": "Handle_NCollection_AccAllocator"
    }, 
    {
      "type": "opencascade::handle<NCollection_WinHeapAllocator>", 
      "declType": "typedef", 
      "name": "Handle_NCollection_WinHeapAllocator", 
      "key": "Handle_NCollection_WinHeapAllocator"
    }
  ], 
  "name": "NCollection"
}