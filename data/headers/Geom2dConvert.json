{
  "headers": [
    "Geom2dConvert_BSplineCurveKnotSplitting.hxx", 
    "Geom2dConvert_BSplineCurveToBezierCurve.hxx", 
    "Geom2dConvert_CompCurveToBSplineCurve.hxx", 
    "Geom2dConvert_ApproxCurve.hxx"
  ], 
  "declarations": [
    {
      "declType": "class", 
      "name": "Geom2dConvert_BSplineCurveKnotSplitting", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Geom2dConvert_BSplineCurveKnotSplitting::Geom2dConvert_BSplineCurveKnotSplitting(opencascade::handle<Geom2d_BSplineCurve>, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_BSplineCurve>", 
              "name": "BasisCurve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "ContinuityRange", 
              "const": true
            }
          ], 
          "parent": "Geom2dConvert_BSplineCurveKnotSplitting", 
          "name": "Geom2dConvert_BSplineCurveKnotSplitting", 
          "return": {
            "type": "Geom2dConvert_BSplineCurveKnotSplitting", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_BSplineCurveKnotSplitting::Geom2dConvert_BSplineCurveKnotSplitting(Geom2dConvert_BSplineCurveKnotSplitting)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Geom2dConvert_BSplineCurveKnotSplitting", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Geom2dConvert_BSplineCurveKnotSplitting", 
          "name": "Geom2dConvert_BSplineCurveKnotSplitting", 
          "return": {
            "type": "Geom2dConvert_BSplineCurveKnotSplitting", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Geom2dConvert_BSplineCurveKnotSplitting::NbSplits()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Geom2dConvert_BSplineCurveKnotSplitting", 
          "name": "NbSplits", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_BSplineCurveKnotSplitting::Splitting(TColStd_Array1OfInteger)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "TColStd_Array1OfInteger", 
              "name": "SplitValues", 
              "ref": true
            }
          ], 
          "parent": "Geom2dConvert_BSplineCurveKnotSplitting", 
          "name": "Splitting", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_BSplineCurveKnotSplitting::SplitValue(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "parent": "Geom2dConvert_BSplineCurveKnotSplitting", 
          "name": "SplitValue", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Geom2dConvert_BSplineCurveKnotSplitting.hxx", 
        50
      ], 
      "key": "Geom2dConvert_BSplineCurveKnotSplitting"
    }, 
    {
      "declType": "class", 
      "name": "Geom2dConvert_BSplineCurveToBezierCurve", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Geom2dConvert_BSplineCurveToBezierCurve::Geom2dConvert_BSplineCurveToBezierCurve(opencascade::handle<Geom2d_BSplineCurve>)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_BSplineCurve>", 
              "name": "BasisCurve", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Geom2dConvert_BSplineCurveToBezierCurve", 
          "name": "Geom2dConvert_BSplineCurveToBezierCurve", 
          "return": {
            "type": "Geom2dConvert_BSplineCurveToBezierCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_BSplineCurveToBezierCurve::Geom2dConvert_BSplineCurveToBezierCurve(opencascade::handle<Geom2d_BSplineCurve>, Standard_Real, Standard_Real, Standard_Real)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_BSplineCurve>", 
              "name": "BasisCurve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "U1", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "U2", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "ParametricTolerance", 
              "const": true
            }
          ], 
          "parent": "Geom2dConvert_BSplineCurveToBezierCurve", 
          "name": "Geom2dConvert_BSplineCurveToBezierCurve", 
          "return": {
            "type": "Geom2dConvert_BSplineCurveToBezierCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_BSplineCurveToBezierCurve::Geom2dConvert_BSplineCurveToBezierCurve(Geom2dConvert_BSplineCurveToBezierCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Geom2dConvert_BSplineCurveToBezierCurve", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Geom2dConvert_BSplineCurveToBezierCurve", 
          "name": "Geom2dConvert_BSplineCurveToBezierCurve", 
          "return": {
            "type": "Geom2dConvert_BSplineCurveToBezierCurve", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Geom2dConvert_BSplineCurveToBezierCurve::Arc(Standard_Integer)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "parent": "Geom2dConvert_BSplineCurveToBezierCurve", 
          "name": "Arc", 
          "return": {
            "type": "opencascade::handle<Geom2d_BezierCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_BSplineCurveToBezierCurve::Arcs(TColGeom2d_Array1OfBezierCurve)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "TColGeom2d_Array1OfBezierCurve", 
              "name": "Curves", 
              "ref": true
            }
          ], 
          "parent": "Geom2dConvert_BSplineCurveToBezierCurve", 
          "name": "Arcs", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_BSplineCurveToBezierCurve::Knots(TColStd_Array1OfReal)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "TColStd_Array1OfReal", 
              "name": "TKnots", 
              "ref": true
            }
          ], 
          "parent": "Geom2dConvert_BSplineCurveToBezierCurve", 
          "name": "Knots", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_BSplineCurveToBezierCurve::NbArcs()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Geom2dConvert_BSplineCurveToBezierCurve", 
          "name": "NbArcs", 
          "return": {
            "type": "Standard_Integer"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Geom2dConvert_BSplineCurveToBezierCurve.hxx", 
        44
      ], 
      "key": "Geom2dConvert_BSplineCurveToBezierCurve"
    }, 
    {
      "declType": "class", 
      "name": "Geom2dConvert_CompCurveToBSplineCurve", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Geom2dConvert_CompCurveToBSplineCurve::Geom2dConvert_CompCurveToBSplineCurve(Convert_ParameterisationType)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Convert_ParameterisationType", 
              "name": "Parameterisation", 
              "default": "::Convert_ParameterisationType::Convert_TgtThetaOver2", 
              "const": true
            }
          ], 
          "parent": "Geom2dConvert_CompCurveToBSplineCurve", 
          "name": "Geom2dConvert_CompCurveToBSplineCurve", 
          "return": {
            "type": "Geom2dConvert_CompCurveToBSplineCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_CompCurveToBSplineCurve::Geom2dConvert_CompCurveToBSplineCurve(opencascade::handle<Geom2d_BoundedCurve>, Convert_ParameterisationType)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_BoundedCurve>", 
              "name": "BasisCurve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Convert_ParameterisationType", 
              "name": "Parameterisation", 
              "default": "::Convert_ParameterisationType::Convert_TgtThetaOver2", 
              "const": true
            }
          ], 
          "parent": "Geom2dConvert_CompCurveToBSplineCurve", 
          "name": "Geom2dConvert_CompCurveToBSplineCurve", 
          "return": {
            "type": "Geom2dConvert_CompCurveToBSplineCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_CompCurveToBSplineCurve::Geom2dConvert_CompCurveToBSplineCurve(Geom2dConvert_CompCurveToBSplineCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Geom2dConvert_CompCurveToBSplineCurve", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Geom2dConvert_CompCurveToBSplineCurve", 
          "name": "Geom2dConvert_CompCurveToBSplineCurve", 
          "return": {
            "type": "Geom2dConvert_CompCurveToBSplineCurve", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Geom2dConvert_CompCurveToBSplineCurve::Add(opencascade::handle<Geom2d_BoundedCurve>, Standard_Real, Standard_Boolean)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_BoundedCurve>", 
              "name": "NewCurve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "After", 
              "default": "false", 
              "const": true
            }
          ], 
          "parent": "Geom2dConvert_CompCurveToBSplineCurve", 
          "name": "Add", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_CompCurveToBSplineCurve::BSplineCurve()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Geom2dConvert_CompCurveToBSplineCurve", 
          "name": "BSplineCurve", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_CompCurveToBSplineCurve::Clear()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Geom2dConvert_CompCurveToBSplineCurve", 
          "name": "Clear", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Geom2dConvert_CompCurveToBSplineCurve.hxx", 
        32
      ], 
      "key": "Geom2dConvert_CompCurveToBSplineCurve"
    }, 
    {
      "declType": "class", 
      "name": "Geom2dConvert_ApproxCurve", 
      "abstract": false, 
      "declarations": [
        {
          "key": "Geom2dConvert_ApproxCurve::Geom2dConvert_ApproxCurve(opencascade::handle<Geom2d_Curve>, Standard_Real, GeomAbs_Shape, Standard_Integer, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Geom2d_Curve>", 
              "name": "Curve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol2d", 
              "const": true
            }, 
            {
              "type": "GeomAbs_Shape", 
              "name": "Order", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "MaxSegments", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "MaxDegree", 
              "const": true
            }
          ], 
          "parent": "Geom2dConvert_ApproxCurve", 
          "name": "Geom2dConvert_ApproxCurve", 
          "return": {
            "type": "Geom2dConvert_ApproxCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_ApproxCurve::Geom2dConvert_ApproxCurve(opencascade::handle<Adaptor2d_HCurve2d>, Standard_Real, GeomAbs_Shape, Standard_Integer, Standard_Integer)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "opencascade::handle<Adaptor2d_HCurve2d>", 
              "name": "Curve", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tol2d", 
              "const": true
            }, 
            {
              "type": "GeomAbs_Shape", 
              "name": "Order", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "MaxSegments", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "MaxDegree", 
              "const": true
            }
          ], 
          "parent": "Geom2dConvert_ApproxCurve", 
          "name": "Geom2dConvert_ApproxCurve", 
          "return": {
            "type": "Geom2dConvert_ApproxCurve", 
            "ptr": true
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_ApproxCurve::Geom2dConvert_ApproxCurve(Geom2dConvert_ApproxCurve)", 
          "declType": "constructor", 
          "arguments": [
            {
              "type": "Geom2dConvert_ApproxCurve", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "parent": "Geom2dConvert_ApproxCurve", 
          "name": "Geom2dConvert_ApproxCurve", 
          "return": {
            "type": "Geom2dConvert_ApproxCurve", 
            "ptr": true
          }, 
          "artificial": "1", 
          "throws": true, 
          "copyConstructor": true
        }, 
        {
          "key": "Geom2dConvert_ApproxCurve::Curve()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Geom2dConvert_ApproxCurve", 
          "name": "Curve", 
          "return": {
            "type": "opencascade::handle<Geom2d_BSplineCurve>"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_ApproxCurve::IsDone()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Geom2dConvert_ApproxCurve", 
          "name": "IsDone", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_ApproxCurve::HasResult()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Geom2dConvert_ApproxCurve", 
          "name": "HasResult", 
          "return": {
            "type": "Standard_Boolean"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_ApproxCurve::MaxError()", 
          "declType": "method", 
          "arguments": [], 
          "parent": "Geom2dConvert_ApproxCurve", 
          "name": "MaxError", 
          "return": {
            "type": "Standard_Real"
          }, 
          "throws": true
        }, 
        {
          "key": "Geom2dConvert_ApproxCurve::Dump(Standard_OStream)", 
          "declType": "method", 
          "arguments": [
            {
              "type": "Standard_OStream", 
              "name": "o", 
              "ref": true
            }
          ], 
          "parent": "Geom2dConvert_ApproxCurve", 
          "name": "Dump", 
          "return": {
            "type": "void"
          }, 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/Geom2dConvert_ApproxCurve.hxx", 
        37
      ], 
      "key": "Geom2dConvert_ApproxCurve"
    }
  ], 
  "name": "Geom2dConvert"
}