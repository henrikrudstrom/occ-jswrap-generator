{
  "headers": [
    "gp_Ax2.hxx", 
    "gp_Mat.hxx", 
    "gp_Hypr.hxx", 
    "gp_Cylinder.hxx", 
    "gp_Circ2d.hxx", 
    "gp_XYZ.hxx", 
    "gp_QuaternionNLerp.hxx", 
    "gp_Elips.hxx", 
    "gp_Mat2d.hxx", 
    "gp_Dir.hxx", 
    "gp_Elips2d.hxx", 
    "gp_Ax22d.hxx", 
    "gp_Torus.hxx", 
    "gp_GTrsf.hxx", 
    "gp_VectorWithNullMagnitude.hxx", 
    "gp_Ax3.hxx", 
    "gp_TrsfNLerp.hxx", 
    "gp_Trsf2d.hxx", 
    "gp_Parab2d.hxx", 
    "gp_Parab.hxx", 
    "gp_Ax2d.hxx", 
    "gp_EulerSequence.hxx", 
    "gp_Trsf.hxx", 
    "gp_Pln.hxx", 
    "gp_Ax1.hxx", 
    "gp_Cone.hxx", 
    "gp_GTrsf2d.hxx", 
    "gp_Circ.hxx", 
    "gp_Dir2d.hxx", 
    "gp_Quaternion.hxx", 
    "gp_XY.hxx", 
    "gp_Pnt2d.hxx", 
    "gp_Vec.hxx", 
    "gp_Hypr2d.hxx", 
    "gp_QuaternionSLerp.hxx", 
    "gp_TrsfForm.hxx", 
    "gp_Vec2d.hxx", 
    "gp_Lin.hxx", 
    "gp_Sphere.hxx", 
    "gp_Lin2d.hxx", 
    "gp_Pnt.hxx"
  ], 
  "declarations": [
    {
      "declType": "class", 
      "name": "gp_Mat", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Mat", 
          "parent": "gp_Mat", 
          "arguments": [], 
          "key": "gp_Mat::gp_Mat()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Mat", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "a11", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a12", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a13", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a21", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a22", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a23", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a31", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a32", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a33", 
              "const": true
            }
          ], 
          "key": "gp_Mat::gp_Mat(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Mat", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Col1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Col2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Col3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::gp_Mat(gp_XYZ, gp_XYZ, gp_XYZ)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Mat", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::gp_Mat(gp_Mat)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetCol", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Value", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::SetCol(Standard_Integer, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCols", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Col1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Col2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Col3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::SetCols(gp_XYZ, gp_XYZ, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCross", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Ref", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::SetCross(gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetDiagonal", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X1", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "X2", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "X3", 
              "const": true
            }
          ], 
          "key": "gp_Mat::SetDiagonal(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetDot", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Ref", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::SetDot(gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetIdentity", 
          "parent": "gp_Mat", 
          "arguments": [], 
          "key": "gp_Mat::SetIdentity()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRotation", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Axis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Mat::SetRotation(gp_XYZ, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRow", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Value", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::SetRow(Standard_Integer, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRows", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Row1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Row2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Row3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::SetRows(gp_XYZ, gp_XYZ, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetScale", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Mat::SetScale(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetValue", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Value", 
              "const": true
            }
          ], 
          "key": "gp_Mat::SetValue(Standard_Integer, Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Column", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }
          ], 
          "key": "gp_Mat::Column(Standard_Integer)", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Determinant", 
          "parent": "gp_Mat", 
          "arguments": [], 
          "key": "gp_Mat::Determinant()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Diagonal", 
          "parent": "gp_Mat", 
          "arguments": [], 
          "key": "gp_Mat::Diagonal()", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Row", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }
          ], 
          "key": "gp_Mat::Row(Standard_Integer)", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Value", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }
          ], 
          "key": "gp_Mat::Value(Standard_Integer, Standard_Integer)", 
          "returnType": "Standard_Real const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ChangeValue", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }
          ], 
          "key": "gp_Mat::ChangeValue(Standard_Integer, Standard_Integer)", 
          "returnType": "Standard_Real &", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsSingular", 
          "parent": "gp_Mat", 
          "arguments": [], 
          "key": "gp_Mat::IsSingular()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Add", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::Add(gp_Mat)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Added", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::Added(gp_Mat)", 
          "returnType": "gp_Mat", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divide", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Mat::Divide(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divided", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Mat::Divided(Standard_Real)", 
          "returnType": "gp_Mat", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Invert", 
          "parent": "gp_Mat", 
          "arguments": [], 
          "key": "gp_Mat::Invert()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Inverted", 
          "parent": "gp_Mat", 
          "arguments": [], 
          "key": "gp_Mat::Inverted()", 
          "returnType": "gp_Mat", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::Multiplied(gp_Mat)", 
          "returnType": "gp_Mat", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::Multiply(gp_Mat)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "PreMultiply", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::PreMultiply(gp_Mat)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Mat::Multiplied(Standard_Real)", 
          "returnType": "gp_Mat", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Mat::Multiply(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Power", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_Mat::Power(Standard_Integer)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Powered", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_Mat::Powered(Standard_Integer)", 
          "returnType": "gp_Mat", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtract", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::Subtract(gp_Mat)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtracted", 
          "parent": "gp_Mat", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat::Subtracted(gp_Mat)", 
          "returnType": "gp_Mat", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transpose", 
          "parent": "gp_Mat", 
          "arguments": [], 
          "key": "gp_Mat::Transpose()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transposed", 
          "parent": "gp_Mat", 
          "arguments": [], 
          "key": "gp_Mat::Transposed()", 
          "returnType": "gp_Mat", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Mat.hxx", 
        35
      ], 
      "key": "gp_Mat"
    }, 
    {
      "declType": "class", 
      "name": "gp_XYZ", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_XYZ", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::gp_XYZ()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_XYZ", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Z", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::gp_XYZ(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_XYZ", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::gp_XYZ(gp_XYZ)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Z", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::SetCoord(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Xi", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::SetCoord(Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetX", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::SetX(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetY", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::SetY(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetZ", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Z", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::SetZ(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::Coord(Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ChangeCoord", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theIndex", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::ChangeCoord(Standard_Integer)", 
          "returnType": "Standard_Real &", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Z", 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Coord(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "GetData", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::GetData()", 
          "returnType": "Standard_Real const *", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ChangeData", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::ChangeData()", 
          "returnType": "Standard_Real *", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "X", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::X()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Y", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::Y()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Z", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::Z()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Modulus", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::Modulus()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareModulus", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::SquareModulus()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsEqual", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tolerance", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::IsEqual(gp_XYZ, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Add", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Add(gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Added", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Added(gp_XYZ)", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Cross", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Cross(gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Crossed", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Crossed(gp_XYZ)", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossMagnitude", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::CrossMagnitude(gp_XYZ)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossSquareMagnitude", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::CrossSquareMagnitude(gp_XYZ)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossCross", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Coord2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::CrossCross(gp_XYZ, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossCrossed", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Coord2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::CrossCrossed(gp_XYZ, gp_XYZ)", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divide", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::Divide(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divided", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::Divided(Standard_Real)", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Dot", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Dot(gp_XYZ)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "DotCross", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "Coord2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::DotCross(gp_XYZ, gp_XYZ)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::Multiply(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Multiply(gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "Matrix", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Multiply(gp_Mat)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_XYZ::Multiplied(Standard_Real)", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Multiplied(gp_XYZ)", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "Matrix", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Multiplied(gp_Mat)", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normalize", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::Normalize()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normalized", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::Normalized()", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_XYZ", 
          "arguments": [], 
          "key": "gp_XYZ::Reversed()", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtract", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Subtract(gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtracted", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::Subtracted(gp_XYZ)", 
          "returnType": "gp_XYZ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A3", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ3", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ4", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::SetLinearForm(Standard_Real, gp_XYZ, Standard_Real, gp_XYZ, Standard_Real, gp_XYZ, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A3", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::SetLinearForm(Standard_Real, gp_XYZ, Standard_Real, gp_XYZ, Standard_Real, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::SetLinearForm(Standard_Real, gp_XYZ, Standard_Real, gp_XYZ, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::SetLinearForm(Standard_Real, gp_XYZ, Standard_Real, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::SetLinearForm(Standard_Real, gp_XYZ, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_XYZ", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "XYZ1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "XYZ2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XYZ::SetLinearForm(gp_XYZ, gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_XYZ.hxx", 
        37
      ], 
      "key": "gp_XYZ"
    }, 
    {
      "declType": "class", 
      "name": "gp_Pnt", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Pnt", 
          "parent": "gp_Pnt", 
          "arguments": [], 
          "key": "gp_Pnt::gp_Pnt()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Pnt", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::gp_Pnt(gp_XYZ)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Pnt", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xp", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yp", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Zp", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::gp_Pnt(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Pnt", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::gp_Pnt(gp_Pnt)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Xi", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::SetCoord(Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xp", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yp", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Zp", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::SetCoord(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetX", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::SetX(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetY", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::SetY(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetZ", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Z", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::SetZ(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXYZ", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::SetXYZ(gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::Coord(Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xp", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yp", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Zp", 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Coord(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "X", 
          "parent": "gp_Pnt", 
          "arguments": [], 
          "key": "gp_Pnt::X()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Y", 
          "parent": "gp_Pnt", 
          "arguments": [], 
          "key": "gp_Pnt::Y()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Z", 
          "parent": "gp_Pnt", 
          "arguments": [], 
          "key": "gp_Pnt::Z()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XYZ", 
          "parent": "gp_Pnt", 
          "arguments": [], 
          "key": "gp_Pnt::XYZ()", 
          "returnType": "gp_XYZ const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Pnt", 
          "arguments": [], 
          "key": "gp_Pnt::Coord()", 
          "returnType": "gp_XYZ const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ChangeCoord", 
          "parent": "gp_Pnt", 
          "arguments": [], 
          "key": "gp_Pnt::ChangeCoord()", 
          "returnType": "gp_XYZ &", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "BaryCenter", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Alpha", 
              "const": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Beta", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::BaryCenter(Standard_Real, gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsEqual", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::IsEqual(gp_Pnt, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Distance(gp_Pnt)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::SquareDistance(gp_Pnt)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Mirrored(gp_Pnt)", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Mirrored(gp_Ax1)", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Mirrored(gp_Ax2)", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Pnt::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Transformed(gp_Trsf)", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Translated(gp_Vec)", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Pnt", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Pnt.hxx", 
        35
      ], 
      "key": "gp_Pnt"
    }, 
    {
      "declType": "class", 
      "name": "gp_Dir", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Dir", 
          "parent": "gp_Dir", 
          "arguments": [], 
          "key": "gp_Dir::gp_Dir()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Dir", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::gp_Dir(gp_Vec)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Dir", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::gp_Dir(gp_XYZ)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Dir", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Zv", 
              "const": true
            }
          ], 
          "key": "gp_Dir::gp_Dir(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Dir", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::gp_Dir(gp_Dir)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Xi", 
              "const": true
            }
          ], 
          "key": "gp_Dir::SetCoord(Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Zv", 
              "const": true
            }
          ], 
          "key": "gp_Dir::SetCoord(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetX", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }
          ], 
          "key": "gp_Dir::SetX(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetY", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "key": "gp_Dir::SetY(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetZ", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Z", 
              "const": true
            }
          ], 
          "key": "gp_Dir::SetZ(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXYZ", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::SetXYZ(gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "key": "gp_Dir::Coord(Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Zv", 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Coord(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "X", 
          "parent": "gp_Dir", 
          "arguments": [], 
          "key": "gp_Dir::X()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Y", 
          "parent": "gp_Dir", 
          "arguments": [], 
          "key": "gp_Dir::Y()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Z", 
          "parent": "gp_Dir", 
          "arguments": [], 
          "key": "gp_Dir::Z()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XYZ", 
          "parent": "gp_Dir", 
          "arguments": [], 
          "key": "gp_Dir::XYZ()", 
          "returnType": "gp_XYZ const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsEqual", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Dir::IsEqual(gp_Dir, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsNormal", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Dir::IsNormal(gp_Dir, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsOpposite", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Dir::IsOpposite(gp_Dir, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsParallel", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Dir::IsParallel(gp_Dir, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Angle", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Angle(gp_Dir)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "AngleWithRef", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "VRef", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::AngleWithRef(gp_Dir, gp_Dir)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Cross", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Cross(gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Crossed", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Crossed(gp_Dir)", 
          "returnType": "gp_Dir", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossCross", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::CrossCross(gp_Dir, gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossCrossed", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::CrossCrossed(gp_Dir, gp_Dir)", 
          "returnType": "gp_Dir", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Dot", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Dot(gp_Dir)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "DotCross", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::DotCross(gp_Dir, gp_Dir)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Dir", 
          "arguments": [], 
          "key": "gp_Dir::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Dir", 
          "arguments": [], 
          "key": "gp_Dir::Reversed()", 
          "returnType": "gp_Dir", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Mirror(gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Mirrored(gp_Dir)", 
          "returnType": "gp_Dir", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Mirrored(gp_Ax1)", 
          "returnType": "gp_Dir", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Mirrored(gp_Ax2)", 
          "returnType": "gp_Dir", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Dir::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Dir::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Dir", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Dir", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir::Transformed(gp_Trsf)", 
          "returnType": "gp_Dir", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Dir.hxx", 
        44
      ], 
      "key": "gp_Dir"
    }, 
    {
      "declType": "class", 
      "name": "gp_Ax1", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Ax1", 
          "parent": "gp_Ax1", 
          "arguments": [], 
          "key": "gp_Ax1::gp_Ax1()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax1", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::gp_Ax1(gp_Pnt, gp_Dir)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax1", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::gp_Ax1(gp_Ax1)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetDirection", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::SetDirection(gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direction", 
          "parent": "gp_Ax1", 
          "arguments": [], 
          "key": "gp_Ax1::Direction()", 
          "returnType": "gp_Dir const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Ax1", 
          "arguments": [], 
          "key": "gp_Ax1::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsCoaxial", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax1::IsCoaxial(gp_Ax1, Standard_Real, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsNormal", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax1::IsNormal(gp_Ax1, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsOpposite", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax1::IsOpposite(gp_Ax1, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsParallel", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax1::IsParallel(gp_Ax1, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Angle", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Angle(gp_Ax1)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Ax1", 
          "arguments": [], 
          "key": "gp_Ax1::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Ax1", 
          "arguments": [], 
          "key": "gp_Ax1::Reversed()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Mirrored(gp_Pnt)", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Mirrored(gp_Ax1)", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Mirrored(gp_Ax2)", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Ax1::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Ax1::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Ax1::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Ax1::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Transformed(gp_Trsf)", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Translated(gp_Vec)", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Ax1", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax1::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Ax1.hxx", 
        45
      ], 
      "key": "gp_Ax1"
    }, 
    {
      "declType": "class", 
      "name": "gp_Ax2", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Ax2", 
          "parent": "gp_Ax2", 
          "arguments": [], 
          "key": "gp_Ax2::gp_Ax2()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax2", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "N", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "Vx", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::gp_Ax2(gp_Pnt, gp_Dir, gp_Dir)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax2", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::gp_Ax2(gp_Pnt, gp_Dir)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax2", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::gp_Ax2(gp_Ax2)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::SetAxis(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetDirection", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::SetDirection(gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXDirection", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Vx", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::SetXDirection(gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetYDirection", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Vy", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::SetYDirection(gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Angle", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Angle(gp_Ax2)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Ax2", 
          "arguments": [], 
          "key": "gp_Ax2::Axis()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direction", 
          "parent": "gp_Ax2", 
          "arguments": [], 
          "key": "gp_Ax2::Direction()", 
          "returnType": "gp_Dir const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Ax2", 
          "arguments": [], 
          "key": "gp_Ax2::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XDirection", 
          "parent": "gp_Ax2", 
          "arguments": [], 
          "key": "gp_Ax2::XDirection()", 
          "returnType": "gp_Dir const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YDirection", 
          "parent": "gp_Ax2", 
          "arguments": [], 
          "key": "gp_Ax2::YDirection()", 
          "returnType": "gp_Dir const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsCoplanar", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax2::IsCoplanar(gp_Ax2, Standard_Real, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsCoplanar", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax2::IsCoplanar(gp_Ax1, Standard_Real, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Mirrored(gp_Pnt)", 
          "returnType": "gp_Ax2", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Mirrored(gp_Ax1)", 
          "returnType": "gp_Ax2", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Mirrored(gp_Ax2)", 
          "returnType": "gp_Ax2", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Ax2::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Ax2::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Ax2", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Ax2::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Ax2::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Ax2", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Transformed(gp_Trsf)", 
          "returnType": "gp_Ax2", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Translated(gp_Vec)", 
          "returnType": "gp_Ax2", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Ax2", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Ax2", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Ax2.hxx", 
        63
      ], 
      "key": "gp_Ax2"
    }, 
    {
      "declType": "class", 
      "name": "gp_Pnt2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Pnt2d", 
          "parent": "gp_Pnt2d", 
          "arguments": [], 
          "key": "gp_Pnt2d::gp_Pnt2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Pnt2d", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::gp_Pnt2d(gp_XY)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Pnt2d", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xp", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yp", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::gp_Pnt2d(Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Pnt2d", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::gp_Pnt2d(gp_Pnt2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Xi", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::SetCoord(Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xp", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yp", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::SetCoord(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetX", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::SetX(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetY", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::SetY(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXY", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::SetXY(gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::Coord(Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xp", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yp", 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Coord(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "X", 
          "parent": "gp_Pnt2d", 
          "arguments": [], 
          "key": "gp_Pnt2d::X()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Y", 
          "parent": "gp_Pnt2d", 
          "arguments": [], 
          "key": "gp_Pnt2d::Y()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XY", 
          "parent": "gp_Pnt2d", 
          "arguments": [], 
          "key": "gp_Pnt2d::XY()", 
          "returnType": "gp_XY const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Pnt2d", 
          "arguments": [], 
          "key": "gp_Pnt2d::Coord()", 
          "returnType": "gp_XY const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ChangeCoord", 
          "parent": "gp_Pnt2d", 
          "arguments": [], 
          "key": "gp_Pnt2d::ChangeCoord()", 
          "returnType": "gp_XY &", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsEqual", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::IsEqual(gp_Pnt2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Distance(gp_Pnt2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::SquareDistance(gp_Pnt2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Mirror(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Mirrored(gp_Pnt2d)", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Mirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Mirrored(gp_Ax2d)", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::Rotate(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::Rotated(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::Scale(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Pnt2d::Scaled(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Transform(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Transformed(gp_Trsf2d)", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Translate(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Translated(gp_Vec2d)", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Translate(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Pnt2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pnt2d::Translated(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Pnt2d.hxx", 
        34
      ], 
      "key": "gp_Pnt2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Dir2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Dir2d", 
          "parent": "gp_Dir2d", 
          "arguments": [], 
          "key": "gp_Dir2d::gp_Dir2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Dir2d", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::gp_Dir2d(gp_Vec2d)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Dir2d", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::gp_Dir2d(gp_XY)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Dir2d", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::gp_Dir2d(Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Dir2d", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::gp_Dir2d(gp_Dir2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Xi", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::SetCoord(Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::SetCoord(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetX", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::SetX(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetY", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::SetY(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXY", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::SetXY(gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::Coord(Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::Coord(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "X", 
          "parent": "gp_Dir2d", 
          "arguments": [], 
          "key": "gp_Dir2d::X()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Y", 
          "parent": "gp_Dir2d", 
          "arguments": [], 
          "key": "gp_Dir2d::Y()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XY", 
          "parent": "gp_Dir2d", 
          "arguments": [], 
          "key": "gp_Dir2d::XY()", 
          "returnType": "gp_XY const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsEqual", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::IsEqual(gp_Dir2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsNormal", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::IsNormal(gp_Dir2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsOpposite", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::IsOpposite(gp_Dir2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsParallel", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::IsParallel(gp_Dir2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Angle", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::Angle(gp_Dir2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Crossed", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::Crossed(gp_Dir2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Dot", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::Dot(gp_Dir2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Dir2d", 
          "arguments": [], 
          "key": "gp_Dir2d::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Dir2d", 
          "arguments": [], 
          "key": "gp_Dir2d::Reversed()", 
          "returnType": "gp_Dir2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::Mirror(gp_Dir2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::Mirrored(gp_Dir2d)", 
          "returnType": "gp_Dir2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::Mirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::Mirrored(gp_Ax2d)", 
          "returnType": "gp_Dir2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::Rotate(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Dir2d::Rotated(Standard_Real)", 
          "returnType": "gp_Dir2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::Transform(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Dir2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Dir2d::Transformed(gp_Trsf2d)", 
          "returnType": "gp_Dir2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Dir2d.hxx", 
        43
      ], 
      "key": "gp_Dir2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Ax2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Ax2d", 
          "parent": "gp_Ax2d", 
          "arguments": [], 
          "key": "gp_Ax2d::gp_Ax2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax2d", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::gp_Ax2d(gp_Pnt2d, gp_Dir2d)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax2d", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::gp_Ax2d(gp_Ax2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "Locat", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::SetLocation(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetDirection", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::SetDirection(gp_Dir2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Ax2d", 
          "arguments": [], 
          "key": "gp_Ax2d::Location()", 
          "returnType": "gp_Pnt2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direction", 
          "parent": "gp_Ax2d", 
          "arguments": [], 
          "key": "gp_Ax2d::Direction()", 
          "returnType": "gp_Dir2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsCoaxial", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax2d::IsCoaxial(gp_Ax2d, Standard_Real, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsNormal", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax2d::IsNormal(gp_Ax2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsOpposite", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax2d::IsOpposite(gp_Ax2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsParallel", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax2d::IsParallel(gp_Ax2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Angle", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Angle(gp_Ax2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Ax2d", 
          "arguments": [], 
          "key": "gp_Ax2d::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Ax2d", 
          "arguments": [], 
          "key": "gp_Ax2d::Reversed()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Mirror(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Mirrored(gp_Pnt2d)", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Mirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Mirrored(gp_Ax2d)", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Ax2d::Rotate(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Ax2d::Rotated(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Ax2d::Scale(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Ax2d::Scaled(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Transform(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Transformed(gp_Trsf2d)", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Translate(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Translated(gp_Vec2d)", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Translate(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Ax2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax2d::Translated(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Ax2d.hxx", 
        51
      ], 
      "key": "gp_Ax2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Quaternion", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Quaternion", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::gp_Quaternion()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Quaternion", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "x", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "y", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "z", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "w", 
              "const": true
            }
          ], 
          "key": "gp_Quaternion::gp_Quaternion(Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Quaternion", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theToCopy", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::gp_Quaternion(gp_Quaternion)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "gp_Quaternion", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "theVecFrom", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "theVecTo", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::gp_Quaternion(gp_Vec, gp_Vec)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Quaternion", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "theVecFrom", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "theVecTo", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "theHelpCrossVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::gp_Quaternion(gp_Vec, gp_Vec, gp_Vec)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Quaternion", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "theAxis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theAngle", 
              "const": true
            }
          ], 
          "key": "gp_Quaternion::gp_Quaternion(gp_Vec, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Quaternion", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "theMat", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::gp_Quaternion(gp_Mat)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "IsEqual", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::IsEqual(gp_Quaternion)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRotation", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "theVecFrom", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "theVecTo", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::SetRotation(gp_Vec, gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRotation", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "theVecFrom", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "theVecTo", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "theHelpCrossVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::SetRotation(gp_Vec, gp_Vec, gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetVectorAndAngle", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "theAxis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theAngle", 
              "const": true
            }
          ], 
          "key": "gp_Quaternion::SetVectorAndAngle(gp_Vec, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "GetVectorAndAngle", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "theAxis", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theAngle", 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::GetVectorAndAngle(gp_Vec, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMatrix", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "theMat", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::SetMatrix(gp_Mat)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "GetMatrix", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::GetMatrix()", 
          "returnType": "gp_Mat", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetEulerAngles", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_EulerSequence", 
              "name": "theOrder", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theAlpha", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theBeta", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theGamma", 
              "const": true
            }
          ], 
          "key": "gp_Quaternion::SetEulerAngles(gp_EulerSequence, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "GetEulerAngles", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_EulerSequence", 
              "name": "theOrder", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theAlpha", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theBeta", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theGamma", 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::GetEulerAngles(gp_EulerSequence, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Set", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "x", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "y", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "z", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "w", 
              "const": true
            }
          ], 
          "key": "gp_Quaternion::Set(Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Set", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theQuaternion", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::Set(gp_Quaternion)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "X", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::X()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Y", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::Y()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Z", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::Z()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "W", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::W()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetIdent", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::SetIdent()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::Reversed()", 
          "returnType": "gp_Quaternion", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Invert", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::Invert()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Inverted", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::Inverted()", 
          "returnType": "gp_Quaternion", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareNorm", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::SquareNorm()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Norm", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::Norm()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theScale", 
              "const": true
            }
          ], 
          "key": "gp_Quaternion::Scale(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theScale", 
              "const": true
            }
          ], 
          "key": "gp_Quaternion::Scaled(Standard_Real)", 
          "returnType": "gp_Quaternion", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "StabilizeLength", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::StabilizeLength()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normalize", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::Normalize()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normalized", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::Normalized()", 
          "returnType": "gp_Quaternion", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Negated", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::Negated()", 
          "returnType": "gp_Quaternion", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Added", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::Added(gp_Quaternion)", 
          "returnType": "gp_Quaternion", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtracted", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::Subtracted(gp_Quaternion)", 
          "returnType": "gp_Quaternion", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::Multiplied(gp_Quaternion)", 
          "returnType": "gp_Quaternion", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Add", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::Add(gp_Quaternion)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtract", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::Subtract(gp_Quaternion)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::Multiply(gp_Quaternion)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Dot", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theOther", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::Dot(gp_Quaternion)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "GetRotationAngle", 
          "parent": "gp_Quaternion", 
          "arguments": [], 
          "key": "gp_Quaternion::GetRotationAngle()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_Quaternion", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "theVec", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Quaternion::Multiply(gp_Vec)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Quaternion.hxx", 
        38
      ], 
      "key": "gp_Quaternion"
    }, 
    {
      "declType": "class", 
      "name": "gp_Trsf", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Trsf", 
          "parent": "gp_Trsf", 
          "arguments": [], 
          "key": "gp_Trsf::gp_Trsf()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Trsf", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::gp_Trsf(gp_Trsf2d)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Trsf", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::gp_Trsf(gp_Trsf)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetMirror", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetMirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMirror", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetMirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMirror", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetMirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRotation", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Trsf::SetRotation(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRotation", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "R", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetRotation(gp_Quaternion)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetScale", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Trsf::SetScale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetDisplacement", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "FromSystem1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Ax3", 
              "name": "ToSystem2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetDisplacement(gp_Ax3, gp_Ax3)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTransformation", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "FromSystem1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Ax3", 
              "name": "ToSystem2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetTransformation(gp_Ax3, gp_Ax3)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTransformation", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "ToSystem", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetTransformation(gp_Ax3)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTransformation", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "R", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetTransformation(gp_Quaternion, gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTranslation", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetTranslation(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTranslation", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetTranslation(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTranslationPart", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::SetTranslationPart(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetScaleFactor", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Trsf::SetScaleFactor(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetForm", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_TrsfForm", 
              "name": "P", 
              "const": true
            }
          ], 
          "key": "gp_Trsf::SetForm(gp_TrsfForm)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetValues", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "a11", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a12", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a13", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a14", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a21", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a22", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a23", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a24", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a31", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a32", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a33", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a34", 
              "const": true
            }
          ], 
          "key": "gp_Trsf::SetValues(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsNegative", 
          "parent": "gp_Trsf", 
          "arguments": [], 
          "key": "gp_Trsf::IsNegative()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Form", 
          "parent": "gp_Trsf", 
          "arguments": [], 
          "key": "gp_Trsf::Form()", 
          "returnType": "gp_TrsfForm", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ScaleFactor", 
          "parent": "gp_Trsf", 
          "arguments": [], 
          "key": "gp_Trsf::ScaleFactor()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "TranslationPart", 
          "parent": "gp_Trsf", 
          "arguments": [], 
          "key": "gp_Trsf::TranslationPart()", 
          "returnType": "gp_XYZ const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "GetRotation", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "theAxis", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theAngle", 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::GetRotation(gp_XYZ, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "GetRotation", 
          "parent": "gp_Trsf", 
          "arguments": [], 
          "key": "gp_Trsf::GetRotation()", 
          "returnType": "gp_Quaternion", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "VectorialPart", 
          "parent": "gp_Trsf", 
          "arguments": [], 
          "key": "gp_Trsf::VectorialPart()", 
          "returnType": "gp_Mat", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "HVectorialPart", 
          "parent": "gp_Trsf", 
          "arguments": [], 
          "key": "gp_Trsf::HVectorialPart()", 
          "returnType": "gp_Mat const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Value", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }
          ], 
          "key": "gp_Trsf::Value(Standard_Integer, Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Invert", 
          "parent": "gp_Trsf", 
          "arguments": [], 
          "key": "gp_Trsf::Invert()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Inverted", 
          "parent": "gp_Trsf", 
          "arguments": [], 
          "key": "gp_Trsf::Inverted()", 
          "returnType": "gp_Trsf", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::Multiplied(gp_Trsf)", 
          "returnType": "gp_Trsf", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::Multiply(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "PreMultiply", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::PreMultiply(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Power", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_Trsf::Power(Standard_Integer)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Powered", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_Trsf::Powered(Standard_Integer)", 
          "returnType": "gp_Trsf", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transforms", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Z", 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::Transforms(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transforms", 
          "parent": "gp_Trsf", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord", 
              "ref": true
            }
          ], 
          "key": "gp_Trsf::Transforms(gp_XYZ)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Trsf.hxx", 
        57
      ], 
      "key": "gp_Trsf"
    }, 
    {
      "declType": "class", 
      "name": "gp_GTrsf", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_GTrsf", 
          "parent": "gp_GTrsf", 
          "arguments": [], 
          "key": "gp_GTrsf::gp_GTrsf()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_GTrsf", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::gp_GTrsf(gp_Trsf)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_GTrsf", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "M", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XYZ", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::gp_GTrsf(gp_Mat, gp_XYZ)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_GTrsf", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_GTrsf", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::gp_GTrsf(gp_GTrsf)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAffinity", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ratio", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf::SetAffinity(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetAffinity", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ratio", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf::SetAffinity(gp_Ax2, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetValue", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Value", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf::SetValue(Standard_Integer, Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetVectorialPart", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_Mat", 
              "name": "Matrix", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::SetVectorialPart(gp_Mat)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTranslationPart", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::SetTranslationPart(gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTrsf", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::SetTrsf(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsNegative", 
          "parent": "gp_GTrsf", 
          "arguments": [], 
          "key": "gp_GTrsf::IsNegative()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsSingular", 
          "parent": "gp_GTrsf", 
          "arguments": [], 
          "key": "gp_GTrsf::IsSingular()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Form", 
          "parent": "gp_GTrsf", 
          "arguments": [], 
          "key": "gp_GTrsf::Form()", 
          "returnType": "gp_TrsfForm", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetForm", 
          "parent": "gp_GTrsf", 
          "arguments": [], 
          "key": "gp_GTrsf::SetForm()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "TranslationPart", 
          "parent": "gp_GTrsf", 
          "arguments": [], 
          "key": "gp_GTrsf::TranslationPart()", 
          "returnType": "gp_XYZ const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "VectorialPart", 
          "parent": "gp_GTrsf", 
          "arguments": [], 
          "key": "gp_GTrsf::VectorialPart()", 
          "returnType": "gp_Mat const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Value", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf::Value(Standard_Integer, Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Invert", 
          "parent": "gp_GTrsf", 
          "arguments": [], 
          "key": "gp_GTrsf::Invert()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Inverted", 
          "parent": "gp_GTrsf", 
          "arguments": [], 
          "key": "gp_GTrsf::Inverted()", 
          "returnType": "gp_GTrsf", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_GTrsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::Multiplied(gp_GTrsf)", 
          "returnType": "gp_GTrsf", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_GTrsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::Multiply(gp_GTrsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "PreMultiply", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_GTrsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::PreMultiply(gp_GTrsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Power", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf::Power(Standard_Integer)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Powered", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf::Powered(Standard_Integer)", 
          "returnType": "gp_GTrsf", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transforms", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord", 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::Transforms(gp_XYZ)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transforms", 
          "parent": "gp_GTrsf", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Z", 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf::Transforms(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Trsf", 
          "parent": "gp_GTrsf", 
          "arguments": [], 
          "key": "gp_GTrsf::Trsf()", 
          "returnType": "gp_Trsf", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_GTrsf.hxx", 
        69
      ], 
      "key": "gp_GTrsf"
    }, 
    {
      "declType": "class", 
      "name": "gp_Vec", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Vec", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::gp_Vec()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Vec", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::gp_Vec(gp_Dir)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Vec", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::gp_Vec(gp_XYZ)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Vec", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Zv", 
              "const": true
            }
          ], 
          "key": "gp_Vec::gp_Vec(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Vec", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::gp_Vec(gp_Pnt, gp_Pnt)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Vec", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::gp_Vec(gp_Vec)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Xi", 
              "const": true
            }
          ], 
          "key": "gp_Vec::SetCoord(Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Zv", 
              "const": true
            }
          ], 
          "key": "gp_Vec::SetCoord(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetX", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }
          ], 
          "key": "gp_Vec::SetX(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetY", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "key": "gp_Vec::SetY(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetZ", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Z", 
              "const": true
            }
          ], 
          "key": "gp_Vec::SetZ(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXYZ", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_XYZ", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::SetXYZ(gp_XYZ)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "key": "gp_Vec::Coord(Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Zv", 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Coord(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "X", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::X()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Y", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::Y()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Z", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::Z()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XYZ", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::XYZ()", 
          "returnType": "gp_XYZ const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsEqual", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Vec::IsEqual(gp_Vec, Standard_Real, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsNormal", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Vec::IsNormal(gp_Vec, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsOpposite", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Vec::IsOpposite(gp_Vec, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsParallel", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Vec::IsParallel(gp_Vec, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Angle", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Angle(gp_Vec)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "AngleWithRef", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "VRef", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::AngleWithRef(gp_Vec, gp_Vec)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Magnitude", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::Magnitude()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareMagnitude", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::SquareMagnitude()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Add", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Add(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Added", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Added(gp_Vec)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtract", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Subtract(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtracted", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Subtracted(gp_Vec)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Vec::Multiply(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Vec::Multiplied(Standard_Real)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divide", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Vec::Divide(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divided", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Vec::Divided(Standard_Real)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Cross", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Cross(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Crossed", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Crossed(gp_Vec)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossMagnitude", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::CrossMagnitude(gp_Vec)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossSquareMagnitude", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::CrossSquareMagnitude(gp_Vec)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossCross", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::CrossCross(gp_Vec, gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossCrossed", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::CrossCrossed(gp_Vec, gp_Vec)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Dot", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Dot(gp_Vec)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "DotCross", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::DotCross(gp_Vec, gp_Vec)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normalize", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::Normalize()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normalized", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::Normalized()", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Vec", 
          "arguments": [], 
          "key": "gp_Vec::Reversed()", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A3", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V3", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V4", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::SetLinearForm(Standard_Real, gp_Vec, Standard_Real, gp_Vec, Standard_Real, gp_Vec, gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A3", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::SetLinearForm(Standard_Real, gp_Vec, Standard_Real, gp_Vec, Standard_Real, gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::SetLinearForm(Standard_Real, gp_Vec, Standard_Real, gp_Vec, gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::SetLinearForm(Standard_Real, gp_Vec, Standard_Real, gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::SetLinearForm(Standard_Real, gp_Vec, gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::SetLinearForm(gp_Vec, gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Mirror(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Mirrored(gp_Vec)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Mirrored(gp_Ax1)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Mirrored(gp_Ax2)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Vec::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Vec::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Vec::Scale(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Vec::Scaled(Standard_Real)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Vec", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec::Transformed(gp_Trsf)", 
          "returnType": "gp_Vec", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Vec.hxx", 
        40
      ], 
      "key": "gp_Vec"
    }, 
    {
      "declType": "class", 
      "name": "gp_Ax3", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Ax3", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::gp_Ax3()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax3", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::gp_Ax3(gp_Ax2)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax3", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "N", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "Vx", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::gp_Ax3(gp_Pnt, gp_Dir, gp_Dir)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax3", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::gp_Ax3(gp_Pnt, gp_Dir)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax3", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::gp_Ax3(gp_Ax3)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "XReverse", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::XReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YReverse", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::YReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ZReverse", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::ZReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::SetAxis(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetDirection", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::SetDirection(gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXDirection", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Vx", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::SetXDirection(gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetYDirection", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "Vy", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::SetYDirection(gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Angle", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Angle(gp_Ax3)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::Axis()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Ax2", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::Ax2()", 
          "returnType": "gp_Ax2", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direction", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::Direction()", 
          "returnType": "gp_Dir const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XDirection", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::XDirection()", 
          "returnType": "gp_Dir const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YDirection", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::YDirection()", 
          "returnType": "gp_Dir const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direct", 
          "parent": "gp_Ax3", 
          "arguments": [], 
          "key": "gp_Ax3::Direct()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsCoplanar", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax3::IsCoplanar(gp_Ax3, Standard_Real, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsCoplanar", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Ax3::IsCoplanar(gp_Ax1, Standard_Real, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Mirrored(gp_Pnt)", 
          "returnType": "gp_Ax3", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Mirrored(gp_Ax1)", 
          "returnType": "gp_Ax3", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Mirrored(gp_Ax2)", 
          "returnType": "gp_Ax3", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Ax3::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Ax3::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Ax3", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Ax3::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Ax3::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Ax3", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Transformed(gp_Trsf)", 
          "returnType": "gp_Ax3", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Translated(gp_Vec)", 
          "returnType": "gp_Ax3", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Ax3", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax3::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Ax3", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Ax3.hxx", 
        71
      ], 
      "key": "gp_Ax3"
    }, 
    {
      "declType": "class", 
      "name": "gp_Lin", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Lin", 
          "parent": "gp_Lin", 
          "arguments": [], 
          "key": "gp_Lin::gp_Lin()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Lin", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::gp_Lin(gp_Ax1)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Lin", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::gp_Lin(gp_Pnt, gp_Dir)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Lin", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::gp_Lin(gp_Lin)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Lin", 
          "arguments": [], 
          "key": "gp_Lin::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Lin", 
          "arguments": [], 
          "key": "gp_Lin::Reversed()", 
          "returnType": "gp_Lin", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetDirection", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::SetDirection(gp_Dir)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::SetPosition(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direction", 
          "parent": "gp_Lin", 
          "arguments": [], 
          "key": "gp_Lin::Direction()", 
          "returnType": "gp_Dir const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Lin", 
          "arguments": [], 
          "key": "gp_Lin::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Lin", 
          "arguments": [], 
          "key": "gp_Lin::Position()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Angle", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Angle(gp_Lin)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Contains", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Lin::Contains(gp_Pnt, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Distance(gp_Pnt)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Distance(gp_Lin)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::SquareDistance(gp_Pnt)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::SquareDistance(gp_Lin)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normal", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Normal(gp_Pnt)", 
          "returnType": "gp_Lin", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Mirrored(gp_Pnt)", 
          "returnType": "gp_Lin", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Mirrored(gp_Ax1)", 
          "returnType": "gp_Lin", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Mirrored(gp_Ax2)", 
          "returnType": "gp_Lin", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Lin::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Lin::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Lin", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Lin::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Lin::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Lin", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Transformed(gp_Trsf)", 
          "returnType": "gp_Lin", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Translated(gp_Vec)", 
          "returnType": "gp_Lin", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Lin", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Lin", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Lin.hxx", 
        49
      ], 
      "key": "gp_Lin"
    }, 
    {
      "declType": "class", 
      "name": "gp_Circ", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Circ", 
          "parent": "gp_Circ", 
          "arguments": [], 
          "key": "gp_Circ::gp_Circ()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Circ", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }
          ], 
          "key": "gp_Circ::gp_Circ(gp_Ax2, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Circ", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Circ", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::gp_Circ(gp_Circ)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::SetAxis(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::SetPosition(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRadius", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }
          ], 
          "key": "gp_Circ::SetRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Area", 
          "parent": "gp_Circ", 
          "arguments": [], 
          "key": "gp_Circ::Area()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Circ", 
          "arguments": [], 
          "key": "gp_Circ::Axis()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Length", 
          "parent": "gp_Circ", 
          "arguments": [], 
          "key": "gp_Circ::Length()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Circ", 
          "arguments": [], 
          "key": "gp_Circ::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Circ", 
          "arguments": [], 
          "key": "gp_Circ::Position()", 
          "returnType": "gp_Ax2 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Radius", 
          "parent": "gp_Circ", 
          "arguments": [], 
          "key": "gp_Circ::Radius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Circ", 
          "arguments": [], 
          "key": "gp_Circ::XAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Circ", 
          "arguments": [], 
          "key": "gp_Circ::YAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Distance(gp_Pnt)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::SquareDistance(gp_Pnt)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Contains", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Circ::Contains(gp_Pnt, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Mirrored(gp_Pnt)", 
          "returnType": "gp_Circ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Mirrored(gp_Ax1)", 
          "returnType": "gp_Circ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Mirrored(gp_Ax2)", 
          "returnType": "gp_Circ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Circ::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Circ::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Circ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Circ::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Circ::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Circ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Transformed(gp_Trsf)", 
          "returnType": "gp_Circ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Translated(gp_Vec)", 
          "returnType": "gp_Circ", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Circ", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Circ", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Circ.hxx", 
        61
      ], 
      "key": "gp_Circ"
    }, 
    {
      "declType": "class", 
      "name": "gp_Elips", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Elips", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::gp_Elips()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Elips", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Elips::gp_Elips(gp_Ax2, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Elips", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Elips", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::gp_Elips(gp_Elips)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::SetAxis(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMajorRadius", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Elips::SetMajorRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMinorRadius", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Elips::SetMinorRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::SetPosition(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Area", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Area()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Axis()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Directrix1", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Directrix1()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Directrix2", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Directrix2()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Eccentricity", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Eccentricity()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focal", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Focal()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focus1", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Focus1()", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focus2", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Focus2()", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MajorRadius", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::MajorRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MinorRadius", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::MinorRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Parameter", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Parameter()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::Position()", 
          "returnType": "gp_Ax2 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::XAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Elips", 
          "arguments": [], 
          "key": "gp_Elips::YAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Mirrored(gp_Pnt)", 
          "returnType": "gp_Elips", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Mirrored(gp_Ax1)", 
          "returnType": "gp_Elips", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Mirrored(gp_Ax2)", 
          "returnType": "gp_Elips", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Elips::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Elips::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Elips", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Elips::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Elips::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Elips", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Transformed(gp_Trsf)", 
          "returnType": "gp_Elips", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Translated(gp_Vec)", 
          "returnType": "gp_Elips", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Elips", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Elips", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Elips.hxx", 
        58
      ], 
      "key": "gp_Elips"
    }, 
    {
      "declType": "class", 
      "name": "gp_Hypr", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Hypr", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::gp_Hypr()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Hypr", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Hypr::gp_Hypr(gp_Ax2, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Hypr", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Hypr", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::gp_Hypr(gp_Hypr)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::SetAxis(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMajorRadius", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Hypr::SetMajorRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMinorRadius", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Hypr::SetMinorRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::SetPosition(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Asymptote1", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Asymptote1()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Asymptote2", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Asymptote2()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Axis()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ConjugateBranch1", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::ConjugateBranch1()", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ConjugateBranch2", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::ConjugateBranch2()", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Directrix1", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Directrix1()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Directrix2", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Directrix2()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Eccentricity", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Eccentricity()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focal", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Focal()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focus1", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Focus1()", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focus2", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Focus2()", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MajorRadius", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::MajorRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MinorRadius", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::MinorRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "OtherBranch", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::OtherBranch()", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Parameter", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Parameter()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::Position()", 
          "returnType": "gp_Ax2 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::XAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Hypr", 
          "arguments": [], 
          "key": "gp_Hypr::YAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Mirrored(gp_Pnt)", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Mirrored(gp_Ax1)", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Mirrored(gp_Ax2)", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Hypr::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Hypr::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Hypr::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Hypr::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Transformed(gp_Trsf)", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Translated(gp_Vec)", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Hypr", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Hypr", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Hypr.hxx", 
        80
      ], 
      "key": "gp_Hypr"
    }, 
    {
      "declType": "class", 
      "name": "gp_Parab", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Parab", 
          "parent": "gp_Parab", 
          "arguments": [], 
          "key": "gp_Parab::gp_Parab()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Parab", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Focal", 
              "const": true
            }
          ], 
          "key": "gp_Parab::gp_Parab(gp_Ax2, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Parab", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "D", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "F", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::gp_Parab(gp_Ax1, gp_Pnt)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Parab", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Parab", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::gp_Parab(gp_Parab)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::SetAxis(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetFocal", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Focal", 
              "const": true
            }
          ], 
          "key": "gp_Parab::SetFocal(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::SetPosition(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Parab", 
          "arguments": [], 
          "key": "gp_Parab::Axis()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Directrix", 
          "parent": "gp_Parab", 
          "arguments": [], 
          "key": "gp_Parab::Directrix()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focal", 
          "parent": "gp_Parab", 
          "arguments": [], 
          "key": "gp_Parab::Focal()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focus", 
          "parent": "gp_Parab", 
          "arguments": [], 
          "key": "gp_Parab::Focus()", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Parab", 
          "arguments": [], 
          "key": "gp_Parab::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Parameter", 
          "parent": "gp_Parab", 
          "arguments": [], 
          "key": "gp_Parab::Parameter()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Parab", 
          "arguments": [], 
          "key": "gp_Parab::Position()", 
          "returnType": "gp_Ax2 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Parab", 
          "arguments": [], 
          "key": "gp_Parab::XAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Parab", 
          "arguments": [], 
          "key": "gp_Parab::YAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Mirrored(gp_Pnt)", 
          "returnType": "gp_Parab", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Mirrored(gp_Ax1)", 
          "returnType": "gp_Parab", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Mirrored(gp_Ax2)", 
          "returnType": "gp_Parab", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Parab::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Parab::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Parab", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Parab::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Parab::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Parab", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Transformed(gp_Trsf)", 
          "returnType": "gp_Parab", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Translated(gp_Vec)", 
          "returnType": "gp_Parab", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Parab", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Parab", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Parab.hxx", 
        60
      ], 
      "key": "gp_Parab"
    }, 
    {
      "declType": "class", 
      "name": "gp_Pln", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Pln", 
          "parent": "gp_Pln", 
          "arguments": [], 
          "key": "gp_Pln::gp_Pln()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Pln", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "A3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::gp_Pln(gp_Ax3)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Pln", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::gp_Pln(gp_Pnt, gp_Dir)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Pln", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "const": true
            }
          ], 
          "key": "gp_Pln::gp_Pln(Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Pln", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::gp_Pln(gp_Pln)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "Coefficients", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Coefficients(Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::SetAxis(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "Loc", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "A3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::SetPosition(gp_Ax3)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "UReverse", 
          "parent": "gp_Pln", 
          "arguments": [], 
          "key": "gp_Pln::UReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "VReverse", 
          "parent": "gp_Pln", 
          "arguments": [], 
          "key": "gp_Pln::VReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direct", 
          "parent": "gp_Pln", 
          "arguments": [], 
          "key": "gp_Pln::Direct()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Pln", 
          "arguments": [], 
          "key": "gp_Pln::Axis()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Pln", 
          "arguments": [], 
          "key": "gp_Pln::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Pln", 
          "arguments": [], 
          "key": "gp_Pln::Position()", 
          "returnType": "gp_Ax3 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Distance(gp_Pnt)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Distance(gp_Lin)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Distance(gp_Pln)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::SquareDistance(gp_Pnt)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::SquareDistance(gp_Lin)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pln", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::SquareDistance(gp_Pln)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Pln", 
          "arguments": [], 
          "key": "gp_Pln::XAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Pln", 
          "arguments": [], 
          "key": "gp_Pln::YAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Contains", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Pln::Contains(gp_Pnt, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Contains", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Lin", 
              "name": "L", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Pln::Contains(gp_Lin, Standard_Real, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Mirrored(gp_Pnt)", 
          "returnType": "gp_Pln", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Mirrored(gp_Ax1)", 
          "returnType": "gp_Pln", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Mirrored(gp_Ax2)", 
          "returnType": "gp_Pln", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Pln::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Pln::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Pln", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Pln::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Pln::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Pln", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Transformed(gp_Trsf)", 
          "returnType": "gp_Pln", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Translated(gp_Vec)", 
          "returnType": "gp_Pln", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Pln", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Pln::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Pln", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Pln.hxx", 
        58
      ], 
      "key": "gp_Pln"
    }, 
    {
      "declType": "class", 
      "name": "gp_Cylinder", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Cylinder", 
          "parent": "gp_Cylinder", 
          "arguments": [], 
          "key": "gp_Cylinder::gp_Cylinder()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Cylinder", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "A3", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }
          ], 
          "key": "gp_Cylinder::gp_Cylinder(gp_Ax3, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Cylinder", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Cylinder", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::gp_Cylinder(gp_Cylinder)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::SetAxis(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "Loc", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "A3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::SetPosition(gp_Ax3)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRadius", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "R", 
              "const": true
            }
          ], 
          "key": "gp_Cylinder::SetRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "UReverse", 
          "parent": "gp_Cylinder", 
          "arguments": [], 
          "key": "gp_Cylinder::UReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "VReverse", 
          "parent": "gp_Cylinder", 
          "arguments": [], 
          "key": "gp_Cylinder::VReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direct", 
          "parent": "gp_Cylinder", 
          "arguments": [], 
          "key": "gp_Cylinder::Direct()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Cylinder", 
          "arguments": [], 
          "key": "gp_Cylinder::Axis()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coefficients", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A3", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B1", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B2", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B3", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C1", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C2", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C3", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Coefficients(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Cylinder", 
          "arguments": [], 
          "key": "gp_Cylinder::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Cylinder", 
          "arguments": [], 
          "key": "gp_Cylinder::Position()", 
          "returnType": "gp_Ax3 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Radius", 
          "parent": "gp_Cylinder", 
          "arguments": [], 
          "key": "gp_Cylinder::Radius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Cylinder", 
          "arguments": [], 
          "key": "gp_Cylinder::XAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Cylinder", 
          "arguments": [], 
          "key": "gp_Cylinder::YAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Mirrored(gp_Pnt)", 
          "returnType": "gp_Cylinder", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Mirrored(gp_Ax1)", 
          "returnType": "gp_Cylinder", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Mirrored(gp_Ax2)", 
          "returnType": "gp_Cylinder", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Cylinder::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Cylinder::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Cylinder", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Cylinder::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Cylinder::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Cylinder", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Transformed(gp_Trsf)", 
          "returnType": "gp_Cylinder", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Translated(gp_Vec)", 
          "returnType": "gp_Cylinder", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Cylinder", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cylinder::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Cylinder", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Cylinder.hxx", 
        56
      ], 
      "key": "gp_Cylinder"
    }, 
    {
      "declType": "class", 
      "name": "gp_Sphere", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Sphere", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::gp_Sphere()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Sphere", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "A3", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }
          ], 
          "key": "gp_Sphere::gp_Sphere(gp_Ax3, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Sphere", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Sphere", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::gp_Sphere(gp_Sphere)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "Loc", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "A3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::SetPosition(gp_Ax3)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRadius", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "R", 
              "const": true
            }
          ], 
          "key": "gp_Sphere::SetRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Area", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::Area()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coefficients", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A3", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B1", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B2", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B3", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C1", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C2", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C3", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Coefficients(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "UReverse", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::UReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "VReverse", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::VReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direct", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::Direct()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::Position()", 
          "returnType": "gp_Ax3 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Radius", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::Radius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Volume", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::Volume()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::XAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Sphere", 
          "arguments": [], 
          "key": "gp_Sphere::YAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Mirrored(gp_Pnt)", 
          "returnType": "gp_Sphere", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Mirrored(gp_Ax1)", 
          "returnType": "gp_Sphere", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Mirrored(gp_Ax2)", 
          "returnType": "gp_Sphere", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Sphere::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Sphere::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Sphere", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Sphere::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Sphere::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Sphere", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Transformed(gp_Trsf)", 
          "returnType": "gp_Sphere", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Translated(gp_Vec)", 
          "returnType": "gp_Sphere", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Sphere", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Sphere::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Sphere", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Sphere.hxx", 
        56
      ], 
      "key": "gp_Sphere"
    }, 
    {
      "declType": "class", 
      "name": "gp_Torus", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Torus", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::gp_Torus()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Torus", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "A3", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Torus::gp_Torus(gp_Ax3, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Torus", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Torus", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::gp_Torus(gp_Torus)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::SetAxis(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "Loc", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMajorRadius", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Torus::SetMajorRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMinorRadius", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Torus::SetMinorRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "A3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::SetPosition(gp_Ax3)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Area", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::Area()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "UReverse", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::UReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "VReverse", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::VReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direct", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::Direct()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::Axis()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coefficients", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "TColStd_Array1OfReal", 
              "name": "Coef", 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Coefficients(TColStd_Array1OfReal)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::Position()", 
          "returnType": "gp_Ax3 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MajorRadius", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::MajorRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MinorRadius", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::MinorRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Volume", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::Volume()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::XAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Torus", 
          "arguments": [], 
          "key": "gp_Torus::YAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Mirrored(gp_Pnt)", 
          "returnType": "gp_Torus", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Mirrored(gp_Ax1)", 
          "returnType": "gp_Torus", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Mirrored(gp_Ax2)", 
          "returnType": "gp_Torus", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Torus::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Torus::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Torus", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Torus::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Torus::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Torus", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Transformed(gp_Trsf)", 
          "returnType": "gp_Torus", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Translated(gp_Vec)", 
          "returnType": "gp_Torus", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Torus", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Torus::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Torus", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Torus.hxx", 
        70
      ], 
      "key": "gp_Torus"
    }, 
    {
      "declType": "class", 
      "name": "gp_Cone", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Cone", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::gp_Cone()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Cone", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "A3", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }
          ], 
          "key": "gp_Cone::gp_Cone(gp_Ax3, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Cone", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Cone", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::gp_Cone(gp_Cone)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::SetAxis(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "Loc", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::SetLocation(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Ax3", 
              "name": "A3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::SetPosition(gp_Ax3)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRadius", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "R", 
              "const": true
            }
          ], 
          "key": "gp_Cone::SetRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetSemiAngle", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Cone::SetSemiAngle(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Apex", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::Apex()", 
          "returnType": "gp_Pnt", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "UReverse", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::UReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "VReverse", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::VReverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direct", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::Direct()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::Axis()", 
          "returnType": "gp_Ax1 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coefficients", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A3", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B1", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B2", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B3", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C1", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C2", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C3", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Coefficients(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::Location()", 
          "returnType": "gp_Pnt const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::Position()", 
          "returnType": "gp_Ax3 const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "RefRadius", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::RefRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SemiAngle", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::SemiAngle()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::XAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Cone", 
          "arguments": [], 
          "key": "gp_Cone::YAxis()", 
          "returnType": "gp_Ax1", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Mirror(gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Mirrored(gp_Pnt)", 
          "returnType": "gp_Cone", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Mirror(gp_Ax1)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Mirrored(gp_Ax1)", 
          "returnType": "gp_Cone", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Mirror(gp_Ax2)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Ax2", 
              "name": "A2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Mirrored(gp_Ax2)", 
          "returnType": "gp_Cone", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Cone::Rotate(gp_Ax1, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Ax1", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Cone::Rotated(gp_Ax1, Standard_Real)", 
          "returnType": "gp_Cone", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Cone::Scale(gp_Pnt, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Cone::Scaled(gp_Pnt, Standard_Real)", 
          "returnType": "gp_Cone", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Transform(gp_Trsf)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Transformed(gp_Trsf)", 
          "returnType": "gp_Cone", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Translate(gp_Vec)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Vec", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Translated(gp_Vec)", 
          "returnType": "gp_Cone", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Translate(gp_Pnt, gp_Pnt)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Cone", 
          "arguments": [
            {
              "type": "gp_Pnt", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Cone::Translated(gp_Pnt, gp_Pnt)", 
          "returnType": "gp_Cone", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Cone.hxx", 
        66
      ], 
      "key": "gp_Cone"
    }, 
    {
      "declType": "class", 
      "name": "gp_XY", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_XY", 
          "parent": "gp_XY", 
          "arguments": [], 
          "key": "gp_XY::gp_XY()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_XY", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "key": "gp_XY::gp_XY(Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_XY", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::gp_XY(gp_XY)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Xi", 
              "const": true
            }
          ], 
          "key": "gp_XY::SetCoord(Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "key": "gp_XY::SetCoord(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetX", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }
          ], 
          "key": "gp_XY::SetX(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetY", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "key": "gp_XY::SetY(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "key": "gp_XY::Coord(Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ChangeCoord", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "theIndex", 
              "const": true
            }
          ], 
          "key": "gp_XY::ChangeCoord(Standard_Integer)", 
          "returnType": "Standard_Real &", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "ref": true
            }
          ], 
          "key": "gp_XY::Coord(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "X", 
          "parent": "gp_XY", 
          "arguments": [], 
          "key": "gp_XY::X()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Y", 
          "parent": "gp_XY", 
          "arguments": [], 
          "key": "gp_XY::Y()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Modulus", 
          "parent": "gp_XY", 
          "arguments": [], 
          "key": "gp_XY::Modulus()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareModulus", 
          "parent": "gp_XY", 
          "arguments": [], 
          "key": "gp_XY::SquareModulus()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsEqual", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Tolerance", 
              "const": true
            }
          ], 
          "key": "gp_XY::IsEqual(gp_XY, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Add", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::Add(gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Added", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::Added(gp_XY)", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Crossed", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::Crossed(gp_XY)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossMagnitude", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::CrossMagnitude(gp_XY)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossSquareMagnitude", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::CrossSquareMagnitude(gp_XY)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divide", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_XY::Divide(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divided", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_XY::Divided(Standard_Real)", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Dot", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::Dot(gp_XY)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_XY::Multiply(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::Multiply(gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "Matrix", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::Multiply(gp_Mat2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_XY::Multiplied(Standard_Real)", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::Multiplied(gp_XY)", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "Matrix", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::Multiplied(gp_Mat2d)", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normalize", 
          "parent": "gp_XY", 
          "arguments": [], 
          "key": "gp_XY::Normalize()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normalized", 
          "parent": "gp_XY", 
          "arguments": [], 
          "key": "gp_XY::Normalized()", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_XY", 
          "arguments": [], 
          "key": "gp_XY::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_XY", 
          "arguments": [], 
          "key": "gp_XY::Reversed()", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_XY", 
              "name": "XY1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_XY", 
              "name": "XY2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::SetLinearForm(Standard_Real, gp_XY, Standard_Real, gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_XY", 
              "name": "XY1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_XY", 
              "name": "XY2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "XY3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::SetLinearForm(Standard_Real, gp_XY, Standard_Real, gp_XY, gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_XY", 
              "name": "XY1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "XY2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::SetLinearForm(Standard_Real, gp_XY, gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "XY1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "XY2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::SetLinearForm(gp_XY, gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtract", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::Subtract(gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtracted", 
          "parent": "gp_XY", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_XY::Subtracted(gp_XY)", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_XY.hxx", 
        37
      ], 
      "key": "gp_XY"
    }, 
    {
      "declType": "class", 
      "name": "gp_Mat2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Mat2d", 
          "parent": "gp_Mat2d", 
          "arguments": [], 
          "key": "gp_Mat2d::gp_Mat2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Mat2d", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Col1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "Col2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::gp_Mat2d(gp_XY, gp_XY)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Mat2d", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::gp_Mat2d(gp_Mat2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetCol", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }, 
            {
              "type": "gp_XY", 
              "name": "Value", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::SetCol(Standard_Integer, gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCols", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Col1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "Col2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::SetCols(gp_XY, gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetDiagonal", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X1", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "X2", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::SetDiagonal(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetIdentity", 
          "parent": "gp_Mat2d", 
          "arguments": [], 
          "key": "gp_Mat2d::SetIdentity()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRotation", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::SetRotation(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRow", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "gp_XY", 
              "name": "Value", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::SetRow(Standard_Integer, gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRows", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Row1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "Row2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::SetRows(gp_XY, gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetScale", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::SetScale(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetValue", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Value", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::SetValue(Standard_Integer, Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Column", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::Column(Standard_Integer)", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Determinant", 
          "parent": "gp_Mat2d", 
          "arguments": [], 
          "key": "gp_Mat2d::Determinant()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Diagonal", 
          "parent": "gp_Mat2d", 
          "arguments": [], 
          "key": "gp_Mat2d::Diagonal()", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Row", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::Row(Standard_Integer)", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Value", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::Value(Standard_Integer, Standard_Integer)", 
          "returnType": "Standard_Real const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ChangeValue", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::ChangeValue(Standard_Integer, Standard_Integer)", 
          "returnType": "Standard_Real &", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsSingular", 
          "parent": "gp_Mat2d", 
          "arguments": [], 
          "key": "gp_Mat2d::IsSingular()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Add", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::Add(gp_Mat2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Added", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::Added(gp_Mat2d)", 
          "returnType": "gp_Mat2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divide", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::Divide(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divided", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::Divided(Standard_Real)", 
          "returnType": "gp_Mat2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Invert", 
          "parent": "gp_Mat2d", 
          "arguments": [], 
          "key": "gp_Mat2d::Invert()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Inverted", 
          "parent": "gp_Mat2d", 
          "arguments": [], 
          "key": "gp_Mat2d::Inverted()", 
          "returnType": "gp_Mat2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::Multiplied(gp_Mat2d)", 
          "returnType": "gp_Mat2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::Multiply(gp_Mat2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "PreMultiply", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::PreMultiply(gp_Mat2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::Multiplied(Standard_Real)", 
          "returnType": "gp_Mat2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::Multiply(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Power", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::Power(Standard_Integer)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Powered", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_Mat2d::Powered(Standard_Integer)", 
          "returnType": "gp_Mat2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtract", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::Subtract(gp_Mat2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtracted", 
          "parent": "gp_Mat2d", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Mat2d::Subtracted(gp_Mat2d)", 
          "returnType": "gp_Mat2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transpose", 
          "parent": "gp_Mat2d", 
          "arguments": [], 
          "key": "gp_Mat2d::Transpose()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transposed", 
          "parent": "gp_Mat2d", 
          "arguments": [], 
          "key": "gp_Mat2d::Transposed()", 
          "returnType": "gp_Mat2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Mat2d.hxx", 
        35
      ], 
      "key": "gp_Mat2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Trsf2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Trsf2d", 
          "parent": "gp_Trsf2d", 
          "arguments": [], 
          "key": "gp_Trsf2d::gp_Trsf2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Trsf2d", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Trsf", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::gp_Trsf2d(gp_Trsf)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Trsf2d", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::gp_Trsf2d(gp_Trsf2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetMirror", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::SetMirror(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMirror", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::SetMirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRotation", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Trsf2d::SetRotation(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetScale", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Trsf2d::SetScale(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTransformation", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "FromSystem1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Ax2d", 
              "name": "ToSystem2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::SetTransformation(gp_Ax2d, gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTransformation", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "ToSystem", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::SetTransformation(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTranslation", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::SetTranslation(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTranslation", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::SetTranslation(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTranslationPart", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::SetTranslationPart(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetScaleFactor", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Trsf2d::SetScaleFactor(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsNegative", 
          "parent": "gp_Trsf2d", 
          "arguments": [], 
          "key": "gp_Trsf2d::IsNegative()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Form", 
          "parent": "gp_Trsf2d", 
          "arguments": [], 
          "key": "gp_Trsf2d::Form()", 
          "returnType": "gp_TrsfForm", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ScaleFactor", 
          "parent": "gp_Trsf2d", 
          "arguments": [], 
          "key": "gp_Trsf2d::ScaleFactor()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "TranslationPart", 
          "parent": "gp_Trsf2d", 
          "arguments": [], 
          "key": "gp_Trsf2d::TranslationPart()", 
          "returnType": "gp_XY const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "VectorialPart", 
          "parent": "gp_Trsf2d", 
          "arguments": [], 
          "key": "gp_Trsf2d::VectorialPart()", 
          "returnType": "gp_Mat2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "HVectorialPart", 
          "parent": "gp_Trsf2d", 
          "arguments": [], 
          "key": "gp_Trsf2d::HVectorialPart()", 
          "returnType": "gp_Mat2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "RotationPart", 
          "parent": "gp_Trsf2d", 
          "arguments": [], 
          "key": "gp_Trsf2d::RotationPart()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Value", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }
          ], 
          "key": "gp_Trsf2d::Value(Standard_Integer, Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Invert", 
          "parent": "gp_Trsf2d", 
          "arguments": [], 
          "key": "gp_Trsf2d::Invert()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Inverted", 
          "parent": "gp_Trsf2d", 
          "arguments": [], 
          "key": "gp_Trsf2d::Inverted()", 
          "returnType": "gp_Trsf2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::Multiplied(gp_Trsf2d)", 
          "returnType": "gp_Trsf2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::Multiply(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "PreMultiply", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::PreMultiply(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Power", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_Trsf2d::Power(Standard_Integer)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Powered", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_Trsf2d::Powered(Standard_Integer)", 
          "returnType": "gp_Trsf2d", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transforms", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::Transforms(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transforms", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Coord", 
              "ref": true
            }
          ], 
          "key": "gp_Trsf2d::Transforms(gp_XY)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetValues", 
          "parent": "gp_Trsf2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "a11", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a12", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a13", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a21", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a22", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "a23", 
              "const": true
            }
          ], 
          "key": "gp_Trsf2d::SetValues(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Trsf2d.hxx", 
        56
      ], 
      "key": "gp_Trsf2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_GTrsf2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_GTrsf2d", 
          "parent": "gp_GTrsf2d", 
          "arguments": [], 
          "key": "gp_GTrsf2d::gp_GTrsf2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_GTrsf2d", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::gp_GTrsf2d(gp_Trsf2d)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_GTrsf2d", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "M", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_XY", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::gp_GTrsf2d(gp_Mat2d, gp_XY)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_GTrsf2d", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_GTrsf2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::gp_GTrsf2d(gp_GTrsf2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAffinity", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ratio", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf2d::SetAffinity(gp_Ax2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetValue", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Value", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf2d::SetValue(Standard_Integer, Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTranslationPart", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::SetTranslationPart(gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetTrsf2d", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::SetTrsf2d(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetVectorialPart", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_Mat2d", 
              "name": "Matrix", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::SetVectorialPart(gp_Mat2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsNegative", 
          "parent": "gp_GTrsf2d", 
          "arguments": [], 
          "key": "gp_GTrsf2d::IsNegative()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsSingular", 
          "parent": "gp_GTrsf2d", 
          "arguments": [], 
          "key": "gp_GTrsf2d::IsSingular()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Form", 
          "parent": "gp_GTrsf2d", 
          "arguments": [], 
          "key": "gp_GTrsf2d::Form()", 
          "returnType": "gp_TrsfForm", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "TranslationPart", 
          "parent": "gp_GTrsf2d", 
          "arguments": [], 
          "key": "gp_GTrsf2d::TranslationPart()", 
          "returnType": "gp_XY const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "VectorialPart", 
          "parent": "gp_GTrsf2d", 
          "arguments": [], 
          "key": "gp_GTrsf2d::VectorialPart()", 
          "returnType": "gp_Mat2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Value", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Row", 
              "const": true
            }, 
            {
              "type": "Standard_Integer", 
              "name": "Col", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf2d::Value(Standard_Integer, Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Invert", 
          "parent": "gp_GTrsf2d", 
          "arguments": [], 
          "key": "gp_GTrsf2d::Invert()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Inverted", 
          "parent": "gp_GTrsf2d", 
          "arguments": [], 
          "key": "gp_GTrsf2d::Inverted()", 
          "returnType": "gp_GTrsf2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_GTrsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::Multiplied(gp_GTrsf2d)", 
          "returnType": "gp_GTrsf2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_GTrsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::Multiply(gp_GTrsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "PreMultiply", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_GTrsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::PreMultiply(gp_GTrsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Power", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf2d::Power(Standard_Integer)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Powered", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "N", 
              "const": true
            }
          ], 
          "key": "gp_GTrsf2d::Powered(Standard_Integer)", 
          "returnType": "gp_GTrsf2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transforms", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Coord", 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::Transforms(gp_XY)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::Transformed(gp_XY)", 
          "returnType": "gp_XY", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transforms", 
          "parent": "gp_GTrsf2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "ref": true
            }
          ], 
          "key": "gp_GTrsf2d::Transforms(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Trsf2d", 
          "parent": "gp_GTrsf2d", 
          "arguments": [], 
          "key": "gp_GTrsf2d::Trsf2d()", 
          "returnType": "gp_Trsf2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_GTrsf2d.hxx", 
        67
      ], 
      "key": "gp_GTrsf2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Vec2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Vec2d", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::gp_Vec2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Vec2d", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::gp_Vec2d(gp_Dir2d)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Vec2d", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::gp_Vec2d(gp_XY)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Vec2d", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::gp_Vec2d(Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Vec2d", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::gp_Vec2d(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Vec2d", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::gp_Vec2d(gp_Vec2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Xi", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::SetCoord(Standard_Integer, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetCoord", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::SetCoord(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetX", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "X", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::SetX(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetY", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Y", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::SetY(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXY", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_XY", 
              "name": "Coord", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::SetXY(gp_XY)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Integer", 
              "name": "Index", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::Coord(Standard_Integer)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coord", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Xv", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Yv", 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Coord(Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "X", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::X()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Y", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::Y()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XY", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::XY()", 
          "returnType": "gp_XY const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsEqual", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::IsEqual(gp_Vec2d, Standard_Real, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsNormal", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::IsNormal(gp_Vec2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsOpposite", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::IsOpposite(gp_Vec2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsParallel", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "AngularTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::IsParallel(gp_Vec2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Angle", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Angle(gp_Vec2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Magnitude", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::Magnitude()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareMagnitude", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::SquareMagnitude()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Add", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Add(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Added", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Added(gp_Vec2d)", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Crossed", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Crossed(gp_Vec2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossMagnitude", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::CrossMagnitude(gp_Vec2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "CrossSquareMagnitude", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::CrossSquareMagnitude(gp_Vec2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divide", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::Divide(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Divided", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::Divided(Standard_Real)", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Dot", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Dot(gp_Vec2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "GetNormal", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::GetNormal()", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiply", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::Multiply(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Multiplied", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Scalar", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::Multiplied(Standard_Real)", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normalize", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::Normalize()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normalized", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::Normalized()", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Vec2d", 
          "arguments": [], 
          "key": "gp_Vec2d::Reversed()", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtract", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Subtract(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Subtracted", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Subtracted(gp_Vec2d)", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V3", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::SetLinearForm(Standard_Real, gp_Vec2d, Standard_Real, gp_Vec2d, gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "A2", 
              "const": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::SetLinearForm(Standard_Real, gp_Vec2d, Standard_Real, gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A1", 
              "const": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "V2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::SetLinearForm(Standard_Real, gp_Vec2d, gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLinearForm", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "Left", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Vec2d", 
              "name": "Right", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::SetLinearForm(gp_Vec2d, gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Mirror(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Mirrored(gp_Vec2d)", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Mirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Mirrored(gp_Ax2d)", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::Rotate(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::Rotated(Standard_Real)", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::Scale(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Vec2d::Scaled(Standard_Real)", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Transform(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Vec2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Vec2d::Transformed(gp_Trsf2d)", 
          "returnType": "gp_Vec2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Vec2d.hxx", 
        38
      ], 
      "key": "gp_Vec2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Ax22d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Ax22d", 
          "parent": "gp_Ax22d", 
          "arguments": [], 
          "key": "gp_Ax22d::gp_Ax22d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax22d", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir2d", 
              "name": "Vx", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir2d", 
              "name": "Vy", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::gp_Ax22d(gp_Pnt2d, gp_Dir2d, gp_Dir2d)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax22d", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "key": "gp_Ax22d::gp_Ax22d(gp_Pnt2d, gp_Dir2d, Standard_Boolean)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax22d", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "key": "gp_Ax22d::gp_Ax22d(gp_Ax2d, Standard_Boolean)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Ax22d", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::gp_Ax22d(gp_Ax22d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::SetAxis(gp_Ax22d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXAxis", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::SetXAxis(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetYAxis", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A1", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::SetYAxis(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::SetLocation(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXDirection", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "Vx", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::SetXDirection(gp_Dir2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetYDirection", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "Vy", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::SetYDirection(gp_Dir2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Ax22d", 
          "arguments": [], 
          "key": "gp_Ax22d::XAxis()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Ax22d", 
          "arguments": [], 
          "key": "gp_Ax22d::YAxis()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Ax22d", 
          "arguments": [], 
          "key": "gp_Ax22d::Location()", 
          "returnType": "gp_Pnt2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XDirection", 
          "parent": "gp_Ax22d", 
          "arguments": [], 
          "key": "gp_Ax22d::XDirection()", 
          "returnType": "gp_Dir2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YDirection", 
          "parent": "gp_Ax22d", 
          "arguments": [], 
          "key": "gp_Ax22d::YDirection()", 
          "returnType": "gp_Dir2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::Mirror(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::Mirrored(gp_Pnt2d)", 
          "returnType": "gp_Ax22d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::Mirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::Mirrored(gp_Ax2d)", 
          "returnType": "gp_Ax22d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Ax22d::Rotate(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Ax22d::Rotated(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Ax22d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Ax22d::Scale(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Ax22d::Scaled(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Ax22d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::Transform(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::Transformed(gp_Trsf2d)", 
          "returnType": "gp_Ax22d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::Translate(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::Translated(gp_Vec2d)", 
          "returnType": "gp_Ax22d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::Translate(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Ax22d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Ax22d::Translated(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "gp_Ax22d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Ax22d.hxx", 
        53
      ], 
      "key": "gp_Ax22d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Lin2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Lin2d", 
          "parent": "gp_Lin2d", 
          "arguments": [], 
          "key": "gp_Lin2d::gp_Lin2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Lin2d", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::gp_Lin2d(gp_Ax2d)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Lin2d", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Dir2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::gp_Lin2d(gp_Pnt2d, gp_Dir2d)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Lin2d", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C", 
              "const": true
            }
          ], 
          "key": "gp_Lin2d::gp_Lin2d(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Lin2d", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::gp_Lin2d(gp_Lin2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Lin2d", 
          "arguments": [], 
          "key": "gp_Lin2d::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Lin2d", 
          "arguments": [], 
          "key": "gp_Lin2d::Reversed()", 
          "returnType": "gp_Lin2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetDirection", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Dir2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::SetDirection(gp_Dir2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::SetLocation(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetPosition", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::SetPosition(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coefficients", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C", 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Coefficients(Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Direction", 
          "parent": "gp_Lin2d", 
          "arguments": [], 
          "key": "gp_Lin2d::Direction()", 
          "returnType": "gp_Dir2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Lin2d", 
          "arguments": [], 
          "key": "gp_Lin2d::Location()", 
          "returnType": "gp_Pnt2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Lin2d", 
          "arguments": [], 
          "key": "gp_Lin2d::Position()", 
          "returnType": "gp_Ax2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Angle", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Angle(gp_Lin2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Contains", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Lin2d::Contains(gp_Pnt2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Distance(gp_Pnt2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Distance(gp_Lin2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::SquareDistance(gp_Pnt2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Lin2d", 
              "name": "Other", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::SquareDistance(gp_Lin2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Normal", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Normal(gp_Pnt2d)", 
          "returnType": "gp_Lin2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Mirror(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Mirrored(gp_Pnt2d)", 
          "returnType": "gp_Lin2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Mirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Mirrored(gp_Ax2d)", 
          "returnType": "gp_Lin2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Lin2d::Rotate(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Lin2d::Rotated(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Lin2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Lin2d::Scale(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Lin2d::Scaled(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Lin2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Transform(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Transformed(gp_Trsf2d)", 
          "returnType": "gp_Lin2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Translate(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Translated(gp_Vec2d)", 
          "returnType": "gp_Lin2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Translate(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Lin2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Lin2d::Translated(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "gp_Lin2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Lin2d.hxx", 
        51
      ], 
      "key": "gp_Lin2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Circ2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Circ2d", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::gp_Circ2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Circ2d", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "XAxis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "key": "gp_Circ2d::gp_Circ2d(gp_Ax2d, Standard_Real, Standard_Boolean)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Circ2d", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "Axis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }
          ], 
          "key": "gp_Circ2d::gp_Circ2d(gp_Ax22d, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Circ2d", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Circ2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::gp_Circ2d(gp_Circ2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::SetLocation(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXAxis", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::SetXAxis(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::SetAxis(gp_Ax22d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetYAxis", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::SetYAxis(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetRadius", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Radius", 
              "const": true
            }
          ], 
          "key": "gp_Circ2d::SetRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Area", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::Area()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coefficients", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "E", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "F", 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Coefficients(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Contains", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "LinearTolerance", 
              "const": true
            }
          ], 
          "key": "gp_Circ2d::Contains(gp_Pnt2d, Standard_Real)", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Distance", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Distance(gp_Pnt2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SquareDistance", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::SquareDistance(gp_Pnt2d)", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Length", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::Length()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::Location()", 
          "returnType": "gp_Pnt2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Radius", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::Radius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::Axis()", 
          "returnType": "gp_Ax22d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Position", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::Position()", 
          "returnType": "gp_Ax22d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::XAxis()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::YAxis()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::Reversed()", 
          "returnType": "gp_Circ2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsDirect", 
          "parent": "gp_Circ2d", 
          "arguments": [], 
          "key": "gp_Circ2d::IsDirect()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Mirror(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Mirrored(gp_Pnt2d)", 
          "returnType": "gp_Circ2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Mirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Mirrored(gp_Ax2d)", 
          "returnType": "gp_Circ2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Circ2d::Rotate(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Circ2d::Rotated(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Circ2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Circ2d::Scale(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Circ2d::Scaled(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Circ2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Transform(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Transformed(gp_Trsf2d)", 
          "returnType": "gp_Circ2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Translate(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Translated(gp_Vec2d)", 
          "returnType": "gp_Circ2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Translate(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Circ2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Circ2d::Translated(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "gp_Circ2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Circ2d.hxx", 
        58
      ], 
      "key": "gp_Circ2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Elips2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Elips2d", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::gp_Elips2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Elips2d", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "MajorAxis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "key": "gp_Elips2d::gp_Elips2d(gp_Ax2d, Standard_Real, Standard_Real, Standard_Boolean)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Elips2d", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Elips2d::gp_Elips2d(gp_Ax22d, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Elips2d", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Elips2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::gp_Elips2d(gp_Elips2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::SetLocation(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMajorRadius", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Elips2d::SetMajorRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMinorRadius", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Elips2d::SetMinorRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::SetAxis(gp_Ax22d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXAxis", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::SetXAxis(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetYAxis", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::SetYAxis(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Area", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Area()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coefficients", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "E", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "F", 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Coefficients(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Directrix1", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Directrix1()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Directrix2", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Directrix2()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Eccentricity", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Eccentricity()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focal", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Focal()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focus1", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Focus1()", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focus2", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Focus2()", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Location()", 
          "returnType": "gp_Pnt2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MajorRadius", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::MajorRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MinorRadius", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::MinorRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Parameter", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Parameter()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Axis()", 
          "returnType": "gp_Ax22d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::XAxis()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::YAxis()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::Reversed()", 
          "returnType": "gp_Elips2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsDirect", 
          "parent": "gp_Elips2d", 
          "arguments": [], 
          "key": "gp_Elips2d::IsDirect()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Mirror(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Mirrored(gp_Pnt2d)", 
          "returnType": "gp_Elips2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Mirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Mirrored(gp_Ax2d)", 
          "returnType": "gp_Elips2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Elips2d::Rotate(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Elips2d::Rotated(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Elips2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Elips2d::Scale(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Elips2d::Scaled(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Elips2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Transform(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Transformed(gp_Trsf2d)", 
          "returnType": "gp_Elips2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Translate(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Translated(gp_Vec2d)", 
          "returnType": "gp_Elips2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Translate(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Elips2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Elips2d::Translated(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "gp_Elips2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Elips2d.hxx", 
        54
      ], 
      "key": "gp_Elips2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Hypr2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Hypr2d", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::gp_Hypr2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Hypr2d", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "MajorAxis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "Sense", 
              "default": "true", 
              "const": true
            }
          ], 
          "key": "gp_Hypr2d::gp_Hypr2d(gp_Ax2d, Standard_Real, Standard_Real, Standard_Boolean)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Hypr2d", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Hypr2d::gp_Hypr2d(gp_Ax22d, Standard_Real, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Hypr2d", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Hypr2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::gp_Hypr2d(gp_Hypr2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::SetLocation(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMajorRadius", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "MajorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Hypr2d::SetMajorRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMinorRadius", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "MinorRadius", 
              "const": true
            }
          ], 
          "key": "gp_Hypr2d::SetMinorRadius(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::SetAxis(gp_Ax22d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetXAxis", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::SetXAxis(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetYAxis", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::SetYAxis(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Asymptote1", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Asymptote1()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Asymptote2", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Asymptote2()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coefficients", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "E", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "F", 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Coefficients(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ConjugateBranch1", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::ConjugateBranch1()", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "ConjugateBranch2", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::ConjugateBranch2()", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Directrix1", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Directrix1()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Directrix2", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Directrix2()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Eccentricity", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Eccentricity()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focal", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Focal()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focus1", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Focus1()", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focus2", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Focus2()", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Location()", 
          "returnType": "gp_Pnt2d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MajorRadius", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::MajorRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MinorRadius", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::MinorRadius()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "OtherBranch", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::OtherBranch()", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Parameter", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Parameter()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Axis()", 
          "returnType": "gp_Ax22d const &", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "XAxis", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::XAxis()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "YAxis", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::YAxis()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::Reversed()", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsDirect", 
          "parent": "gp_Hypr2d", 
          "arguments": [], 
          "key": "gp_Hypr2d::IsDirect()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Mirror(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Mirrored(gp_Pnt2d)", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Mirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Mirrored(gp_Ax2d)", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Hypr2d::Rotate(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Hypr2d::Rotated(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Hypr2d::Scale(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Hypr2d::Scaled(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Transform(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Transformed(gp_Trsf2d)", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Translate(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Translated(gp_Vec2d)", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Translate(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Hypr2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Hypr2d::Translated(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "gp_Hypr2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Hypr2d.hxx", 
        76
      ], 
      "key": "gp_Hypr2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_Parab2d", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_Parab2d", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::gp_Parab2d()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Parab2d", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "theMirrorAxis", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theFocalLength", 
              "const": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "theSense", 
              "default": "true", 
              "const": true
            }
          ], 
          "key": "gp_Parab2d::gp_Parab2d(gp_Ax2d, Standard_Real, Standard_Boolean)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Parab2d", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "theAxes", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theFocalLength", 
              "const": true
            }
          ], 
          "key": "gp_Parab2d::gp_Parab2d(gp_Ax22d, Standard_Real)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Parab2d", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "theDirectrix", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "theFocus", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Boolean", 
              "name": "theSense", 
              "default": "true", 
              "const": true
            }
          ], 
          "key": "gp_Parab2d::gp_Parab2d(gp_Ax2d, gp_Pnt2d, Standard_Boolean)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_Parab2d", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Parab2d", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::gp_Parab2d(gp_Parab2d)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "SetFocal", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "Focal", 
              "const": true
            }
          ], 
          "key": "gp_Parab2d::SetFocal(Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetLocation", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::SetLocation(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetMirrorAxis", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::SetMirrorAxis(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "SetAxis", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Ax22d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::SetAxis(gp_Ax22d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Coefficients", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "A", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "B", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "C", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "D", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "E", 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "F", 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Coefficients(Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real, Standard_Real)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Directrix", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::Directrix()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focal", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::Focal()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Focus", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::Focus()", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Location", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::Location()", 
          "returnType": "gp_Pnt2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "MirrorAxis", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::MirrorAxis()", 
          "returnType": "gp_Ax2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Axis", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::Axis()", 
          "returnType": "gp_Ax22d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Parameter", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::Parameter()", 
          "returnType": "Standard_Real", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reverse", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::Reverse()", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Reversed", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::Reversed()", 
          "returnType": "gp_Parab2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "IsDirect", 
          "parent": "gp_Parab2d", 
          "arguments": [], 
          "key": "gp_Parab2d::IsDirect()", 
          "returnType": "Standard_Boolean", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Mirror(gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Mirrored(gp_Pnt2d)", 
          "returnType": "gp_Parab2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirror", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Mirror(gp_Ax2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Mirrored", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Ax2d", 
              "name": "A", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Mirrored(gp_Ax2d)", 
          "returnType": "gp_Parab2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotate", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Parab2d::Rotate(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Rotated", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "Ang", 
              "const": true
            }
          ], 
          "key": "gp_Parab2d::Rotated(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Parab2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scale", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Parab2d::Scale(gp_Pnt2d, Standard_Real)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Scaled", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "S", 
              "const": true
            }
          ], 
          "key": "gp_Parab2d::Scaled(gp_Pnt2d, Standard_Real)", 
          "returnType": "gp_Parab2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transform", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Transform(gp_Trsf2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Transformed", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Trsf2d", 
              "name": "T", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Transformed(gp_Trsf2d)", 
          "returnType": "gp_Parab2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Translate(gp_Vec2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Vec2d", 
              "name": "V", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Translated(gp_Vec2d)", 
          "returnType": "gp_Parab2d", 
          "const": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translate", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Translate(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Translated", 
          "parent": "gp_Parab2d", 
          "arguments": [
            {
              "type": "gp_Pnt2d", 
              "name": "P1", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Pnt2d", 
              "name": "P2", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_Parab2d::Translated(gp_Pnt2d, gp_Pnt2d)", 
          "returnType": "gp_Parab2d", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_Parab2d.hxx", 
        57
      ], 
      "key": "gp_Parab2d"
    }, 
    {
      "declType": "class", 
      "name": "gp_VectorWithNullMagnitude", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_VectorWithNullMagnitude", 
          "parent": "gp_VectorWithNullMagnitude", 
          "arguments": [], 
          "key": "gp_VectorWithNullMagnitude::gp_VectorWithNullMagnitude()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_VectorWithNullMagnitude", 
          "parent": "gp_VectorWithNullMagnitude", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "const": true
            }
          ], 
          "key": "gp_VectorWithNullMagnitude::gp_VectorWithNullMagnitude(Standard_CString)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_VectorWithNullMagnitude", 
          "parent": "gp_VectorWithNullMagnitude", 
          "arguments": [
            {
              "type": "gp_VectorWithNullMagnitude", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_VectorWithNullMagnitude::gp_VectorWithNullMagnitude(gp_VectorWithNullMagnitude)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "Raise", 
          "parent": "gp_VectorWithNullMagnitude", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "default": "\"\"", 
              "const": true
            }
          ], 
          "key": "gp_VectorWithNullMagnitude::Raise(Standard_CString)", 
          "returnType": "void", 
          "static": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Raise", 
          "parent": "gp_VectorWithNullMagnitude", 
          "arguments": [
            {
              "type": "Standard_SStream", 
              "name": "theMessage", 
              "ref": true
            }
          ], 
          "key": "gp_VectorWithNullMagnitude::Raise(Standard_SStream)", 
          "returnType": "void", 
          "static": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "NewInstance", 
          "parent": "gp_VectorWithNullMagnitude", 
          "arguments": [
            {
              "type": "Standard_CString", 
              "name": "theMessage", 
              "default": "\"\"", 
              "const": true
            }
          ], 
          "key": "gp_VectorWithNullMagnitude::NewInstance(Standard_CString)", 
          "returnType": "opencascade::handle<gp_VectorWithNullMagnitude>", 
          "static": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "get_type_name", 
          "parent": "gp_VectorWithNullMagnitude", 
          "arguments": [], 
          "key": "gp_VectorWithNullMagnitude::get_type_name()", 
          "returnType": "char const *", 
          "static": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "get_type_descriptor", 
          "parent": "gp_VectorWithNullMagnitude", 
          "arguments": [], 
          "key": "gp_VectorWithNullMagnitude::get_type_descriptor()", 
          "returnType": "opencascade::handle<Standard_Type> const &", 
          "static": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "DynamicType", 
          "parent": "gp_VectorWithNullMagnitude", 
          "arguments": [], 
          "key": "gp_VectorWithNullMagnitude::DynamicType()", 
          "returnType": "opencascade::handle<Standard_Type> const &", 
          "const": "1", 
          "throws": true, 
          "virtuality": "virtual"
        }
      ], 
      "artificial": false, 
      "bases": [
        {
          "access": "public", 
          "name": "Standard_DomainError"
        }
      ], 
      "location": [
        "/usr/local/include/opencascade/gp_VectorWithNullMagnitude.hxx", 
        35
      ], 
      "key": "gp_VectorWithNullMagnitude"
    }, 
    {
      "declType": "class", 
      "name": "gp_QuaternionNLerp", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_QuaternionNLerp", 
          "parent": "gp_QuaternionNLerp", 
          "arguments": [], 
          "key": "gp_QuaternionNLerp::gp_QuaternionNLerp()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_QuaternionNLerp", 
          "parent": "gp_QuaternionNLerp", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theQStart", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Quaternion", 
              "name": "theQEnd", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_QuaternionNLerp::gp_QuaternionNLerp(gp_Quaternion, gp_Quaternion)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_QuaternionNLerp", 
          "parent": "gp_QuaternionNLerp", 
          "arguments": [
            {
              "type": "gp_QuaternionNLerp", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_QuaternionNLerp::gp_QuaternionNLerp(gp_QuaternionNLerp)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "Interpolate", 
          "parent": "gp_QuaternionNLerp", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theQStart", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Quaternion", 
              "name": "theQEnd", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theT"
            }
          ], 
          "key": "gp_QuaternionNLerp::Interpolate(gp_Quaternion, gp_Quaternion, Standard_Real)", 
          "returnType": "gp_Quaternion", 
          "static": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Init", 
          "parent": "gp_QuaternionNLerp", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theQStart", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Quaternion", 
              "name": "theQEnd", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_QuaternionNLerp::Init(gp_Quaternion, gp_Quaternion)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "InitFromUnit", 
          "parent": "gp_QuaternionNLerp", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theQStart", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Quaternion", 
              "name": "theQEnd", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_QuaternionNLerp::InitFromUnit(gp_Quaternion, gp_Quaternion)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Interpolate", 
          "parent": "gp_QuaternionNLerp", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theT"
            }, 
            {
              "type": "gp_Quaternion", 
              "name": "theResultQ", 
              "ref": true
            }
          ], 
          "key": "gp_QuaternionNLerp::Interpolate(Standard_Real, gp_Quaternion)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_QuaternionNLerp.hxx", 
        21
      ], 
      "key": "gp_QuaternionNLerp"
    }, 
    {
      "declType": "class", 
      "name": "gp_QuaternionSLerp", 
      "abstract": false, 
      "declarations": [
        {
          "declType": "method", 
          "name": "gp_QuaternionSLerp", 
          "parent": "gp_QuaternionSLerp", 
          "arguments": [], 
          "key": "gp_QuaternionSLerp::gp_QuaternionSLerp()", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_QuaternionSLerp", 
          "parent": "gp_QuaternionSLerp", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theQStart", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Quaternion", 
              "name": "theQEnd", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_QuaternionSLerp::gp_QuaternionSLerp(gp_Quaternion, gp_Quaternion)", 
          "returnType": "", 
          "throws": true, 
          "type": "constructor"
        }, 
        {
          "declType": "method", 
          "name": "gp_QuaternionSLerp", 
          "parent": "gp_QuaternionSLerp", 
          "arguments": [
            {
              "type": "gp_QuaternionSLerp", 
              "name": "arg0", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_QuaternionSLerp::gp_QuaternionSLerp(gp_QuaternionSLerp)", 
          "returnType": "", 
          "artificial": "1", 
          "throws": true, 
          "type": "constructor", 
          "copyConstructor": true
        }, 
        {
          "declType": "method", 
          "name": "Interpolate", 
          "parent": "gp_QuaternionSLerp", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theQStart", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Quaternion", 
              "name": "theQEnd", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "Standard_Real", 
              "name": "theT"
            }
          ], 
          "key": "gp_QuaternionSLerp::Interpolate(gp_Quaternion, gp_Quaternion, Standard_Real)", 
          "returnType": "gp_Quaternion", 
          "static": "1", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Init", 
          "parent": "gp_QuaternionSLerp", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theQStart", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Quaternion", 
              "name": "theQEnd", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_QuaternionSLerp::Init(gp_Quaternion, gp_Quaternion)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "InitFromUnit", 
          "parent": "gp_QuaternionSLerp", 
          "arguments": [
            {
              "type": "gp_Quaternion", 
              "name": "theQStart", 
              "const": true, 
              "ref": true
            }, 
            {
              "type": "gp_Quaternion", 
              "name": "theQEnd", 
              "const": true, 
              "ref": true
            }
          ], 
          "key": "gp_QuaternionSLerp::InitFromUnit(gp_Quaternion, gp_Quaternion)", 
          "returnType": "void", 
          "throws": true
        }, 
        {
          "declType": "method", 
          "name": "Interpolate", 
          "parent": "gp_QuaternionSLerp", 
          "arguments": [
            {
              "type": "Standard_Real", 
              "name": "theT"
            }, 
            {
              "type": "gp_Quaternion", 
              "name": "theResultQ", 
              "ref": true
            }
          ], 
          "key": "gp_QuaternionSLerp::Interpolate(Standard_Real, gp_Quaternion)", 
          "returnType": "void", 
          "const": "1", 
          "throws": true
        }
      ], 
      "artificial": false, 
      "bases": [], 
      "location": [
        "/usr/local/include/opencascade/gp_QuaternionSLerp.hxx", 
        21
      ], 
      "key": "gp_QuaternionSLerp"
    }, 
    {
      "type": "opencascade::handle<gp_VectorWithNullMagnitude>", 
      "declType": "typedef", 
      "name": "Handle_gp_VectorWithNullMagnitude", 
      "key": "Handle_gp_VectorWithNullMagnitude"
    }, 
    {
      "type": "NCollection_Lerp<gp_Trsf>", 
      "declType": "typedef", 
      "name": "gp_TrsfNLerp", 
      "key": "gp_TrsfNLerp"
    }, 
    {
      "declType": "enum", 
      "values": [
        [
          "gp_Identity", 
          0
        ], 
        [
          "gp_Rotation", 
          1
        ], 
        [
          "gp_Translation", 
          2
        ], 
        [
          "gp_PntMirror", 
          3
        ], 
        [
          "gp_Ax1Mirror", 
          4
        ], 
        [
          "gp_Ax2Mirror", 
          5
        ], 
        [
          "gp_Scale", 
          6
        ], 
        [
          "gp_CompoundTrsf", 
          7
        ], 
        [
          "gp_Other", 
          8
        ]
      ], 
      "name": "gp_TrsfForm", 
      "key": "gp_TrsfForm"
    }, 
    {
      "declType": "enum", 
      "values": [
        [
          "gp_EulerAngles", 
          0
        ], 
        [
          "gp_YawPitchRoll", 
          1
        ], 
        [
          "gp_Extrinsic_XYZ", 
          2
        ], 
        [
          "gp_Extrinsic_XZY", 
          3
        ], 
        [
          "gp_Extrinsic_YZX", 
          4
        ], 
        [
          "gp_Extrinsic_YXZ", 
          5
        ], 
        [
          "gp_Extrinsic_ZXY", 
          6
        ], 
        [
          "gp_Extrinsic_ZYX", 
          7
        ], 
        [
          "gp_Intrinsic_XYZ", 
          8
        ], 
        [
          "gp_Intrinsic_XZY", 
          9
        ], 
        [
          "gp_Intrinsic_YZX", 
          10
        ], 
        [
          "gp_Intrinsic_YXZ", 
          11
        ], 
        [
          "gp_Intrinsic_ZXY", 
          12
        ], 
        [
          "gp_Intrinsic_ZYX", 
          13
        ], 
        [
          "gp_Extrinsic_XYX", 
          14
        ], 
        [
          "gp_Extrinsic_XZX", 
          15
        ], 
        [
          "gp_Extrinsic_YZY", 
          16
        ], 
        [
          "gp_Extrinsic_YXY", 
          17
        ], 
        [
          "gp_Extrinsic_ZYZ", 
          18
        ], 
        [
          "gp_Extrinsic_ZXZ", 
          19
        ], 
        [
          "gp_Intrinsic_XYX", 
          20
        ], 
        [
          "gp_Intrinsic_XZX", 
          21
        ], 
        [
          "gp_Intrinsic_YZY", 
          22
        ], 
        [
          "gp_Intrinsic_YXY", 
          23
        ], 
        [
          "gp_Intrinsic_ZXZ", 
          24
        ], 
        [
          "gp_Intrinsic_ZYZ", 
          25
        ]
      ], 
      "name": "gp_EulerSequence", 
      "key": "gp_EulerSequence"
    }
  ], 
  "name": "gp"
}